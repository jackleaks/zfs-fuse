
src/cmd/zdb/zdb.c,2867
const char cmdname[cmdname57,1655
uint8_t dump_opt[dump_opt58,1685
typedef void object_viewer_t(60,1709
uint64_t *zopt_object zopt_object63,1827
int zopt_objects 64,1857
int zdb_advance 65,1879
zbookmark_t zdb_noread 66,1910
libzfs_handle_t *g_zfs;g_zfs67,1961
boolean_t zdb_sig_user_data 68,1985
int zdb_sig_cksumalg 69,2023
_umem_debug_init(76,2193
_umem_logging_init(82,2285
usage(88,2382
fatal(131,4191
dump_nvlist(145,4402
dump_packed_nvlist(208,5667
const char dump_zap_stars[dump_zap_stars225,6027
const int dump_zap_width 226,6101
dump_zap_histogram(229,6170
dump_zap_stats(254,6732
dump_none(318,8674
dump_uint8(324,8763
dump_uint64(330,8860
dump_zap(336,8958
dump_zpldir(386,10162
dump_spacemap(423,11088
dump_metaslab(472,12766
dump_metaslabs(500,13490
dump_dtl(527,14096
dump_dnode(567,15117
blkid2offset(572,15205
sprintf_blkptr_compact(582,15437
zdb_indirect_cb(605,16069
dump_indirect(689,18098
dump_dsl_dir(716,18645
#define	DO(754,19959
dump_dsl_dataset(767,20204
dump_bplist(820,22134
static avl_tree_t idx_tree;873,23419
static avl_tree_t domain_tree;874,23447
static boolean_t fuid_table_loaded;875,23478
fuid_table_destroy(878,23527
print_idstr(893,23873
dump_uidgid(908,24216
dump_znode(933,24839
dump_acl(975,26203
dump_dmu_objset(981,26298
static object_viewer_t *object_viewer[object_viewer985,26375
dump_object(1028,27839
static char *objset_types[objset_types1132,30547
dump_dir(1136,30658
dump_uberblock(1221,32683
dump_config(1241,33370
dump_cachefile(1256,33704
dump_label(1302,34633
dump_one_dir(1351,35777
zdb_space_map_load(1369,36103
zdb_space_map_claim(1391,36637
zdb_leak(1471,38752
zdb_space_map_unload(1485,39106
zdb_refresh_ubsync(1506,39615
typedef struct zdb_blkstats 1528,40055
} zdb_blkstats_t;1533,40165
#define	DMU_OT_DEFERRED	1535,40184
#define	DMU_OT_TOTAL	1536,40220
#define	ZB_TOTAL	1538,40258
typedef struct zdb_cb 1540,40288
} zdb_cb_t;1546,40473
zdb_count_block(1549,40498
zdb_blkptr_cb(1607,42019
dump_block_stats(1665,43428
dump_zpool(1892,49352
#define	ZDB_FLAG_CHECKSUM	1926,50077
#define	ZDB_FLAG_DECOMPRESS	1927,50110
#define	ZDB_FLAG_BSWAP	1928,50145
#define	ZDB_FLAG_GBH	1929,50176
#define	ZDB_FLAG_INDIRECT	1930,50205
#define	ZDB_FLAG_PHYS	1931,50238
#define	ZDB_FLAG_RAW	1932,50268
#define	ZDB_FLAG_PRINT_BLKPTR	1933,50297
int flagbits[flagbits1935,50335
zdb_print_blkptr(1938,50367
zdb_dump_indirect(1988,52290
zdb_dump_gbh(1997,52432
zdb_dump_block_raw(2003,52546
zdb_dump_block(2011,52713
zdb_vdev_lookup(2050,53860
zdb_read_block(2120,55610
nvlist_string_match(2245,58843
nvlist_uint64_match(2256,59039
vdev_child_guid_match(2267,59236
vdev_child_string_match(2281,59580
vdev_guid_match(2297,59990
vdev_string_match(2309,60272
pool_match(2320,60492
find_exported_zpool(2336,60853
main(2371,61596

src/cmd/zdb/zdb_il.c,538
print_log_bp(46,1248
zil_prt_rec_create(56,1451
zil_prt_rec_remove(78,2150
zil_prt_rec_link(86,2342
zil_prt_rec_rename(95,2581
zil_prt_rec_write(107,2907
zil_prt_rec_truncate(168,4453
zil_prt_rec_setattr(177,4713
zil_prt_rec_acl(222,5793
typedef void (*zil_prt_rec_func_t)zil_prt_rec_func_t228,5967
typedef struct zil_rec_info 229,6005
} zil_rec_info_t;233,6107
static zil_rec_info_t zil_rec_info[zil_rec_info235,6126
print_log_record(260,7151
print_log_block(287,7865
print_log_stats(316,8534
dump_intent_log(339,8997

src/cmd/zdb/ptrace.c,926
#define PTRACE_FLAG_FILENAME 60,1988
#define PTRACE_OUTPUT 61,2025
#define START_TRACE 63,2077
#define FUNCTION_ENTRY_STR 64,2112
#define FUNCTION_EXIT_STR 65,2147
#define END_TRACE 66,2181
#define __NON_INSTRUMENT_FUNCTION__ 67,2215
typedef enum { FUNCTION_ENTRY,69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT 69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT } entry_t;69,2296
typedef enum { A_UNINITIALIZED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE 70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE } active_t;70,2352
gnu_ptrace_close(75,2494
static pthread_key_t key;83,2600
gnu_ptrace_process_init(87,2667
gnu_ptrace_thread_init(96,2839
gnu_ptrace(133,3617
__cyg_profile_func_enter(179,4405
__cyg_profile_func_exit(188,4621

src/cmd/zpool/zpool_util.h,114
#define	ZPOOL_UTIL_H27,948
typedef struct zpool_list zpool_list_t;57,1510
libzfs_handle_t *g_zfs;g_zfs66,1860

src/cmd/zpool/zpool_main.c,2911
_umem_debug_init(91,2382
_umem_logging_init(97,2478
	HELP_ADD,104,2585
	HELP_ATTACH,105,2596
	HELP_CLEAR,106,2610
	HELP_CREATE,107,2623
	HELP_DESTROY,108,2637
	HELP_DETACH,109,2652
	HELP_EXPORT,110,2666
	HELP_HISTORY,111,2680
	HELP_IMPORT,112,2695
	HELP_IOSTAT,113,2709
	HELP_LIST,114,2723
	HELP_OFFLINE,115,2735
	HELP_ONLINE,116,2750
	HELP_REPLACE,117,2764
	HELP_REMOVE,118,2779
	HELP_SCRUB,119,2793
	HELP_STATUS,120,2806
	HELP_UPGRADE,121,2820
	HELP_GET,122,2835
	HELP_SET123,2846
} zpool_help_t;124,2856
typedef struct zpool_command 127,2874
} zpool_command_t;131,2974
static zpool_command_t command_table[command_table142,3430
#define	NCOMMAND	172,4456
zpool_command_t *current_command;current_command174,4527
static char history_str[history_str175,4561
get_usage(178,4627
print_prop_cb(245,6780
usage(270,7355
print_vdev_tree(321,8582
add_prop_list(354,9351
zpool_do_add(416,10984
zpool_do_remove(519,13294
zpool_do_create(571,14681
zpool_do_destroy(808,20607
zpool_do_export(878,22115
max_width(935,23068
print_import_config(981,24114
show_import(1073,26326
do_import(1256,31895
zpool_do_import(1363,35276
typedef struct iostat_cbdata 1633,41591
} iostat_cbdata_t;1638,41701
print_iostat_separator(1641,41733
print_iostat_header(1651,41933
print_one_stat(1664,42250
print_vdev_stats(1678,42618
refresh_iostat(1776,45228
print_iostat(1797,45607
get_namewidth(1829,46280
zpool_do_iostat(1867,47388
typedef struct list_cbdata 2034,50734
} list_cbdata_t;2038,50836
print_header(2044,50953
print_pool(2078,51693
list_callback(2131,52817
zpool_do_list(2158,53480
zpool_get_vdev_by_name(2210,54534
zpool_do_attach_or_replace(2237,55133
zpool_do_replace(2332,56959
zpool_do_attach(2348,57492
zpool_do_detach(2365,57946
zpool_do_online(2415,58797
zpool_do_offline(2489,60431
zpool_do_clear(2545,61434
typedef struct scrub_cbdata 2575,61939
} scrub_cbdata_t;2579,62014
scrub_callback(2582,62037
zpool_do_scrub(2607,62498
typedef struct status_cbdata 2640,63114
} status_cbdata_t;2646,63252
print_scrub_status(2652,63320
typedef struct spare_cbdata 2710,64935
} spare_cbdata_t;2713,65009
find_vdev(2716,65045
find_spare(2737,65468
print_status_config(2759,65886
print_error_log(2886,69229
print_spares(2921,70111
print_l2cache(2941,70492
status_callback(2976,71323
zpool_do_status(3249,80215
typedef struct upgrade_cbdata 3289,80991
} upgrade_cbdata_t;3296,81119
upgrade_cb(3299,81151
upgrade_one(3355,82684
zpool_do_upgrade(3403,84005
typedef struct hist_cbdata 3530,87600
} hist_cbdata_t;3534,87676
char *hist_event_table[hist_event_table3536,87694
get_history_one(3581,88451
zpool_do_history(3687,90884
get_callback(3724,91547
zpool_do_get(3752,92226
typedef struct set_cbdata 3791,93117
} set_cbdata_t;3795,93212
set_callback(3798,93233
zpool_do_set(3812,93470
find_command_idx(3857,94367
main(3874,94613

src/cmd/zpool/zpool_util.c,85
safe_malloc(41,1140
safe_strdup(57,1366
zpool_no_memory(73,1625
num_logs(85,1824

src/cmd/zpool/zpool_vdev.c,634
#define	DISK_ROOT	81,2650
#define	RDISK_ROOT	82,2675
#define	BACKUP_SLICE	83,2701
boolean_t error_seen;90,2943
boolean_t is_force;91,2965
vdev_error(95,3014
libdiskmgt_error(118,3521
check_slice(135,3945
check_disk(187,5057
check_device(258,6572
check_file(284,7206
is_whole_disk(367,8969
make_leaf_vdev(399,9705
typedef struct replication_level 538,13759
} replication_level_t;542,13860
#define	ZPOOL_FUZZ	544,13884
get_replication(552,14186
check_replication(802,20414
make_disks(894,23006
is_spare(990,25452
check_in_use(1039,26563
is_grouping(1100,28161
construct_spec(1148,29140
make_root_vdev(1356,34483

src/cmd/zpool/zpool_iter.c,305
typedef struct zpool_node 45,1329
} zpool_node_t;49,1427
struct zpool_list 51,1444
zpool_compare(60,1590
add_pool(75,2000
pool_list_get(107,2816
pool_list_update(152,3824
pool_list_iter(162,4012
pool_list_remove(183,4533
pool_list_free(199,4869
pool_list_count(227,5416
for_each_pool(237,5624

src/cmd/zpool/ptrace.c,926
#define PTRACE_FLAG_FILENAME 60,1988
#define PTRACE_OUTPUT 61,2025
#define START_TRACE 63,2077
#define FUNCTION_ENTRY_STR 64,2112
#define FUNCTION_EXIT_STR 65,2147
#define END_TRACE 66,2181
#define __NON_INSTRUMENT_FUNCTION__ 67,2215
typedef enum { FUNCTION_ENTRY,69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT 69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT } entry_t;69,2296
typedef enum { A_UNINITIALIZED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE 70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE } active_t;70,2352
gnu_ptrace_close(75,2494
static pthread_key_t key;83,2600
gnu_ptrace_process_init(87,2667
gnu_ptrace_thread_init(96,2839
gnu_ptrace(133,3617
__cyg_profile_func_enter(179,4405
__cyg_profile_func_exit(188,4621

src/cmd/zfs/zfs_iter.h,95
#define	ZFS_ITER_H27,946
typedef struct zfs_sort_column 35,1008
} zfs_sort_column_t;41,1178

src/cmd/zfs/zfs_iter.c,310
typedef struct zfs_node 52,1606
} zfs_node_t;55,1685
typedef struct callback_data 57,1700
} callback_data_t;63,1851
uu_avl_pool_t *avl_pool;avl_pool65,1871
zfs_callback(72,2066
zfs_add_sort_column(118,3098
zfs_free_sort_columns(149,3700
zfs_compare(163,3898
zfs_sort(229,5545
zfs_for_each(315,7706

src/cmd/zfs/zfs_util.h,65
#define	_ZFS_UTIL_H27,947
libzfs_handle_t *g_zfs;g_zfs38,1064

src/cmd/zfs/zfs_main.c,3278
libzfs_handle_t *g_zfs;g_zfs55,1455
static FILE *mnttab_file;mnttab_file57,1480
static char history_str[history_str58,1506
_umem_debug_init(87,2643
_umem_logging_init(93,2739
	HELP_CLONE,100,2846
	HELP_CREATE,101,2859
	HELP_DESTROY,102,2873
	HELP_GET,103,2888
	HELP_INHERIT,104,2899
	HELP_UPGRADE,105,2914
	HELP_LIST,106,2929
	HELP_MOUNT,107,2941
	HELP_PROMOTE,108,2954
	HELP_RECEIVE,109,2969
	HELP_RENAME,110,2984
	HELP_ROLLBACK,111,2998
	HELP_SEND,112,3014
	HELP_SET,113,3026
	HELP_SHARE,114,3037
	HELP_SNAPSHOT,115,3050
	HELP_UNMOUNT,116,3066
	HELP_UNSHARE,117,3081
	HELP_ALLOW,118,3096
	HELP_UNALLOW119,3109
} zfs_help_t;120,3123
typedef struct zfs_command 122,3138
} zfs_command_t;126,3243
static zfs_command_t command_table[command_table137,3697
#define	NCOMMAND	167,4712
zfs_command_t *current_command;current_command169,4783
get_usage(172,4836
safe_malloc(263,8002
usage_prop_cb(280,8280
usage(310,8960
parseprop(399,11380
zfs_do_clone(436,12380
zfs_do_create(548,15046
typedef struct destroy_cbdata 749,20003
} destroy_cbdata_t;759,20216
destroy_check_dependent(765,20316
destroy_callback(821,21849
destroy_snap_clones(849,22374
zfs_do_destroy(885,23178
get_callback(1031,26553
zfs_do_get(1106,28456
inherit_recurse_cb(1284,32654
inherit_cb(1301,33055
zfs_do_inherit(1309,33186
typedef struct upgrade_cbdata 1383,34889
} upgrade_cbdata_t;1391,35099
same_pool(1394,35131
upgrade_list_callback(1406,35387
upgrade_set_callback(1442,36441
zfs_do_upgrade(1500,37966
typedef struct list_cbdata 1622,41582
} list_cbdata_t;1626,41684
print_header(1632,41801
print_dataset(1674,42764
list_callback(1734,44165
zfs_do_list(1750,44439
zfs_do_rename(1877,47364
zfs_do_promote(1957,49058
typedef struct rollback_cbdata 2002,50131
} rollback_cbdata_t;2010,50308
rollback_check(2019,50625
zfs_do_rollback(2079,52091
typedef struct set_cbdata 2169,53948
} set_cbdata_t;2172,54015
set_callback(2175,54043
zfs_do_set(2196,54543
zfs_do_snapshot(2250,55828
zfs_do_send(2312,57048
zfs_do_receive(2436,59798
typedef struct allow_cb 2495,60996
} allow_cb_t;2498,61061
zfs_print_perms(2501,61088
zfs_iter_perms(2521,61513
#define	LINES 2546,62094
zfs_print_allows(2548,62185
#define	ALLOWOPTIONS 2626,64565
#define	UNALLOWOPTIONS 2627,64598
parse_allow_args(2637,64871
zfs_do_allow(2809,68809
unallow_callback(2839,69319
zfs_do_unallow(2853,69604
typedef struct get_all_cbdata 2874,70017
} get_all_cbdata_t;2880,70156
#define	CHECK_SPINNER 2882,70177
#define	SPINNER_TIME 2883,70202
#define	MOUNT_TIME 2884,70240
get_one_dataset(2887,70288
get_all_datasets(2950,71565
dataset_cmp(2973,72021
#define	OP_SHARE	3004,72923
#define	OP_MOUNT	3005,72944
share_mount_one(3011,73013
report_mount_progress(3238,79119
append_options(3270,79976
share_mount(3289,80430
zfs_do_mount(3444,83761
zfs_do_share(3456,83985
typedef struct unshare_unmount_node 3461,84071
} unshare_unmount_node_t;3465,84178
unshare_unmount_compare(3469,84231
unshare_unmount_path(3483,84649
unshare_unmount(3599,88027
zfs_do_unmount(3921,96372
zfs_do_unshare(3933,96587
manual_mount(3943,96849
manual_unmount(4036,99310
volcheck(4074,100088
do_volcheck(4089,100422
find_command_idx(4095,100524
main(4112,100770

src/cmd/zfs/ptrace.c,926
#define PTRACE_FLAG_FILENAME 60,1988
#define PTRACE_OUTPUT 61,2025
#define START_TRACE 63,2077
#define FUNCTION_ENTRY_STR 64,2112
#define FUNCTION_EXIT_STR 65,2147
#define END_TRACE 66,2181
#define __NON_INSTRUMENT_FUNCTION__ 67,2215
typedef enum { FUNCTION_ENTRY,69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT 69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT } entry_t;69,2296
typedef enum { A_UNINITIALIZED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE 70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE } active_t;70,2352
gnu_ptrace_close(75,2494
static pthread_key_t key;83,2600
gnu_ptrace_process_init(87,2667
gnu_ptrace_thread_init(96,2839
gnu_ptrace(133,3617
__cyg_profile_func_enter(179,4405
__cyg_profile_func_exit(188,4621

src/cmd/ztest/ztest.c,4458
static char cmdname[cmdname109,4045
static char *zopt_pool zopt_pool110,4078
static uint64_t zopt_vdevs 112,4113
static uint64_t zopt_vdevtime;113,4145
static int zopt_ashift 114,4176
static int zopt_mirrors 115,4220
static int zopt_raidz 116,4249
static int zopt_raidz_parity 117,4276
static size_t zopt_vdev_size 118,4310
static int zopt_datasets 119,4357
static int zopt_threads 120,4387
static uint64_t zopt_passtime 121,4417
static uint64_t zopt_killrate 122,4470
static int zopt_verbose 123,4526
static int zopt_init 124,4555
static char *zopt_dir zopt_dir125,4581
static uint64_t zopt_time 126,4613
static int zopt_maxfaults;127,4662
static uint16_t zopt_write_fail_shift 128,4689
typedef struct ztest_block_tag 130,4733
} ztest_block_tag_t;137,4886
typedef struct ztest_args 139,4908
} ztest_args_t;161,5409
typedef void ztest_func_t(163,5426
ztest_func_t ztest_dmu_read_write;168,5540
ztest_func_t ztest_dmu_write_parallel;169,5575
ztest_func_t ztest_dmu_object_alloc_free;170,5614
ztest_func_t ztest_zap;171,5656
ztest_func_t ztest_zap_parallel;172,5680
ztest_func_t ztest_traverse;173,5713
ztest_func_t ztest_dsl_prop_get_set;174,5742
ztest_func_t ztest_dmu_objset_create_destroy;175,5779
ztest_func_t ztest_dmu_snapshot_create_destroy;176,5825
ztest_func_t ztest_spa_create_destroy;177,5873
ztest_func_t ztest_fault_inject;178,5912
ztest_func_t ztest_vdev_attach_detach;179,5945
ztest_func_t ztest_vdev_LUN_growth;180,5984
ztest_func_t ztest_vdev_add_remove;181,6020
ztest_func_t ztest_scrub;182,6056
ztest_func_t ztest_spa_rename;183,6082
typedef struct ztest_info 185,6114
} ztest_info_t;193,6489
uint64_t zopt_always 195,6506
uint64_t zopt_often 196,6552
uint64_t zopt_sometimes 197,6597
uint64_t zopt_rarely 198,6651
ztest_info_t ztest_info[ztest_info200,6703
#define	ZTEST_FUNCS	219,7496
#define	ZTEST_SYNC_LOCKS	221,7563
typedef struct ztest_shared 226,7660
} ztest_shared_t;238,7997
static char ztest_dev_template[ztest_dev_template240,8016
static ztest_shared_t *ztest_shared;ztest_shared241,8066
static int ztest_random_fd;243,8104
static int ztest_dump_core 244,8132
static boolean_t ztest_exiting 246,8165
#define	ZTEST_DIROBJ	252,8316
#define	ZTEST_MICROZAP_OBJ	253,8340
#define	ZTEST_FATZAP_OBJ	254,8369
#define	ZTEST_DIROBJ_BLOCKSIZE	256,8397
#define	ZTEST_DIRSIZE	257,8438
static void usage(259,8466
_umem_logging_init(272,8725
#define	FATAL_MSG_SZ	277,8810
char *fatal_msg;fatal_msg279,8837
fatal(282,8867
str2shift(307,9403
nicenumtoull(332,9924
usage(363,10599
ztest_random(416,12563
ztest_record_enospc(430,12779
process_options(437,12912
ztest_get_ashift(544,14857
make_vdev_file(552,14997
make_vdev_raidz(585,15881
make_vdev_mirror(615,16563
make_vdev_root(644,17257
ztest_set_random_blocksize(670,17842
ztest_random_checksum(688,18379
ztest_random_compress(703,18639
typedef struct ztest_replay 708,18729
} ztest_replay_t;711,18798
ztest_replay_create(714,18828
ztest_replay_remove(749,19598
zil_replay_func_t *ztest_replay_vector[ztest_replay_vector772,20058
ztest_spa_create_destroy(793,20610
ztest_vdev_add_remove(844,21892
vdev_lookup_by_path(884,22804
ztest_vdev_attach_detach(915,23467
ztest_vdev_LUN_growth(1068,27774
ztest_create_cb(1113,28827
ztest_destroy_cb(1130,29312
ztest_log_create(1168,30257
ztest_dmu_objset_create_destroy(1197,30970
ztest_dmu_snapshot_create_destroy(1341,34876
#define	ZTEST_TRAVERSE_BLOCKS	1364,35582
ztest_blk_cb(1367,35629
ztest_traverse(1447,37539
ztest_dmu_object_alloc_free(1514,39199
typedef struct bufwad 1723,44597
} bufwad_t;1727,44678
typedef struct dmu_read_write_dir 1729,44691
} dmu_read_write_dir_t;1733,44790
ztest_dmu_read_write(1736,44820
ztest_dmu_check_future_leak(1964,51463
ztest_dmu_write_parallel(1994,52421
#define	ZTEST_ZAP_MIN_INTS	2192,57791
#define	ZTEST_ZAP_MAX_INTS	2193,57820
#define	ZTEST_ZAP_MAX_PROPS	2194,57849
ztest_zap(2197,57888
ztest_zap_parallel(2397,63148
ztest_dsl_prop_get_set(2505,65469
ztest_error_setup(2558,66595
ztest_fault_inject(2576,66952
ztest_scrub(2683,69639
ztest_spa_rename(2696,69942
ztest_obliterate_one_disk(2762,71334
ztest_replace_one_disk(2800,72089
ztest_verify_blocks(2843,73331
ztest_walk_pool_directory(2880,74183
ztest_spa_import_export(2895,74495
ztest_suspend_monitor(2977,76324
ztest_thread(3011,77158
ztest_run(3078,78623
print_time(3308,84828
ztest_init(3337,85439
main(3369,86029

src/lib/libnvpair/include/libnvpair.h,28
#define	_LIBNVPAIR_H27,948

src/lib/libnvpair/include/sys/nvpair_impl.h,162
#define	_NVPAIR_IMPL_H28,972
typedef struct i_nvp i_nvp_t;46,1237
struct i_nvp 48,1268
#define	nvi_next	58,1512
#define	nvi_prev	59,1552
} nvpriv_t;67,1837

src/lib/libnvpair/include/sys/nvpair.h,1622
#define	_SYS_NVPAIR_H27,949
	DATA_TYPE_UNKNOWN 44,1171
	DATA_TYPE_BOOLEAN,45,1195
	DATA_TYPE_BYTE,46,1215
	DATA_TYPE_INT16,47,1232
	DATA_TYPE_UINT16,48,1250
	DATA_TYPE_INT32,49,1269
	DATA_TYPE_UINT32,50,1287
	DATA_TYPE_INT64,51,1306
	DATA_TYPE_UINT64,52,1324
	DATA_TYPE_STRING,53,1343
	DATA_TYPE_BYTE_ARRAY,54,1362
	DATA_TYPE_INT16_ARRAY,55,1385
	DATA_TYPE_UINT16_ARRAY,56,1409
	DATA_TYPE_INT32_ARRAY,57,1434
	DATA_TYPE_UINT32_ARRAY,58,1458
	DATA_TYPE_INT64_ARRAY,59,1483
	DATA_TYPE_UINT64_ARRAY,60,1507
	DATA_TYPE_STRING_ARRAY,61,1532
	DATA_TYPE_HRTIME,62,1557
	DATA_TYPE_NVLIST,63,1576
	DATA_TYPE_NVLIST_ARRAY,64,1595
	DATA_TYPE_BOOLEAN_VALUE,65,1620
	DATA_TYPE_INT8,66,1646
	DATA_TYPE_UINT8,67,1663
	DATA_TYPE_BOOLEAN_ARRAY,68,1681
	DATA_TYPE_INT8_ARRAY,69,1707
	DATA_TYPE_UINT8_ARRAY,71,1736
	DATA_TYPE_DOUBLE72,1760
	DATA_TYPE_UINT8_ARRAY74,1784
} data_type_t;76,1814
typedef struct nvpair 78,1830
} nvpair_t;87,2196
typedef struct nvlist 90,2229
} nvlist_t;96,2460
#define	NV_VERSION	99,2506
#define	NV_ENCODE_NATIVE	102,2555
#define	NV_ENCODE_XDR	103,2582
#define	NV_UNIQUE_NAME	106,2673
#define	NV_UNIQUE_NAME_TYPE	107,2701
#define	NV_FLAG_NOENTOK	110,2774
#define	NV_ALIGN(113,2829
#define	NV_ALIGN4(114,2880
#define	NVP_SIZE(116,2920
#define	NVP_NAME(117,2961
#define	NVP_TYPE(118,3020
#define	NVP_NELEM(119,3061
#define	NVP_VALUE(120,3109
#define	NVL_VERSION(123,3207
#define	NVL_SIZE(124,3253
#define	NVL_FLAG(125,3294
typedef struct nv_alloc_ops nv_alloc_ops_t;128,3365
typedef struct nv_alloc 130,3410
} nv_alloc_t;133,3484
struct nv_alloc_ops 135,3499

src/lib/libnvpair/nvpair_alloc_system.c,235
nv_alloc_sys(34,1023
nv_free_sys(45,1188
const nv_alloc_ops_t system_ops_def 54,1309
nv_alloc_t nv_alloc_nosleep_def 62,1507
nv_alloc_t *nv_alloc_nosleep nv_alloc_nosleep67,1571
nv_alloc_t *nv_alloc_sleep nv_alloc_sleep68,1625

src/lib/libnvpair/nvpair.c,5591
#define	offsetof(50,1352
#define	skip_whitespace(52,1410
#define	NVP_SIZE_CALC(129,4378
#define	NV_STAT_EMBEDDED	136,4685
#define	EMBEDDED_NVL(137,4714
#define	EMBEDDED_NVL_ARRAY(138,4777
#define	NVP_VALOFF(140,4848
#define	NVPAIR2I_NVP(141,4923
nv_alloc_init(146,5016
nv_alloc_reset(163,5319
nv_alloc_fini(170,5435
nvlist_lookup_nv_alloc(177,5556
nv_mem_zalloc(189,5754
nv_mem_free(201,5954
nv_priv_init(209,6099
nv_priv_alloc(218,6263
nv_priv_alloc_embedded(240,6711
nvlist_init(253,6952
nvlist_alloc(267,7258
nvlist_xalloc(278,7536
nvp_buf_alloc(303,8024
nvp_buf_free(328,8441
nvp_buf_link(340,8727
nvp_buf_unlink(359,9168
i_validate_type_nelem(385,9773
i_validate_nvpair_name(435,10853
i_validate_nvpair_value(449,11214
i_validate_nvpair(479,11899
nvlist_copy_pairs(504,12508
nvpair_free(529,13074
nvlist_free(553,13462
nvlist_contains_nvp(583,14015
nvlist_dup(603,14350
nvlist_xdup(614,14616
nvlist_remove_all(637,14989
nvlist_remove(669,15546
i_get_value_size(704,16325
nvlist_copy_embedded(820,19016
nvlist_add_common(843,19477
nvlist_add_boolean(970,22425
nvlist_add_boolean_value(976,22554
nvlist_add_byte(982,22710
nvlist_add_int8(988,22846
nvlist_add_uint8(994,22981
nvlist_add_int16(1000,23119
nvlist_add_uint16(1006,23257
nvlist_add_int32(1012,23398
nvlist_add_uint32(1018,23536
nvlist_add_int64(1024,23677
nvlist_add_uint64(1030,23815
nvlist_add_double(1037,23978
nvlist_add_string(1044,24124
nvlist_add_boolean_array(1050,24275
nvlist_add_byte_array(1057,24441
nvlist_add_int8_array(1063,24595
nvlist_add_uint8_array(1069,24748
nvlist_add_int16_array(1075,24904
nvlist_add_uint16_array(1081,25060
nvlist_add_int32_array(1087,25219
nvlist_add_uint32_array(1093,25375
nvlist_add_int64_array(1099,25534
nvlist_add_uint64_array(1105,25690
nvlist_add_string_array(1111,25849
nvlist_add_hrtime(1118,26015
nvlist_add_nvlist(1124,26156
nvlist_add_nvlist_array(1130,26297
nvlist_next_nvpair(1137,26495
nvpair_name(1166,27141
nvpair_type(1172,27210
nvpair_type_is_array(1178,27271
nvpair_value_common(1199,27831
nvlist_lookup_common(1273,29430
nvlist_lookup_boolean(1298,30032
nvlist_lookup_boolean_value(1304,30170
nvlist_lookup_byte(1311,30340
nvlist_lookup_int8(1317,30485
nvlist_lookup_uint8(1323,30629
nvlist_lookup_int16(1329,30776
nvlist_lookup_uint16(1335,30923
nvlist_lookup_int32(1341,31073
nvlist_lookup_uint32(1347,31220
nvlist_lookup_int64(1353,31370
nvlist_lookup_uint64(1359,31517
nvlist_lookup_double(1366,31689
nvlist_lookup_string(1373,31844
nvlist_lookup_nvlist(1379,31991
nvlist_lookup_boolean_array(1385,32142
nvlist_lookup_byte_array(1393,32321
nvlist_lookup_int8_array(1400,32487
nvlist_lookup_uint8_array(1406,32648
nvlist_lookup_int16_array(1413,32816
nvlist_lookup_uint16_array(1420,32984
nvlist_lookup_int32_array(1427,33155
nvlist_lookup_uint32_array(1434,33323
nvlist_lookup_int64_array(1441,33494
nvlist_lookup_uint64_array(1448,33662
nvlist_lookup_string_array(1455,33833
nvlist_lookup_nvlist_array(1462,34001
nvlist_lookup_hrtime(1469,34173
nvlist_lookup_pairs(1475,34323
nvlist_lookup_nvpair_ei_sep(1558,36723
nvlist_lookup_nvpair(1723,40435
int nvlist_lookup_nvpair_embedded_index(1733,40759
nvlist_exists(1740,40955
nvpair_value_boolean_value(1761,41354
nvpair_value_byte(1767,41493
nvpair_value_int8(1773,41612
nvpair_value_uint8(1779,41730
nvpair_value_int16(1785,41851
nvpair_value_uint16(1791,41972
nvpair_value_int32(1797,42096
nvpair_value_uint32(1803,42217
nvpair_value_int64(1809,42341
nvpair_value_uint64(1815,42462
nvpair_value_double(1822,42592
nvpair_value_string(1829,42721
nvpair_value_nvlist(1835,42842
nvpair_value_boolean_array(1841,42967
nvpair_value_byte_array(1847,43123
nvpair_value_int8_array(1853,43271
nvpair_value_uint8_array(1859,43418
nvpair_value_int16_array(1865,43568
nvpair_value_uint16_array(1871,43718
nvpair_value_int32_array(1877,43871
nvpair_value_uint32_array(1883,44021
nvpair_value_int64_array(1889,44174
nvpair_value_uint64_array(1895,44324
nvpair_value_string_array(1901,44477
nvpair_value_nvlist_array(1907,44627
nvpair_value_hrtime(1913,44781
nvlist_add_nvpair(1922,44947
nvlist_merge(1939,45386
#define	NVS_OP_ENCODE	1953,45604
#define	NVS_OP_DECODE	1954,45628
#define	NVS_OP_GETSIZE	1955,45652
typedef struct nvs_ops nvs_ops_t;1957,45678
} nvstream_t;1964,45813
struct nvs_ops 1985,46355
} nvs_header_t;1998,46828
nvs_encode_pairs(2001,46856
nvs_decode_pairs(2017,47244
nvs_getsize_pairs(2055,47999
nvs_operation(2078,48495
nvs_embedded(2112,49063
nvs_embedded_nvl_array(2142,49618
nvlist_common(2201,50814
nvlist_size(2283,52482
nvlist_pack(2293,52673
nvlist_xpack(2305,53008
nvlist_unpack(2356,54245
nvlist_xunpack(2367,54547
} nvs_native_t;2404,55520
nvs_native_create(2407,55548
nvs_native_destroy(2431,56047
native_cp(2436,56099
nvs_native_nvlist(2466,56681
nvs_native_nvl_fini(2508,57554
nvpair_native_embedded(2527,57978
nvpair_native_embedded_array(2545,58489
nvpair_native_string_array(2573,59332
nvs_native_nvp_op(2603,60056
nvs_native_nvp_size(2659,61315
nvs_native_nvpair(2695,61874
static const nvs_ops_t nvs_native_ops 2734,62760
nvs_native(2743,62920
nvs_xdr_create(2782,63861
nvs_xdr_destroy(2806,64384
nvs_xdr_nvlist(2819,64570
nvs_xdr_nvl_fini(2846,65055
nvs_xdr_nvp_op(2864,65391
nvs_xdr_nvp_size(3048,69408
#define	NVS_XDR_HDR_LEN	3167,72389
#define	NVS_XDR_DATA_LEN(3168,72432
#define	NVS_XDR_MAX_LEN(3170,72540
nvs_xdr_nvpair(3175,72682
static const struct nvs_ops nvs_xdr_ops 3221,73652
nvs_xdr(3230,73799

src/lib/libnvpair/libnvpair.c,138
indent(43,1333
nvlist_print_with_indent(54,1487
nvlist_print(270,6778
nvpair_value_match_regex(292,7707
nvpair_value_match(615,15716

src/lib/libnvpair/nvpair_alloc_fixed.c,250
typedef struct nvbuf 51,1542
} nvbuf_t;55,1734
nv_fixed_init(66,1992
nv_fixed_alloc(84,2408
nv_fixed_free(99,2691
nv_fixed_reset(105,2816
const nv_alloc_ops_t nv_fixed_ops_def 112,2920
const nv_alloc_ops_t *nv_fixed_ops nv_fixed_ops120,3136

src/lib/libuutil/uu_alloc.c,57
uu_zalloc(37,1068
uu_free(52,1232
uu_msprintf(58,1271

src/lib/libuutil/uu_ident.c,127
#define	IS_ALPHA(48,1481
#define	IS_DIGIT(51,1564
is_valid_ident(55,1626
is_valid_component(76,2033
uu_check_name(93,2309

src/lib/libuutil/include/libuutil.h,2024
#define	_LIBUUTIL_H28,969
#define	UU_DEFAULT	42,1108
#define	UU_ERROR_NONE	47,1163
#define	UU_ERROR_INVALID_ARGUMENT 48,1203
#define	UU_ERROR_UNKNOWN_FLAG	49,1262
#define	UU_ERROR_NO_MEMORY	50,1320
#define	UU_ERROR_CALLBACK_FAILED 51,1369
#define	UU_ERROR_NOT_SUPPORTED	52,1435
#define	UU_ERROR_EMPTY	53,1498
#define	UU_ERROR_UNDERFLOW	54,1548
#define	UU_ERROR_OVERFLOW	55,1602
#define	UU_ERROR_INVALID_CHAR	56,1655
#define	UU_ERROR_INVALID_DIGIT	57,1724
#define	UU_ERROR_SYSTEM	59,1798
#define	UU_ERROR_UNKNOWN	60,1856
#define	UU_EXIT_OK	65,1954
#define	UU_EXIT_FATAL	66,1991
#define	UU_EXIT_USAGE	67,2034
#define	UU_PROFILE_DEFAULT	72,2110
#define	UU_PROFILE_LAUNCHER	73,2139
extern void uu_die(91,2535
typedef struct uu_dprintf uu_dprintf_t;113,3166
	UU_DPRINTF_SILENT,116,3222
	UU_DPRINTF_FATAL,117,3242
	UU_DPRINTF_WARNING,118,3261
	UU_DPRINTF_NOTICE,119,3282
	UU_DPRINTF_INFO,120,3302
	UU_DPRINTF_DEBUG121,3320
} uu_dprintf_severity_t;122,3338
#define	UU_NAME_DOMAIN	135,3705
#define	UU_NAME_PATH	136,3770
typedef int uu_compare_fn_t(158,4313
#define	UU_WALK_ROBUST	166,4563
#define	UU_WALK_REVERSE	167,4629
#define	UU_WALK_PREORDER	169,4691
#define	UU_WALK_POSTORDER	170,4756
#define	UU_WALK_ERROR	175,4871
#define	UU_WALK_NEXT	176,4897
#define	UU_WALK_DONE	177,4921
typedef int uu_walk_fn_t(182,4996
typedef struct uu_list_pool uu_list_pool_t;187,5087
typedef struct uu_list uu_list_t;188,5131
typedef struct uu_list_node 190,5166
} uu_list_node_t;192,5222
typedef struct uu_list_walk uu_list_walk_t;194,5241
typedef uintptr_t uu_list_index_t;196,5286
#define	UU_LIST_POOL_DEBUG	230,5996
#define	UU_LIST_DEBUG	248,6457
#define	UU_LIST_SORTED	249,6490
typedef struct uu_avl_pool uu_avl_pool_t;286,7571
typedef struct uu_avl uu_avl_t;287,7613
typedef struct uu_avl_node 289,7646
} uu_avl_node_t;295,7753
typedef struct uu_avl_walk uu_avl_walk_t;297,7771
typedef uintptr_t uu_avl_index_t;299,7814
#define	UU_AVL_POOL_DEBUG	333,8523
#define	UU_AVL_DEBUG	351,8968

src/lib/libuutil/include/libuutil_common.h,34
#define	_LIBUUTIL_COMMON_H28,955

src/lib/libuutil/include/libuutil_impl.h,580
#define	_LIBUUTIL_IMPL_H28,974
struct uu_dprintf 49,1227
#define	UU_PTR_ENCODE(63,1704
#define	UU_PTR_ENCODE(65,1773
#define	UU_PTR_DECODE(68,1844
typedef struct uu_list_node_impl 73,1931
} uu_list_node_impl_t;76,2040
struct uu_list_walk 78,2064
struct uu_list 88,2246
#define	UU_LIST_PTR(104,2623
#define	UU_LIST_POOL_MAXNAME	106,2684
struct uu_list_pool 108,2717
typedef struct avl_node		uu_avl_node_impl_t;125,3065
struct uu_avl_walk 127,3111
struct uu_avl 137,3274
#define	UU_AVL_PTR(150,3521
#define	UU_AVL_POOL_MAXNAME	152,3576
struct uu_avl_pool 154,3608

src/lib/libuutil/uu_misc.c,631
#define	TEXT_DOMAIN 44,1210
static pthread_key_t	uu_error_key 57,1647
static pthread_key_t	uu_error_key 59,1736
static pthread_mutex_t	uu_key_lock 60,1775
static int		uu_error_key_setup 63,1873
static pthread_mutex_t	uu_panic_lock 65,1910
static const char	*uu_panic_format;uu_panic_format67,2003
static va_list		uu_panic_args;69,2066
static pthread_t	uu_panic_thread;70,2097
static uint32_t		_uu_main_error;72,2132
uu_set_error(75,2171
uu_error(104,2879
uu_strerror(120,3233
uu_panic(188,4585
assfail(212,5017
uu_lockup(221,5204
uu_release(232,5401
uu_release_child(243,5605
uu_init(252,5708
uu_init(255,5765

src/lib/libuutil/uu_open.c,77
#define	TMPPATHFMT	40,1115
#define	TMPPATHFMT	42,1163
uu_open_tmp(47,1231

src/lib/libuutil/uu_pname.c,431
static const char PNAME_FMT[PNAME_FMT41,1160
static const char ERRNO_FMT[ERRNO_FMT42,1200
static const char *pname;pname44,1243
uu_die_internal(47,1282
uu_exit_fatal(60,1528
uu_exit_usage(66,1591
uu_alt_exit(72,1653
uu_warn_internal(89,1982
uu_vwarn(101,2248
uu_warn(108,2359
uu_die_internal(117,2508
uu_vdie(133,2753
uu_die(140,2870
uu_vxdie(149,3018
uu_xdie(156,3141
uu_setpname(165,3303
uu_getpname(200,3862

src/lib/libuutil/uu_list.c,1152
#define	ELEM_TO_NODE(35,1042
#define	NODE_TO_ELEM(38,1134
#define	INDEX_MAX	49,1521
#define	INDEX_NEXT(50,1565
#define	INDEX_TO_NODE(52,1637
#define	NODE_TO_INDEX(53,1706
#define	INDEX_VALID(54,1782
#define	INDEX_CHECK(55,1845
#define	POOL_TO_MARKER(57,1895
static uu_list_pool_t	uu_null_lpool 59,1955
static pthread_mutex_t	uu_lpool_list_lock 60,2029
uu_list_pool_create(63,2118
uu_list_pool_destroy(110,3347
uu_list_node_init(133,4004
uu_list_node_fini(157,4794
uu_list_create(180,5445
uu_list_destroy(231,6858
list_insert(263,7814
uu_list_insert(292,8595
uu_list_find(315,9169
uu_list_nearest_next(348,9898
uu_list_nearest_prev(373,10479
list_walk_init(397,11075
list_walk_advance(427,11852
list_walk_fini(442,12147
uu_list_walk_start(456,12439
uu_list_walk_next(476,12788
uu_list_walk_end(488,12989
uu_list_walk(495,13070
uu_list_remove(540,14162
uu_list_teardown(580,15168
uu_list_insert_before(598,15508
uu_list_insert_after(624,16137
uu_list_numnodes(650,16766
uu_list_first(656,16837
uu_list_last(665,17008
uu_list_next(674,17178
uu_list_prev(685,17376
uu_list_lockup(699,17655
uu_list_release(710,17882

src/lib/libuutil/uu_avl.c,1099
static uu_avl_pool_t	uu_null_apool 35,1041
static pthread_mutex_t	uu_apool_list_lock 36,1114
#define	INDEX_MAX	44,1338
#define	INDEX_NEXT(45,1382
#define	INDEX_DECODE(47,1454
#define	INDEX_ENCODE(48,1498
#define	INDEX_VALID(49,1562
#define	INDEX_CHECK(50,1625
#define	NODE_ARRAY(58,1911
#define	POOL_TO_MARKER(61,2002
#define	DEAD_MARKER	63,2054
uu_avl_pool_create(66,2097
uu_avl_pool_destroy(114,3345
uu_avl_node_init(137,3994
uu_avl_node_fini(162,4735
struct uu_avl_node_compare_info 184,5347
uu_avl_node_compare(192,5482
uu_avl_create(210,5838
uu_avl_destroy(249,6851
uu_avl_numnodes(278,7617
uu_avl_first(284,7697
uu_avl_last(290,7771
uu_avl_next(296,7843
uu_avl_prev(302,7933
_avl_walk_init(308,8028
_avl_walk_advance(334,8630
_avl_walk_fini(350,8896
uu_avl_walk_start(363,9161
uu_avl_walk_next(383,9507
uu_avl_walk_end(389,9599
uu_avl_walk(396,9678
uu_avl_remove(421,10210
uu_avl_teardown(457,11060
uu_avl_find(472,11332
uu_avl_insert(493,11813
uu_avl_nearest_next(527,12758
uu_avl_nearest_prev(537,13075
uu_avl_lockup(550,13474
uu_avl_release(561,13699

src/lib/libuutil/uu_dprintf.c,185
#define	FACILITY_FMT	38,1102
#define	TEXT_DOMAIN 41,1162
strseverity(45,1221
uu_dprintf_create(66,1774
uu_dprintf(97,2309
uu_dprintf_destroy(116,2692
uu_dprintf_getname(125,2799

src/lib/libuutil/uu_strtoint.c,137
#define	MAX_BASE	34,1021
#define	IS_DIGIT(36,1042
#define	CTOI(38,1090
strtoint(42,1229
uu_strtoint(164,3128
uu_strtouint(235,4328

src/lib/libavl/include/sys/avl.h,263
#define	_AVL_H27,942
typedef struct avl_tree avl_tree_t;110,3456
typedef struct avl_node avl_node_t;115,3566
typedef uintptr_t avl_index_t;121,3701
#define	AVL_BEFORE	127,3788
#define	AVL_AFTER	128,3811
#define	AVL_NEXT(207,6074
#define	AVL_PREV(208,6135

src/lib/libavl/include/sys/avl_impl.h,630
#define	_AVL_IMPL_H28,969
struct avl_node 61,1687
#define	AVL_XPARENT(68,1946
#define	AVL_SETPARENT(69,1988
#define	AVL_XCHILD(71,2041
#define	AVL_SETCHILD(72,2087
#define	AVL_XBALANCE(74,2160
#define	AVL_SETBALANCE(75,2204
struct avl_node 90,2796
#define	AVL_XPARENT(100,3059
#define	AVL_SETPARENT(101,3124
#define	AVL_XCHILD(107,3281
#define	AVL_SETCHILD(108,3330
#define	AVL_XBALANCE(116,3603
#define	AVL_SETBALANCE(117,3660
#define	AVL_NODE2DATA(128,3890
#define	AVL_DATA2NODE(129,3951
#define	AVL_INDEX2NODE(136,4080
#define	AVL_INDEX2CHILD(137,4133
#define	AVL_MKINDEX(138,4170
struct avl_tree 146,4450

src/lib/libavl/avl.c,594
static const int  avl_child2balance[avl_child2balance110,4739
static const int  avl_balance2child[avl_balance2child111,4789
avl_walk(127,5230
avl_first(174,6188
avl_last(193,6563
avl_nearest(217,7087
avl_find(246,7752
avl_rotation(294,8851
avl_insert(473,13551
avl_insert_here(563,15884
avl_add(623,17294
avl_remove(666,18782
#define	AVL_REINSERT(811,22423
avl_update_lt(816,22523
avl_update_gt(833,22852
avl_update(850,23181
avl_create(873,23585
avl_destroy(896,24018
avl_numnodes(908,24197
avl_is_empty(915,24288
#define	CHILDBIT	921,24374
avl_destroy_nodes(943,24942

src/lib/libsolkerncompat/mutex.c,131
zmutex_init(36,1102
zmutex_destroy(51,1486
mutex_enter(59,1634
mutex_tryenter(69,1845
mutex_exit(85,2110
mutex_owner(93,2256

src/lib/libsolkerncompat/main.c,264
char hw_serial[hw_serial39,1118
int ncpus;41,1139
uint64_t physmem;42,1150
unsigned long _pagesize;43,1168
unsigned int _pageshift;44,1193
kmem_cache_t *vnode_cache;vnode_cache45,1218
void libsolkerncompat_init(47,1246
void libsolkerncompat_exit(77,2202

src/lib/libsolkerncompat/vnode.c,1690
#define VOPSTATS_UPDATE(65,1854
#define VOPSTATS_UPDATE_IO(66,1902
#define ISROFILE(69,2030
enum vtype iftovt_tab[iftovt_tab77,2282
ushort_t vttoif_tab[vttoif_tab82,2413
static const fs_operation_trans_def_t vn_ops_table[vn_ops_table94,2638
vn_vfswlock(240,6834
vn_vfsunlock(263,7369
vnode_t *vn_alloc(vn_alloc280,7790
void vn_reinit(302,8231
void vn_recycle(312,8353
void vn_free(327,8642
vn_setpath(340,8940
vn_renamepath(412,10543
vn_copypath(430,10955
int vn_fromfd(464,11659
vn_open(534,13360
vn_openat(568,14076
vn_rdwr(589,14595
void vn_rele(641,15675
void vn_close(657,16002
vn_make_ops(670,16275
vn_freevnodeops(700,16944
vn_setops(709,17078
vn_is_readonly(718,17203
fop_open(724,17285
fop_close(792,19211
fop_read(822,19785
fop_readlink(839,20092
fop_fsync(853,20291
fop_getattr(867,20486
fop_inactive(882,20702
fop_putpage(893,20921
fop_realvp(909,21154
fop_lookup(922,21331
fop_readdir(950,21902
fop_create(968,22237
fop_mkdir(995,22720
fop_symlink(1021,23181
fop_remove(1039,23456
fop_rmdir(1054,23667
fop_link(1070,23897
fop_rename(1086,24128
fop_space(1103,24384
fop_setattr(1120,24634
fop_setsecattr(1135,24849
fop_getsecattr(1150,25077
fop_access(1165,25305
fop_write(1180,25514
fop_rwlock(1196,25779
fop_rwunlock(1209,25967
fop_seek(1219,26126
root_getattr(1233,26330
root_fsync(1241,26473
root_close(1249,26639
root_read(1256,26779
root_write(1282,27515
fd_read(1308,28255
fd_write(1329,28601
const fs_operation_def_t root_fvnodeops_template[root_fvnodeops_template1352,29158
const fs_operation_def_t fd_fvnodeops_template[fd_fvnodeops_template1361,29371
xva_init(1378,29821
xva_getxoptattr(1392,30168

src/lib/libsolkerncompat/refstr.c,86
refstr_alloc(37,1108
refstr_value(52,1426
refstr_hold(58,1525
refstr_rele(64,1598

src/lib/libsolkerncompat/kobj.c,100
kobj_open_file(36,1133
kobj_read_file(52,1449
kobj_close_file(63,1679
kobj_get_filesize(70,1796

src/lib/libsolkerncompat/policy.c,685
long pwd_buflen 40,1180
long grp_buflen 41,1201
cred_t st_kcred 43,1223
cred_t *kcred kcred44,1248
uid_t crgetuid(46,1276
gid_t crgetgid(51,1334
int crgetngroups(56,1392
const gid_t *crgetgroups(crgetgroups61,1443
int groupmember(66,1505
secpolicy_vnode_setid_modify(160,3424
void secpolicy_setid_clear(173,3728
secpolicy_setid_setsticky_clear(185,4047
int secpolicy_vnode_setid_retain(223,4972
#define ATTR_FLAG_PRIV(230,5104
secpolicy_xvattr(238,5303
secpolicy_vnode_setattr(327,8128
secpolicy_vnode_setids_setgids(445,11207
secpolicy_vnode_setdac(463,11606
secpolicy_vnode_access(500,12759
secpolicy_vnode_create_gid(540,13722
secpolicy_vnode_owner(551,13982

src/lib/libsolkerncompat/zmod.c,47
z_uncompress(30,973
z_compress_level(42,1186

src/lib/libsolkerncompat/kstat.c,88
kstat_t *kstat_create(kstat_create29,964
kstat_install(37,1145
kstat_delete(42,1195

src/lib/libsolkerncompat/kmem.c,36
uint64_t get_real_memusage(34,1098

src/lib/libsolkerncompat/include/strings.h,30
#define _SOL_STRINGS_H28,972

src/lib/libsolkerncompat/include/fs/fs_subr.h,31
#define	_SYS_FS_SUBR_H30,1035

src/lib/libsolkerncompat/include/util/qsort.h,0

src/lib/libsolkerncompat/include/unistd.h,29
#define _SOL_UNISTD_H28,971

src/lib/libsolkerncompat/include/libsolkerncompat.h,0

src/lib/libsolkerncompat/include/rpc/xdr.h,316
#define _SOL_RPC_XDR_H_36,1212
#define xdr_control(46,1469
#define	XDR_GET_BYTES_AVAIL 52,1562
struct xdr_bytesrec 54,1593
typedef struct xdr_bytesrec xdr_bytesrec;59,1668
#define XDR_PEEK 71,2155
#define XDR_SKIPBYTES 72,2179
#define XDR_RDMAGET 73,2203
#define XDR_RDMASET 74,2227
xdrmem_control(78,2301

src/lib/libsolkerncompat/include/sharefs/share.h,0

src/lib/libsolkerncompat/include/acl/acl_common.h,29
#define	_ACL_COMMON_H27,949

src/lib/libsolkerncompat/include/fcntl.h,29
#define O_LARGEFILE 38,1305

src/lib/libsolkerncompat/include/vm/seg_vn.h,0

src/lib/libsolkerncompat/include/vm/seg_kmem.h,31
#define _VM_SEG_KMEM_H29,1007

src/lib/libsolkerncompat/include/vm/pvn.h,92
#define _VM_PVN_H29,1002
#define pvn_vplist_dirty(31,1021
#define pvn_write_done(32,1071

src/lib/libsolkerncompat/include/vm/seg_enum.h,164
#define _VM_SEG_ENUM_H29,1007
enum seg_rw 34,1092
	S_OTHER,35,1106
	S_READ,36,1146
	S_WRITE,37,1185
	S_EXEC,38,1225
	S_CREATE,39,1269
	S_READ_NOCOW	40,1316

src/lib/libsolkerncompat/include/vm/seg_kpm.h,0

src/lib/libsolkerncompat/include/vm/anon.h,0

src/lib/libsolkerncompat/include/vm/kpm.h,0

src/lib/libsolkerncompat/include/vm/page.h,74
#define _VM_PAGE_H29,1003
typedef struct page 33,1047
} page_t;35,1091

src/lib/libsolkerncompat/include/vm/as.h,0

src/lib/libsolkerncompat/include/tsol/label.h,0

src/lib/libsolkerncompat/include/tsoc/label.h,0

src/lib/libsolkerncompat/include/sys/u8_textprep_data.h,1926
#define	_SYS_U8_TEXTPREP_DATA_H69,3330
} u8_displacement_t;132,5867
#define	U8_TBL_ELEMENT_NOT_DEF	139,6070
#define	N_	140,6109
#define	U8_TBL_ELEMENT_FILLER	142,6147
#define	FIL_	143,6185
static const uchar_t u8_common_b1_tbl[u8_common_b1_tbl149,6339
static const uchar_t u8_combining_class_b2_tbl[u8_combining_class_b2_tbl220,8583
static const uchar_t u8_combining_class_b3_tbl[u8_combining_class_b3_tbl366,13180
static const uchar_t u8_combining_class_b4_tbl[u8_combining_class_b4_tbl989,34182
static const uchar_t u8_composition_b1_tbl[u8_composition_b1_tbl4736,182774
static const uchar_t u8_composition_b2_tbl[u8_composition_b2_tbl4807,185023
static const u8_displacement_t u8_composition_b3_tbl[u8_composition_b3_tbl4885,187360
static const uchar_t u8_composition_b4_tbl[u8_composition_b4_tbl5772,218820
static const uint16_t u8_composition_b4_16bit_tbl[u8_composition_b4_16bit_tbl8649,331209
static const uchar_t u8_composition_final_tbl[u8_composition_final_tbl9006,347542
static const uchar_t u8_decomp_b2_tbl[u8_decomp_b2_tbl10669,430368
static const u8_displacement_t u8_decomp_b3_tbl[u8_decomp_b3_tbl10815,434954
static const uchar_t u8_decomp_b4_tbl[u8_decomp_b4_tbl12230,485972
static const uint16_t u8_decomp_b4_16bit_tbl[u8_decomp_b4_16bit_tbl20497,809952
static const uchar_t u8_decomp_final_tbl[u8_decomp_final_tbl22604,907026
static const uchar_t u8_case_common_b2_tbl[u8_case_common_b2_tbl27455,1148915
static const u8_displacement_t u8_tolower_b3_tbl[u8_tolower_b3_tbl27601,1153508
static const uchar_t u8_tolower_b4_tbl[u8_tolower_b4_tbl28268,1184151
static const uchar_t u8_tolower_final_tbl[u8_tolower_final_tbl30795,1282758
static const u8_displacement_t u8_toupper_b3_tbl[u8_toupper_b3_tbl31378,1311382
static const uchar_t u8_toupper_b4_tbl[u8_toupper_b4_tbl32045,1342034
static const uchar_t u8_toupper_final_tbl[u8_toupper_final_tbl34782,1448793

src/lib/libsolkerncompat/include/sys/filio.h,0

src/lib/libsolkerncompat/include/sys/mutex.h,196
#define	_SYS_MUTEX_H28,948
typedef struct kmutex 32,992
} kmutex_t;35,1057
#define	MUTEX_DEFAULT	37,1070
#define	MUTEX_HELD(39,1123
#define	mutex_init(41,1174
#define	mutex_destroy(42,1237

src/lib/libsolkerncompat/include/sys/param.h,297
#define _SOL_KERN_SYS_PARAM_H28,979
#define PAGESIZE 35,1103
#define PAGESHIFT 36,1132
#define PAGEOFFSET 37,1162
#define PAGEMASK 38,1196
#define ptob(40,1230
#define btop(41,1276
#define btopr(42,1314
#define MAXLINK 44,1368
#define MAXOFF32_T 46,1407
#define	_POSIX_VDISABLE 60,2089

src/lib/libsolkerncompat/include/sys/zfs_debug.h,0

src/lib/libsolkerncompat/include/sys/bootstat.h,56
#define _SYS_BOOTSTAT_H28,986
struct bootstat 30,1011

src/lib/libsolkerncompat/include/sys/attr.h,0

src/lib/libsolkerncompat/include/sys/conf.h,0

src/lib/libsolkerncompat/include/sys/rwlock.h,282
#define	_SYS_RWLOCK_H28,949
typedef struct krwlock 33,1017
} krwlock_t;38,1136
typedef int krw_t;40,1150
#define	RW_READER	42,1170
#define	RW_WRITER	43,1190
#define	RW_DEFAULT	44,1210
#define RW_WRITE_HELD(48,1253
#define RW_LOCK_HELD(49,1307
#define	rw_downgrade(58,1683

src/lib/libsolkerncompat/include/sys/sunldi.h,100
#define _SYS_SUNLDI_H28,943
typedef void * ldi_ident_t;30,966
typedef void * ldi_handle_t;31,994

src/lib/libsolkerncompat/include/sys/debug.h,425
#define _SYS_DEBUG_H28,983
#define ASSERT_FAIL(32,1026
#define VERIFY(38,1223
#define __assert(41,1324
#define ASSERT(44,1393
#define	VERIFY3_IMPL(47,1436
#define	VERIFY3_IMPL(50,1517
#define	VERIFY3S(64,1962
#define	VERIFY3U(65,2019
#define	VERIFY3P(66,2077
#define	ASSERT3S(69,2151
#define	ASSERT3U(70,2187
#define	ASSERT3P(71,2223
#define	ASSERT3S(73,2265
#define	ASSERT3U(74,2309
#define	ASSERT3P(75,2353

src/lib/libsolkerncompat/include/sys/systm.h,239
#define _SYS_SYSTM_H28,983
#define	lbolt	41,1187
#define	lbolt64	42,1221
#define	hz	43,1257
static inline int fuword8(49,1435
#define kcopy(55,1536
#define ovbcopy(56,1588
static inline int copystr(58,1643
#define copyout(89,2417

src/lib/libsolkerncompat/include/sys/ctype.h,0

src/lib/libsolkerncompat/include/sys/rwstlock.h,181
#define _SYS_RWSTLOCK_H27,913
typedef krwlock_t rwslock_t;31,963
#define rwst_init(33,993
#define rwst_tryenter(34,1037
#define rwst_exit(35,1081
#define rwst_destroy(36,1119

src/lib/libsolkerncompat/include/sys/cred_impl.h,53
#define _SYS_CRED_IMPL_H27,952
struct cred 32,1024

src/lib/libsolkerncompat/include/sys/mkdev.h,0

src/lib/libsolkerncompat/include/sys/policy.h,570
#define _SYS_POLICY_H29,1006
	PRIV_FILE_CHOWN,35,1082
	PRIV_FILE_CHOWN_SELF36,1100
#define HAS_PRIVILEGE(42,1175
#define PRIV_POLICY(43,1225
#define secpolicy_sys_config(45,1308
#define secpolicy_zfs(46,1348
#define secpolicy_zinject(47,1377
#define secpolicy_fs_mount(48,1410
#define secpolicy_fs_mount_clearopts(49,1454
#define secpolicy_fs_unmount(50,1511
#define secpolicy_vnode_stky_modify(53,1621
#define secpolicy_basic_link(55,1665
#define secpolicy_vnode_utime_modify(56,1758
#define secpolicy_vnode_remove(57,1871
#define secpolicy_nfs(58,1978

src/lib/libsolkerncompat/include/sys/cred.h,200
#define	_SYS_CRED_H35,1186
typedef struct cred cred_t;50,1375
#define	CRED(68,1702
#define	VALID_UID(157,4286
#define	VALID_GID(160,4372
#define crgetsidlist(179,4965
#define crgetsid(180,5008

src/lib/libsolkerncompat/include/sys/int_limits.h,0

src/lib/libsolkerncompat/include/sys/list.h,0

src/lib/libsolkerncompat/include/sys/taskq.h,377
#define	_SYS_TASKQ_H28,970
#define	TASKQ_NAMELEN	39,1082
typedef struct taskq taskq_t;41,1108
typedef uintptr_t taskqid_t;42,1138
typedef void (task_func_t)43,1167
#define	TASKQ_PREPOPULATE	48,1262
#define	TASKQ_CPR_SAFE	49,1335
#define	TASKQ_DYNAMIC	50,1394
#define	TQ_SLEEP	56,1559
#define	TQ_NOSLEEP	57,1608
#define	TQ_NOQUEUE	58,1672
#define	TQ_NOALLOC	59,1735

src/lib/libsolkerncompat/include/sys/thread.h,178
#define _SYS_THREAD_H27,911
typedef pthread_t kthread_t;31,956
#define thread_create(35,1050
#define thread_exit(36,1146
#define thr_self(37,1188
#define curthread 39,1223

src/lib/libsolkerncompat/include/sys/varargs.h,0

src/lib/libsolkerncompat/include/sys/fs/swapnode.h,0

src/lib/libsolkerncompat/include/sys/extdirent.h,219
#define	_SYS_EXTDIRENT_H27,952
typedef struct edirent 46,1397
} edirent_t;52,1663
#define	EDIRENT_RECLEN(54,1677
#define	EDIRENT_NAMELEN(56,1774
#define	ED_CASE_CONFLICT 64,1973
#define	ED_CASE_CONFLICTS(69,2096

src/lib/libsolkerncompat/include/sys/dditypes.h,3277
#define	_SYS_DDITYPES_H28,952
typedef	struct __ddi_dma_handle *ddi_dma_handle_t;ddi_dma_handle_t54,1594
typedef	struct __ddi_dma_win *ddi_dma_win_t;ddi_dma_win_t64,1994
typedef	struct __ddi_dma_seg *ddi_dma_seg_t;ddi_dma_seg_t79,2713
} ddi_dma_cookie_t;92,3076
#define	dmac_laddress	94,3097
#define	dmac_notused 96,3156
#define	dmac_address 97,3197
#define	dmac_address	99,3244
#define	dmac_notused	100,3282
typedef struct __ddi_iblock_cookie *ddi_iblock_cookie_t;ddi_iblock_cookie_t113,3479
} ddi_idevice_cookie_t;120,3741
#define	idev_vector	121,3765
#define	idev_priority	122,3802
typedef struct __ddi_regspec *ddi_regspec_t;ddi_regspec_t127,3877
typedef struct __ddi_intrspec *ddi_intrspec_t;ddi_intrspec_t132,3957
typedef struct __ddi_softintr *ddi_softintr_t;ddi_softintr_t139,4085
typedef struct __dev_info *dev_info_t;dev_info_t144,4169
typedef struct __ddi_devmap_data *ddi_devmap_data_t;ddi_devmap_data_t149,4249
typedef struct __ddi_devid *ddi_devid_t;ddi_devid_t154,4330
#define	DEVID_NONE	159,4398
#define	DEVID_SCSI3_WWN	160,4420
#define	DEVID_SCSI_SERIAL	161,4447
#define	DEVID_FAB	162,4475
#define	DEVID_ENCAP	163,4496
#define	DEVID_ATA_SERIAL	164,4519
#define	DEVID_SCSI3_VPD_T10	165,4546
#define	DEVID_SCSI3_VPD_EUI	166,4576
#define	DEVID_SCSI3_VPD_NAA	167,4606
#define	DEVID_MAXTYPE	168,4636
#define	DEVID_SCSI_ENCODE_VERSION1	173,4703
#define	DEVID_SCSI_ENCODE_VERSION2	174,4741
#define	DEVID_SCSI_ENCODE_VERSION_LATEST	175,4779
#define	DEVID_MINOR_NAME_ALL	178,4900
#define	DEVID_MINOR_NAME_ALL_CHR	179,4942
#define	DEVID_MINOR_NAME_ALL_BLK	180,4987
	DDI_DEVMAP_VALIDATE 186,5122
} ddi_devmap_cmd_t;187,5184
	DS_INVAL 198,5531
	DS_PROTO 199,5547
	DS_LINKED,200,5562
	DS_BOUND,201,5595
	DS_INITIALIZED,202,5631
	DS_PROBED,203,5675
	DS_ATTACHED,204,5715
	DS_READY	205,5778
} ddi_node_state_t;206,5842
typedef enum {EPL_KERNEL,EPL_KERNEL211,5891
typedef enum {EPL_KERNEL, EPL_INTERRUPT,211,5891
typedef enum {EPL_KERNEL, EPL_INTERRUPT, EPL_HIGHLEVEL}EPL_HIGHLEVEL211,5891
typedef enum {EPL_KERNEL, EPL_INTERRUPT, EPL_HIGHLEVEL} ddi_plevel_t;211,5891
typedef struct ddi_event_cookie *ddi_eventcookie_t;ddi_eventcookie_t212,5961
typedef struct ddi_event_callbacks *ddi_callback_id_t;ddi_callback_id_t213,6013
typedef struct ddi_device_acc_attr 224,6154
} ddi_device_acc_attr_t;229,6349
#define	DDI_DEVICE_ATTR_V0 231,6375
#define	DDI_DEVICE_ATTR_V1 232,6410
#define	 DDI_NEVERSWAP_ACC	237,6474
#define	 DDI_STRUCTURE_LE_ACC	238,6506
#define	 DDI_STRUCTURE_BE_ACC	239,6541
#define	DDI_STRICTORDER_ACC	244,6608
#define	DDI_UNORDERED_OK_ACC 245,6641
#define	DDI_MERGING_OK_ACC	246,6678
#define	DDI_LOADCACHING_OK_ACC 247,6710
#define	DDI_STORECACHING_OK_ACC 248,6747
#define	DDI_DATA_SZ01_ACC	253,6805
#define	DDI_DATA_SZ02_ACC	254,6833
#define	DDI_DATA_SZ04_ACC	255,6861
#define	DDI_DATA_SZ08_ACC	256,6889
#define	VERS_ACCHDL 261,6947
typedef struct __ddi_acc_handle *ddi_acc_handle_t;ddi_acc_handle_t263,6978
typedef struct ddi_acc_hdl 266,7036
} ddi_acc_hdl_t;282,7706
} peekpoke_ctlops_t;295,7957
typedef struct __ddi_periodic *ddi_periodic_t;ddi_periodic_t300,8035
#define	DDI_DEFAULT_ACC	307,8155
#define	DDI_FLAGERR_ACC	308,8211
#define	DDI_CAUTIOUS_ACC	309,8279

src/lib/libsolkerncompat/include/sys/ddi.h,26
#define _SYS_DDI_H28,940

src/lib/libsolkerncompat/include/sys/refstr_impl.h,57
#define	_SYS_REFSTR_IMPL_H28,949
struct refstr 45,1271

src/lib/libsolkerncompat/include/sys/dirent.h,437
#define	_SYS_DIRENT_H32,1057
typedef struct dirent 45,1205
} dirent_t;50,1419
typedef	struct dirent32 56,1499
} dirent32_t;61,1713
typedef struct dirent64 70,1861
} dirent64_t;75,2081
#define	DIRENT64_RECLEN(81,2209
#define	DIRENT64_NAMELEN(83,2307
#define	DIRENT32_RECLEN(85,2390
#define	DIRENT32_NAMELEN(87,2488
#define	getdents	105,2966
#define	getdents64	113,3185
#define	dirent64	114,3214
#define	dirent64_t	115,3239

src/lib/libsolkerncompat/include/sys/fem.h,0

src/lib/libsolkerncompat/include/sys/vnode.h,8303
#define _SYS_VNODE_H29,1005
typedef int (*fs_generic_func_p)fs_generic_func_p43,1270
typedef struct vn_vfslocks_entry 45,1349
} vn_vfslocks_entry_t;47,1404
typedef enum vtype 53,1532
	VNON 54,1553
	VREG 55,1565
	VDIR 56,1577
	VBLK 57,1589
	VCHR 58,1601
	VLNK 59,1613
	VFIFO 60,1625
	VDOOR 61,1637
	VPROC 62,1649
	VSOCK 63,1661
	VPORT 64,1673
	VBAD 65,1686
} vtype_t;66,1698
#define VROOT 71,1733
#define VNOCACHE 72,1789
#define VNOMAP 73,1853
#define VDUP 74,1915
#define VNOSWAP 75,1988
#define VNOMOUNT 76,2063
#define VISSWAP 77,2127
#define VSWAPLIKE 78,2188
#define V_XATTRDIR 80,2259
#define VMODSORT 81,2319
#define LOOKUP_DIR 86,2378
#define LOOKUP_XATTR 87,2433
#define CREATE_XATTR_DIR 88,2497
#define V_RDDIR_ENTFLAGS 93,2591
#define V_WRITELOCK_TRUE 99,2766
#define V_WRITELOCK_FALSE 100,2834
#define VSUID 105,2984
#define VSGID 106,3038
#define VSVTX 107,3093
#define VREAD 112,3179
#define VWRITE 113,3202
#define VEXEC 114,3225
#define MODEMASK 116,3249
#define PERMMASK 117,3272
#define V_ACE_MASK 122,3323
#define V_APPEND 123,3400
#define MANDMODE(129,3528
#define MANDLOCK(130,3596
#define IS_SWAPVP(132,3665
#define IS_DEVVP(133,3733
typedef struct vnode 137,3891
} vnode_t;153,4771
typedef struct vattr 155,4783
} vattr_t;172,5657
typedef struct vsecattr 178,5743
} vsecattr_t;186,6109
#define VSA_ACL 189,6146
#define VSA_ACLCNT 190,6185
#define VSA_DFACL 191,6224
#define VSA_DFACLCNT 192,6263
#define VSA_ACE 193,6302
#define VSA_ACECNT 194,6341
#define VSA_ACE_ALLTYPES 195,6380
#define VSA_ACE_ACLFLAGS 196,6419
typedef int caller_context_t;198,6488
#define AT_TYPE 213,6724
#define AT_MODE 214,6750
#define AT_UID 215,6776
#define AT_GID 216,6802
#define AT_FSID 217,6828
#define AT_NODEID 218,6854
#define AT_NLINK 219,6880
#define AT_SIZE 220,6906
#define AT_ATIME 221,6932
#define AT_MTIME 222,6958
#define AT_CTIME 223,6984
#define AT_RDEV 224,7010
#define AT_BLKSIZE 225,7036
#define AT_NBLOCKS 226,7062
#define AT_SEQ 227,7088
#define AT_XVATTR 228,7114
#define AT_ALL 230,7142
#define AT_STAT 234,7329
#define AT_TIMES 237,7468
#define AT_NOSET 238,7514
enum rm 244,7663
enum rm { RMFILE,244,7663
enum rm { RMFILE, RMDIRECTORY 244,7663
enum symfollow 245,7733
enum symfollow { NO_FOLLOW,245,7733
enum symfollow { NO_FOLLOW, FOLLOW 245,7733
enum vcexcl 246,7807
enum vcexcl { NONEXCL,246,7807
enum vcexcl { NONEXCL, EXCL 246,7807
enum create 247,7873
enum create { CRCREAT,247,7873
enum create { CRCREAT, CRMKNOD,247,7873
enum create { CRCREAT, CRMKNOD, CRMKDIR 247,7873
#define ATTR_UTIME 252,7985
#define ATTR_EXEC 253,8052
#define ATTR_COMM 254,8114
#define ATTR_HINT 255,8179
#define ATTR_REAL 256,8253
#define ATTR_NOACLCHECK 257,8323
#define ATTR_TRIGGER 258,8403
typedef enum vnevent	261,8523
	VE_SUPPORT	262,8546
	VE_RENAME_SRC	263,8575
	VE_RENAME_DEST	264,8630
	VE_REMOVE	265,8698
	VE_RMDIR	266,8743
} vnevent_t;267,8796
typedef enum rm        rm_t;269,8810
typedef enum symfollow symfollow_t;270,8839
typedef enum vcexcl    vcexcl_t;271,8875
typedef enum create    create_t;272,8908
#define vn_vfslocks_getlock(279,9081
#define vn_vfslocks_getlock_vnode(280,9140
#define vn_vfslocks_rele(281,9202
#define VOP_GETATTR(284,9260
#define VOP_FSYNC(285,9335
#define VOP_PUTPAGE(286,9393
#define VOP_CLOSE(287,9435
#define VN_RELE(290,9485
#define	VN_HOLD(291,9537
#define vn_invalid(311,10444
#define vn_has_cached_data(312,10488
#define vn_in_dnlc(313,10525
#define vn_remove(316,10575
#define vn_rename(317,10621
#define vn_exists(318,10675
#define vnevent_rename_src(324,10861
#define vnevent_rename_dest(325,10911
#define vnevent_rename_dest_dir(326,10961
#define vnevent_remove(327,11011
#define vnevent_rmdir(328,11061
#define vnevent_create(329,11111
#define vnevent_link(330,11161
#define vnevent_support(331,11211
#define vn_setops(334,11266
#define vn_make_ops(335,11310
#define vn_ismntpt(339,11379
#define	VNODE_OPS	352,11698
typedef struct vnodeops 464,16308
} vnodeops_t;467,16418
#define	VOP_OPEN(553,20539
#define	VOP_CLOSE(555,20606
#define	VOP_READ(557,20679
#define	VOP_WRITE(559,20754
#define	VOP_IOCTL(561,20831
#define	VOP_SETFL(563,20918
#define	VOP_GETATTR(565,20985
#define	VOP_SETATTR(567,21060
#define	VOP_ACCESS(569,21135
#define	VOP_LOOKUP(571,21210
#define	VOP_CREATE(573,21337
#define	VOP_REMOVE(575,21466
#define	VOP_LINK(577,21537
#define	VOP_RENAME(579,21616
#define	VOP_MKDIR(581,21713
#define	VOP_RMDIR(583,21812
#define	VOP_READDIR(585,21891
#define	VOP_SYMLINK(587,21980
#define	VOP_READLINK(589,22077
#define	VOP_FSYNC(591,22150
#define	VOP_INACTIVE(593,22225
#define	VOP_FID(595,22286
#define	VOP_RWLOCK(597,22341
#define	VOP_RWUNLOCK(599,22396
#define	VOP_SEEK(601,22455
#define	VOP_CMP(603,22526
#define	VOP_FRLOCK(605,22581
#define	VOP_SPACE(607,22674
#define	VOP_REALVP(609,22757
#define	VOP_GETPAGE(611,22818
#define	VOP_PUTPAGE(613,22939
#define	VOP_MAP(615,23022
#define	VOP_ADDMAP(617,23125
#define	VOP_DELMAP(619,23234
#define	VOP_POLL(621,23343
#define	VOP_DUMP(623,23452
#define	VOP_PATHCONF(625,23531
#define	VOP_PAGEIO(627,23614
#define	VOP_DUMPCTL(629,23725
#define	VOP_DISPOSE(631,23804
#define	VOP_GETSECATTR(633,23891
#define	VOP_SETSECATTR(635,23974
#define	VOP_SHRLOCK(637,24057
#define	VOP_VNEVENT(639,24142
#define	VOPNAME_OPEN	642,24232
#define	VOPNAME_CLOSE	643,24261
#define	VOPNAME_READ	644,24292
#define	VOPNAME_WRITE	645,24321
#define	VOPNAME_IOCTL	646,24352
#define	VOPNAME_SETFL	647,24383
#define	VOPNAME_GETATTR	648,24414
#define	VOPNAME_SETATTR	649,24449
#define	VOPNAME_ACCESS	650,24484
#define	VOPNAME_LOOKUP	651,24517
#define	VOPNAME_CREATE	652,24550
#define	VOPNAME_REMOVE	653,24583
#define	VOPNAME_LINK	654,24616
#define	VOPNAME_RENAME	655,24645
#define	VOPNAME_MKDIR	656,24678
#define	VOPNAME_RMDIR	657,24709
#define	VOPNAME_READDIR	658,24740
#define	VOPNAME_SYMLINK	659,24775
#define	VOPNAME_READLINK	660,24810
#define	VOPNAME_FSYNC	661,24846
#define	VOPNAME_INACTIVE	662,24877
#define	VOPNAME_FID	663,24913
#define	VOPNAME_RWLOCK	664,24940
#define	VOPNAME_RWUNLOCK	665,24973
#define	VOPNAME_SEEK	666,25009
#define	VOPNAME_CMP	667,25038
#define	VOPNAME_FRLOCK	668,25065
#define	VOPNAME_SPACE	669,25098
#define	VOPNAME_REALVP	670,25129
#define	VOPNAME_GETPAGE	671,25162
#define	VOPNAME_PUTPAGE	672,25197
#define	VOPNAME_MAP	673,25232
#define	VOPNAME_ADDMAP	674,25259
#define	VOPNAME_DELMAP	675,25292
#define	VOPNAME_POLL	676,25325
#define	VOPNAME_DUMP	677,25354
#define	VOPNAME_PATHCONF	678,25383
#define	VOPNAME_PAGEIO	679,25419
#define	VOPNAME_DUMPCTL	680,25452
#define	VOPNAME_DISPOSE	681,25487
#define	VOPNAME_GETSECATTR	682,25522
#define	VOPNAME_SETSECATTR	683,25562
#define	VOPNAME_SHRLOCK	684,25602
#define	VOPNAME_VNEVENT	685,25637
#define AV_SCANSTAMP_SZ 687,25673
typedef struct xoptattr 692,25799
} xoptattr_t;706,26371
#define XVA_MAPSIZE 731,27471
#define XVA_MAGIC 732,27538
typedef struct xvattr 772,29608
} xvattr_t;780,30093
#define XAT0_INDEX 801,30940
#define XAT0_CREATETIME 802,31019
#define XAT0_ARCHIVE 803,31085
#define XAT0_SYSTEM 804,31139
#define XAT0_READONLY 805,31192
#define XAT0_HIDDEN 806,31247
#define XAT0_NOUNLINK 807,31300
#define XAT0_IMMUTABLE 808,31355
#define XAT0_APPENDONLY 809,31411
#define XAT0_NODUMP 810,31468
#define XAT0_OPAQUE 811,31521
#define XAT0_AV_QUARANTINED 812,31574
#define XAT0_AV_MODIFIED 813,31650
#define XAT0_AV_SCANSTAMP 814,31724
#define XAT0_ALL_ATTRS 816,31800
#define XVA_MASK 822,32083
#define XVA_SHFT 823,32162
#define XVA_INDEX(830,32413
#define XVA_ATTRBIT(831,32491
#define XAT_CREATETIME 839,32760
#define XAT_ARCHIVE 840,32837
#define XAT_SYSTEM 841,32911
#define XAT_READONLY 842,32984
#define XAT_HIDDEN 843,33059
#define XAT_NOUNLINK 844,33132
#define XAT_IMMUTABLE 845,33207
#define XAT_APPENDONLY 846,33283
#define XAT_NODUMP 847,33360
#define XAT_OPAQUE 848,33433
#define XAT_AV_QUARANTINED 849,33506
#define XAT_AV_MODIFIED 850,33587
#define XAT_AV_SCANSTAMP 851,33665
#define XVA_RTNATTRMAP(860,34074
#define XVA_SET_REQ(866,34262
#define XVA_SET_RTN(875,34658
#define XVA_ISSET_REQ(884,35088
#define XVA_ISSET_RTN(894,35621

src/lib/libsolkerncompat/include/sys/kidmap.h,446
#define _SOL_KERN_SYS_IDMAP_H29,1014
typedef int idmap_get_handle_t;34,1089
typedef int idmap_stat;35,1121
#define kidmap_get_create(37,1146
#define kidmap_get_destroy(38,1194
#define kidmap_get_mappings(40,1237
#define kidmap_getuidbysid(42,1283
#define kidmap_getgidbysid(43,1340
#define kidmap_getsidbyuid(45,1398
#define kidmap_getsidbygid(46,1455
#define kidmap_batch_getuidbysid(48,1513
#define kidmap_batch_getgidbysid(49,1576

src/lib/libsolkerncompat/include/sys/dumphdr.h,0

src/lib/libsolkerncompat/include/sys/machlock.h,0

src/lib/libsolkerncompat/include/sys/byteorder.h,1313
#define	_SYS_BYTEORDER_H41,1350
#define	ntohl(61,1757
#define	ntohll(62,1778
#define	ntohs(63,1800
#define	htonl(64,1821
#define	htonll(65,1842
#define	htons(66,1864
#define	_IN_PORT_T71,1948
typedef uint16_t in_port_t;72,1967
#define	_IN_ADDR_T76,2022
typedef uint32_t in_addr_t;77,2041
#define	BSWAP_8(102,2781
#define	BSWAP_16(103,2813
#define	BSWAP_32(104,2873
#define	BSWAP_64(105,2937
#define	BMASK_8(107,3002
#define	BMASK_16(108,3034
#define	BMASK_32(109,3069
#define	BMASK_64(110,3108
#define	BE_8(116,3233
#define	BE_16(117,3261
#define	BE_32(118,3290
#define	BE_64(119,3319
#define	LE_8(120,3348
#define	LE_16(121,3376
#define	LE_32(122,3405
#define	LE_64(123,3434
#define	LE_8(125,3469
#define	LE_16(126,3497
#define	LE_32(127,3526
#define	LE_64(128,3555
#define	BE_8(129,3584
#define	BE_16(130,3612
#define	BE_32(131,3641
#define	BE_64(132,3670
#define	BE_IN8(140,3801
#define	BE_IN16(143,3843
#define	BE_IN32(146,3925
#define	BE_IN64(149,4010
#define	LE_IN8(152,4095
#define	LE_IN16(155,4137
#define	LE_IN32(158,4221
#define	LE_IN64(161,4308
#define	BE_OUT8(169,4491
#define	BE_OUT16(171,4552
#define	BE_OUT32(175,4655
#define	BE_OUT64(179,4761
#define	LE_OUT8(183,4867
#define	LE_OUT16(185,4928
#define	LE_OUT32(189,5031
#define	LE_OUT64(193,5137

src/lib/libsolkerncompat/include/sys/unistd.h,33
#define _SOL_SYS_UNISTD_H24,869

src/lib/libsolkerncompat/include/sys/inttypes.h,63
#define _SOL_SYS_INTTYPES_H28,977
#define _INT64_TYPE32,1029

src/lib/libsolkerncompat/include/sys/crc32.h,0

src/lib/libsolkerncompat/include/sys/kmem.h,511
#define _SYS_KMEM_H29,1004
#define ZFSFUSE_MAX_ARCSIZE 35,1103
#define KM_SLEEP 40,1166
#define KM_PUSHPAGE 41,1198
#define KM_NOSLEEP 42,1227
#define KMC_NODEBUG 43,1260
typedef umem_cache_t kmem_cache_t;45,1293
#define kmem_alloc(55,1598
#define kmem_zalloc(56,1638
#define kmem_free(57,1680
#define kmem_cache_alloc(58,1718
#define kmem_cache_free(59,1770
#define kmem_cache_create(61,1821
#define kmem_cache_destroy(63,1943
#define kmem_debugging(65,1998
#define kmem_cache_reap_now(66,2025

src/lib/libsolkerncompat/include/sys/cpuvar.h,57
#define _SYS_CPUVAR_H29,1006
#define max_ncpus 33,1052

src/lib/libsolkerncompat/include/sys/file.h,84
#define _SOL_KERN_SYS_FILE_H29,1013
typedef struct file 36,1137
} file_t;43,1412

src/lib/libsolkerncompat/include/sys/vfs.h,2330
#define _SYS_VFS_H29,1003
typedef struct vfsops vfsops_t;37,1141
typedef struct vfs 40,1235
} vfs_t;54,1599
struct mounta 65,1891
#define VFS_INIT(88,2299
#define VFS_HOLD(89,2364
#define VFS_RELE(90,2402
#define vfs_devismounted(92,2441
#define vfs_clearmntopt(93,2475
#define vfs_setmntopt(94,2519
#define vfs_optionisset(95,2565
#define vfs_set_feature(96,2604
#define VFS_RDONLY 101,2668
#define VFS_MLOCK 102,2718
#define VFS_MWAIT 103,2789
#define VFS_NOSETUID 104,2853
#define VFS_REMOUNT 105,2907
#define VFS_NOTRUNC 106,2969
#define VFS_UNLINKABLE 107,3039
#define VFS_PXFS 108,3108
#define VFS_UNMOUNTED 109,3176
#define VFS_NBMAND 110,3243
#define VFS_XATTR 111,3314
#define VFS_NODEVICES 112,3382
#define VFS_NOEXEC 113,3450
#define VFS_STATS 114,3509
#define VFS_XID 115,3575
#define VFS_NORESOURCE 117,3646
#define VFS_NOMNTPT 118,3693
typedef uint64_t        vfs_feature_t;127,4070
#define VFSFT_XVATTR 129,4110
#define VFSFT_CASEINSENSITIVE 130,4190
#define VFSFT_NOCASESENSITIVE 131,4270
#define VFSFT_DIRENTFLAGS 132,4343
#define VFSFT_ACLONCREATE 133,4419
#define VFSFT_ACEMASKONACCESS 134,4496
#define MAXFIDSZ 155,5448
#define OLD_MAXFIDSZ 156,5472
typedef struct fid 158,5497
} fid_t;166,5683
#define fid_len 168,5693
#define fid_data 169,5722
enum whymountroot 174,5814
enum whymountroot { ROOT_INIT,174,5814
enum whymountroot { ROOT_INIT, ROOT_REMOUNT,174,5814
enum whymountroot { ROOT_INIT, ROOT_REMOUNT, ROOT_UNMOUNT}ROOT_UNMOUNT174,5814
typedef enum whymountroot whymountroot_t;175,5874
enum vntrans 180,5966
	VNTRANS_EXISTS,181,5981
	VNTRANS_IDLED,182,5998
	VNTRANS_RECLAIMED,183,6014
	VNTRANS_DESTROYED184,6034
typedef enum vntrans vntrans_t;186,6056
#define	VFS_OPS	192,6232
struct vfsops 206,6779
#define VFS_MOUNT(216,7110
#define VFS_UNMOUNT(217,7179
#define VFS_STATVFS(218,7246
#define VFS_FREEVFS(219,7306
#define VFS_SYNC(220,7362
#define VFSNAME_MOUNT 222,7427
#define VFSNAME_UNMOUNT 223,7461
#define VFSNAME_ROOT 224,7497
#define VFSNAME_STATVFS 225,7530
#define VFSNAME_SYNC 226,7566
#define VFSNAME_VGET 227,7599
#define VFSNAME_MOUNTROOT 228,7632
#define VFSNAME_FREEVFS 229,7670
#define VFSNAME_VNSTATE 230,7706
typedef struct vfssw 236,7784
} vfssw_t;239,7945
#define zfstype 243,8019
#define nfstype 244,8037

src/lib/libsolkerncompat/include/sys/condvar.h,101
#define _SYS_CONDVAR_H29,984
typedef pthread_cond_t kcondvar_t;38,1106
#define	CV_DEFAULT	40,1142

src/lib/libsolkerncompat/include/sys/random.h,29
#define _SYS_RANDOM_H28,984

src/lib/libsolkerncompat/include/sys/stropts.h,0

src/lib/libsolkerncompat/include/sys/disp.h,85
#define _SYS_DISP_H28,982
#define	minclsyspri	30,1003
#define	maxclsyspri	31,1026

src/lib/libsolkerncompat/include/sys/bitmap.h,29
#define _SYS_BITMAP_H28,984

src/lib/libsolkerncompat/include/sys/mntent.h,116
#define _SYS_MNTENT_H28,984
#define MNTTYPE_ROOT 30,1007
#define MNTTYPE_FD 31,1073
#define MNTTYPE_ZFS 32,1137

src/lib/libsolkerncompat/include/sys/zfs_context.h,61
#define	_SYS_ZFS_CONTEXT_H27,954
#define	CPU_SEQID 67,1764

src/lib/libsolkerncompat/include/sys/open.h,0

src/lib/libsolkerncompat/include/sys/vfs_opreg.h,238
#define	_SYS_VFS_OPREG_H27,952
typedef union fs_func 46,1276
} fs_func_p;51,1537
typedef struct fs_operation_def 60,1785
} fs_operation_def_t;63,1929
typedef struct fs_operation_trans_def 77,2618
} fs_operation_trans_def_t;82,2869

src/lib/libsolkerncompat/include/sys/bootconf.h,0

src/lib/libsolkerncompat/include/sys/trap.h,0

src/lib/libsolkerncompat/include/sys/fcntl.h,96
#define _SYS_FCNTL_H28,983
#define F_FREESP 32,1025
typedef struct flock64 flock64_t;34,1068

src/lib/libsolkerncompat/include/sys/stack.h,0

src/lib/libsolkerncompat/include/sys/kobj.h,48
#define _SYS_KOBJ_H28,982
struct _buf 33,1051

src/lib/libsolkerncompat/include/sys/mode.h,103
#define	_SYS_MODE_H32,1033
#define	IFTOVT(51,1319
#define	VTTOIF(52,1372
#define	MAKEIMODE(53,1413

src/lib/libsolkerncompat/include/sys/fm/protocol.h,0

src/lib/libsolkerncompat/include/sys/fm/util.h,60
#define _SOL_SYS_FM_UTIL_H28,976
#define fm_panic 32,1030

src/lib/libsolkerncompat/include/sys/refstr.h,69
#define	_SYS_REFSTR_H28,944
typedef struct refstr refstr_t;41,1120

src/lib/libsolkerncompat/include/sys/time.h,169
#define _SOL_KERN_SYS_TIME_H29,1013
#define gethrestime_sec(34,1093
#define gethrestime(35,1130
#define TIMESTRUC_TO_TIME(37,1203
#define TIME_TO_TIMESTRUC(38,1256

src/lib/libsolkerncompat/include/sys/buf.h,76
#define _SYS_BUF_H28,981
#define B_ASYNC 30,1001
#define B_INVAL 31,1062

src/lib/libsolkerncompat/include/sys/pathname.h,116
#define	_SYS_PATHNAME_H36,1212
typedef struct pathname 63,1981
} pathname_t;68,2182
#define	pn_pathleft(70,2197

src/lib/libsolkerncompat/include/sys/callb.h,223
#define _SYS_CALLB_H28,983
typedef struct callb_cpr 30,1005
} callb_cpr_t;32,1053
#define	CALLB_CPR_INIT(34,1069
#define	CALLB_CPR_SAFE_BEGIN(38,1154
#define	CALLB_CPR_SAFE_END(42,1238
#define	CALLB_CPR_EXIT(46,1327

src/lib/libsolkerncompat/include/sys/efi_partition.h,0

src/lib/libsolkerncompat/include/sys/share.h,57
#define _SYS_SHARE_H28,983
#define cleanshares(30,1005

src/lib/libsolkerncompat/include/sys/vm.h,0

src/lib/libsolkerncompat/include/sys/statvfs.h,569
#define	_SYS_STATVFS_H32,1058
#define	_FSTYPSZ	47,1224
#define	FSTYPSZ	50,1309
typedef struct statvfs 54,1400
} statvfs_t;72,2271
typedef struct statvfs32 78,2361
} statvfs32_t;94,3188
typedef struct statvfs64 100,3310
} statvfs64_t;118,4228
typedef struct statvfs64_32 129,4415
} statvfs64_32_t;145,5267
#define	ST_RDONLY	157,5425
#define	ST_NOSUID	158,5476
#define	ST_NOTRUNC	159,5546
#define	statvfs_t	170,5859
#define	statvfs	171,5890
#define	fstatvfs	172,5918
#define	statvfs64_t	185,6296
#define	statvfs64	186,6327
#define	fstatvfs64	187,6354

src/lib/libsolkerncompat/include/sys/vmsystm.h,0

src/lib/libsolkerncompat/include/sys/aio_req.h,0

src/lib/libsolkerncompat/include/sys/sdt.h,180
#define _SYS_SDT_H28,981
#define	DTRACE_PROBE(39,1272
#define	DTRACE_PROBE1(44,1376
#define	DTRACE_PROBE2(49,1487
#define	DTRACE_PROBE3(54,1604
#define	DTRACE_PROBE4(59,1727

src/lib/libsolkerncompat/include/sys/systeminfo.h,33
#define _SOL_SYSTEMINFO_H28,975

src/lib/libsolkerncompat/include/sys/dnlc.h,178
#define _SYS_DNLC_H28,982
#define dnlc_remove(30,1003
#define dnlc_purge_vfsp(31,1039
#define dnlc_lookup(32,1079
#define dnlc_update(33,1111
#define DNLC_NO_VNODE 35,1151

src/lib/libsolkerncompat/include/sys/t_lock.h,198
#define	_SYS_T_LOCK_H34,1079
#define	DISP_LOCK_INIT(81,2066
#define	DISP_LOCK_HELD(82,2125
#define	DISP_LOCK_DESTROY(83,2178
#define	NO_LOCKS_HELD	92,2506
#define	NO_COMPETING_THREADS	95,2566

src/lib/libsolkerncompat/include/sys/sid.h,774
#define	_SYS_SID_H28,947
#define	SIDSYS_ALLOC_IDS	46,1171
#define	SID_EXTEND_RANGE	48,1224
#define	SID_NEW_RANGE	49,1251
#define	SIDSYS_IDMAP_REG	51,1277
#define	SIDSYS_IDMAP_UNREG	52,1304
#define	SIDSYS_SID2ID	54,1334
#define	SIDSYS_ID2SID	55,1358
#define	KSIDLIST_MEM(58,1398
typedef struct ksiddomain 61,1545
} ksiddomain_t;66,1670
typedef struct ksid 68,1687
} ksid_t;73,1888
typedef enum ksid_index 75,1899
	KSID_USER,76,1925
	KSID_GROUP,77,1937
	KSID_OWNER,78,1950
	KSID_COUNT	79,1963
} ksid_index_t;80,1996
typedef struct ksidlist 87,2145
} ksidlist_t;92,2319
typedef struct credsid 94,2334
} credsid_t;98,2508
#define ksid_getdomain(127,3254
#define ksid_getrid(128,3299
#define ksid_lookupdomain(129,3341
#define ksiddomain_rele(130,3386

src/lib/libsolkerncompat/include/sys/uio.h,1395
#define _SOL_SYS_UIO_H40,1335
typedef struct iovec iovec_t;61,1795
typedef struct iovec 65,1853
} iovec_t;68,1910
typedef struct iovec 70,1927
} iovec_t;77,2033
typedef	struct iovec32 84,2148
} iovec32_t;87,2213
typedef enum uio_seg 96,2340
typedef enum uio_seg { UIO_USERSPACE,96,2340
typedef enum uio_seg { UIO_USERSPACE, UIO_SYSSPACE,96,2340
typedef enum uio_seg { UIO_USERSPACE, UIO_SYSSPACE, UIO_USERISPACE 96,2340
typedef enum uio_seg { UIO_USERSPACE, UIO_SYSSPACE, UIO_USERISPACE } uio_seg_t;96,2340
typedef struct uio 98,2421
} uio_t;107,2823
#define	UIOA_IOV_MAX	115,3030
typedef struct uioa_page_s 117,3055
} uioa_page_t;122,3293
typedef struct uioa_s 124,3309
} uioa_t;141,4029
#define	UIOA_ALLOC	143,4040
#define	UIOA_INIT	144,4107
#define	UIOA_ENABLED	145,4171
#define	UIOA_FINI	146,4233
#define	UIOA_CLR	148,4298
#define	UIOA_POLL	150,4362
#define	uio_loffset	152,4413
#define	uio_offset	154,4468
#define	uio_offset	156,4511
#define	uio_llimit	159,4550
#define	uio_limit	161,4603
#define	uio_limit	163,4644
typedef enum uio_rw 169,4706
typedef enum uio_rw { UIO_READ,169,4706
typedef enum uio_rw { UIO_READ, UIO_WRITE 169,4706
typedef enum uio_rw { UIO_READ, UIO_WRITE } uio_rw_t;169,4706
#define	UIO_COPY_DEFAULT	183,5273
#define	UIO_COPY_CACHED	184,5338
#define	UIO_ASYNC	186,5407
typedef struct uioasync_s 191,5516
} uioasync_t;194,5645

src/lib/libsolkerncompat/include/sys/sunddi.h,50
#define _SOL_SUNDDI_H28,971
ddi_strtoul(38,1098

src/lib/libsolkerncompat/include/sys/semaphore.h,0

src/lib/libsolkerncompat/include/sys/priv.h,0

src/lib/libsolkerncompat/include/sys/mount.h,195
#define _SOL_SYS_MOUNT_H28,974
#define S_WRITE 31,1012
#define BLKGETSIZE64 40,1223
#define MS_DATA 43,1274
#define MS_SYSSPACE 44,1324
#define MS_OVERLAY 45,1388
#define MS_FORCE 46,1442

src/lib/libsolkerncompat/include/sys/zone.h,96
#define _SYS_ZONE_H29,1004
#define INGLOBALZONE(31,1025
#define zone_dataset_visible(32,1053

src/lib/libsolkerncompat/include/sys/file_aux.h,327
#define _SOL_SYS_FILE_H28,973
#define FREAD 34,1049
#define FWRITE 35,1067
#define FCREAT 38,1107
#define FTRUNC 39,1131
#define FOFFMAX 40,1155
#define FSYNC 41,1183
#define FDSYNC 42,1206
#define FRSYNC 43,1230
#define FEXCL 44,1254
#define FNODSYNC 46,1278
#define FNOFOLLOW 47,1334
#define FIGNORECASE 48,1394

src/lib/libsolkerncompat/include/sys/sysevent.h,0

src/lib/libsolkerncompat/include/sys/cmn_err.h,158
#define _SYS_CMN_ERR_H28,985
#define	CE_CONT	32,1049
#define	CE_NOTE	33,1088
#define	CE_WARN	34,1121
#define	CE_PANIC	35,1155
#define	CE_IGNORE	36,1187

src/lib/libsolkerncompat/include/sys/flock.h,364
#define _SYS_FLOCK_H28,983
#define cleanlocks(33,1051
#define chklock(34,1088
typedef enum {FLK_BEFORE_SLEEP,FLK_BEFORE_SLEEP53,1970
typedef enum {FLK_BEFORE_SLEEP, FLK_AFTER_SLEEP}FLK_AFTER_SLEEP53,1970
typedef enum {FLK_BEFORE_SLEEP, FLK_AFTER_SLEEP} flk_cb_when_t;53,1970
struct flk_callback 55,2035
typedef struct flk_callback flk_callback_t;62,2261

src/lib/libsolkerncompat/include/sys/va_list.h,30
#define _SYS_VA_LIST_H28,972

src/lib/libsolkerncompat/include/sys/rctl.h,0

src/lib/libsolkerncompat/include/sys/dkio.h,4394
#define	_SYS_DKIO_H27,947
#define	DK_DEVLEN	45,1185
struct dk_cinfo 51,1322
#define	DKC_UNKNOWN	70,1978
#define	DKC_CDROM	71,2000
#define	DKC_WDC2880	72,2052
#define	DKC_XXX_0	73,2074
#define	DKC_XXX_1	74,2111
#define	DKC_DSD5215	75,2148
#define	DKC_ACB4000	76,2170
#define	DKC_MD21	77,2192
#define	DKC_XXX_2	78,2211
#define	DKC_NCRFLOPPY	79,2248
#define	DKC_SMSFLOPPY	80,2273
#define	DKC_SCSI_CCS	81,2298
#define	DKC_INTEL82072	82,2348
#define	DKC_MD	83,2399
#define	DKC_INTEL82077	84,2456
#define	DKC_DIRECT	85,2517
#define	DKC_PCMCIA_MEM	86,2583
#define	DKC_PCMCIA_ATA	87,2644
#define	DKC_VBD	88,2700
#define	DKC_CUSTOMER_BASE	94,2788
#define	DKI_BAD144	99,2836
#define	DKI_MAPTRK	100,2900
#define	DKI_FMTTRK	101,2960
#define	DKI_FMTVOL	102,3024
#define	DKI_FMTCYL	103,3089
#define	DKI_HEXUNIT	104,3157
#define	DKI_PCMCIA_PFD	105,3227
struct dk_allmap 110,3329
struct dk_allmap32 115,3408
struct dk_geom 123,3533
#define	dkg_bhead	144,4452
#define	dkg_gap1	145,4508
#define	dkg_gap2	146,4556
#define	DKIOC	157,4922
#define	DKIOCGGEOM	163,5065
#define	DKIOCINFO	164,5114
#define	DKIOCEJECT	165,5158
#define	DKIOCGVTOC	166,5210
#define	DKIOCSVTOC	167,5256
#define	DKIOCFLUSHWRITECACHE	189,6308
struct dk_callback 191,6382
#define	FLUSH_VOLATILE	198,6533
#define	DKIOCGETWCE	202,6681
#define	DKIOCSETWCE	204,6773
#define	DKIOCSGEOM	211,7013
#define	DKIOCSAPART	212,7062
#define	DKIOCGAPART	213,7118
#define	DKIOCG_PHYGEOM	214,7174
#define	DKIOCG_VIRTGEOM	215,7237
#define	DKIOCLOCK	220,7361
#define	DKIOCUNLOCK	221,7410
#define	DKIOCSTATE	222,7463
#define	DKIOCREMOVABLE	223,7526
#define	DKIOCHOTPLUGGABLE	229,7628
#define	DKIOCADDBAD	235,7795
#define	DKIOCGETDEF	236,7864
struct defect_header32 243,8028
struct defect_header 249,8112
#define	DKIOCPARTINFO	254,8169
struct part_info32 260,8330
struct part_info 266,8415
#define	DKIOC_EBP_ENABLE 272,8530
#define	DKIOC_EBP_DISABLE 273,8603
enum dkio_state 278,8752
enum dkio_state { DKIO_NONE,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED, DKIO_INSERTED,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED, DKIO_INSERTED, DKIO_DEV_GONE 278,8752
#define	DKIOCGMEDIAINFO	280,8828
#define	DKIOCGMBOOT	285,8945
#define	DKIOCSMBOOT	286,8997
#define	DKIOCGTEMPERATURE	291,9097
struct	dk_temperature	297,9204
#define	DKT_BYPASS_PM	303,9372
#define	DKT_INVALID_TEMP	304,9399
struct dk_minfo 310,9491
#define	DK_UNKNOWN	319,9730
#define	DK_REMOVABLE_DISK	327,9968
#define	DK_MO_ERASABLE	328,10020
#define	DK_MO_WRITEONCE	329,10067
#define	DK_AS_MO	330,10117
#define	DK_CDROM	331,10152
#define	DK_CDR	332,10187
#define	DK_CDRW	333,10220
#define	DK_DVDROM	334,10255
#define	DK_DVDR	335,10293
#define	DK_DVDRAM	336,10328
#define	DK_FIXED_DISK	341,10435
#define	DK_FLOPPY	342,10501
#define	DK_ZIP	343,10547
#define	DK_JAZ	344,10595
#define	DKIOCSETEFI	346,10644
#define	DKIOCGETEFI	347,10695
#define	DKIOCPARTITION	349,10747
#define	DKIOCGETVOLCAP	357,11023
#define	DKIOCSETVOLCAP	358,11089
#define	DKIOCDMR	359,11155
#define	DKIOCDUMPINIT	361,11214
#define	DKIOCDUMPFINI	362,11270
typedef uint_t volcapinfo_t;364,11330
typedef uint_t volcapset_t;366,11360
#define	DKV_ABR_CAP 368,11389
#define	DKV_DMR_CAP 369,11455
typedef struct volcap 371,11524
} volcap_t;374,11644
#define	VOL_SIDENAME 376,11657
typedef struct vol_directed_rd 378,11683
} vol_directed_rd_t;386,11870
#define	DKV_SIDE_INIT	388,11892
#define	DKV_DMR_NEXT_SIDE	389,11920
#define	DKV_DMR_DONE	390,11957
#define	DKV_DMR_ERROR	391,11990
#define	DKV_DMR_SUCCESS	392,12024
#define	DKV_DMR_SHORT	393,12060
typedef struct vol_directed_rd32 399,12204
} vol_directed_rd32_t;407,12447
#define	DKIOC_GETDISKID	421,12926
#define	DKD_ATA_TYPE	424,13019
#define	DKD_SCSI_TYPE	425,13085
#define	DKD_ATA_MODEL	427,13154
#define	DKD_ATA_FWVER	428,13205
#define	DKD_ATA_SERIAL	429,13260
#define	DKD_SCSI_VENDOR	431,13314
#define	DKD_SCSI_PRODUCT 432,13363
#define	DKD_SCSI_REVLEVEL 433,13415
#define	DKD_SCSI_SERIAL 434,13471
typedef struct dk_disk_id 439,13581
} dk_disk_id_t;454,14072
#define	DKIOC_UPDATEFW	459,14151
typedef struct dk_updatefw 462,14236
} dk_updatefw_t;466,14409
typedef struct dk_updatefw_32 469,14445
} dk_updatefw_32_t;473,14622
#define	FW_TYPE_TEMP	479,14727
#define	FW_TYPE_PERM	480,14773

src/lib/libsolkerncompat/include/sys/time_aux.h,271
#define _SOL_SYS_TIME_H28,973
typedef longlong_t hrtime_t;38,1127
typedef struct timespec timestruc_t;39,1156
#define NANOSEC 41,1194
#define TIME32_MAX 43,1222
#define TIME32_MIN 44,1251
#define TIMESPEC_OVERFLOW(46,1281
static inline hrtime_t gethrtime(48,1369

src/lib/libsolkerncompat/include/sys/types.h,826
#define _SOL_SYS_TYPES_H28,974
typedef enum boolean 37,1171
typedef enum boolean { B_FALSE,37,1171
typedef enum boolean { B_FALSE, B_TRUE 37,1171
typedef enum boolean { B_FALSE, B_TRUE } boolean_t;37,1171
typedef unsigned char uchar_t;39,1224
typedef unsigned short ushort_t;40,1255
typedef unsigned int uint_t;41,1288
typedef unsigned long ulong_t;42,1317
typedef long long longlong_t;44,1349
typedef unsigned long long u_longlong_t;45,1379
typedef longlong_t offset_t;47,1421
typedef u_longlong_t u_offset_t;48,1450
typedef u_longlong_t len_t;49,1483
typedef longlong_t diskaddr_t;50,1511
typedef short pri_t;52,1543
typedef int zoneid_t;54,1565
typedef int projid_t;55,1587
typedef int major_t;57,1610
typedef int minor_t;58,1631
typedef ushort_t o_mode_t;60,1653
} lloff_t;74,2100
} lloff_t;84,2323

src/lib/libsolkerncompat/include/sys/acl.h,4420
#define _SOL_SYS_ACL_H27,950
#define	MAX_ACL_ENTRIES	38,1066
typedef struct acl 39,1129
} aclent_t;43,1285
typedef struct ace 45,1298
} ace_t;50,1472
typedef struct acl_info acl_t;52,1482
#define	USER_OBJ	57,1573
#define	USER	58,1617
#define	GROUP_OBJ	59,1662
#define	GROUP	60,1721
#define	CLASS_OBJ	61,1768
#define	OTHER_OBJ	62,1832
#define	ACL_DEFAULT	63,1891
#define	DEF_USER_OBJ	65,1966
#define	DEF_USER	67,2043
#define	DEF_GROUP_OBJ	69,2108
#define	DEF_GROUP	71,2188
#define	DEF_CLASS_OBJ	73,2253
#define	DEF_OTHER_OBJ	75,2327
#define	ACE_READ_DATA	80,2423
#define	ACE_LIST_DIRECTORY	81,2457
#define	ACE_WRITE_DATA	82,2495
#define	ACE_ADD_FILE	83,2530
#define	ACE_APPEND_DATA	84,2563
#define	ACE_ADD_SUBDIRECTORY	85,2599
#define	ACE_READ_NAMED_ATTRS	86,2639
#define	ACE_WRITE_NAMED_ATTRS	87,2679
#define	ACE_EXECUTE	88,2720
#define	ACE_DELETE_CHILD	89,2752
#define	ACE_READ_ATTRIBUTES	90,2788
#define	ACE_WRITE_ATTRIBUTES	91,2827
#define	ACE_DELETE	92,2867
#define	ACE_READ_ACL	93,2898
#define	ACE_WRITE_ACL	94,2931
#define	ACE_WRITE_OWNER	95,2965
#define	ACE_SYNCHRONIZE	96,3001
#define	ACE_FILE_INHERIT_ACE	98,3038
#define	ACE_DIRECTORY_INHERIT_ACE	99,3075
#define	ACE_NO_PROPAGATE_INHERIT_ACE	100,3116
#define	ACE_INHERIT_ONLY_ACE	101,3160
#define	ACE_SUCCESSFUL_ACCESS_ACE_FLAG	102,3197
#define	ACE_FAILED_ACCESS_ACE_FLAG	103,3243
#define	ACE_IDENTIFIER_GROUP	104,3285
#define	ACE_INHERITED_ACE	105,3322
#define	ACE_OWNER	106,3356
#define	ACE_GROUP	107,3383
#define	ACE_EVERYONE	108,3410
#define	ACE_ACCESS_ALLOWED_ACE_TYPE	110,3441
#define	ACE_ACCESS_DENIED_ACE_TYPE	111,3484
#define	ACE_SYSTEM_AUDIT_ACE_TYPE	112,3526
#define	ACE_SYSTEM_ALARM_ACE_TYPE	113,3567
#define	ACL_AUTO_INHERIT	115,3609
#define	ACL_PROTECTED	116,3642
#define	ACL_DEFAULTED	117,3673
#define	ACL_FLAGS_ALL	118,3704
#define	ACE_ACCESS_ALLOWED_COMPOUND_ACE_TYPE	126,3854
#define	ACE_ACCESS_ALLOWED_OBJECT_ACE_TYPE	127,3905
#define	ACE_ACCESS_DENIED_OBJECT_ACE_TYPE	128,3954
#define	ACE_SYSTEM_AUDIT_OBJECT_ACE_TYPE	129,4002
#define	ACE_SYSTEM_ALARM_OBJECT_ACE_TYPE	130,4049
#define	ACE_ACCESS_ALLOWED_CALLBACK_ACE_TYPE	131,4096
#define	ACE_ACCESS_DENIED_CALLBACK_ACE_TYPE	132,4147
#define	ACE_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE	133,4197
#define	ACE_ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE	134,4254
#define	ACE_SYSTEM_AUDIT_CALLBACK_ACE_TYPE	135,4310
#define	ACE_SYSTEM_ALARM_CALLBACK_ACE_TYPE	136,4359
#define	ACE_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE	137,4408
#define	ACE_SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE	138,4463
#define	ACE_ALL_TYPES	140,4519
typedef struct ace_object 142,4549
} ace_object_t;149,4824
#define	ACE_ALL_PERMS	153,4849
#define	ACE_READ_PERMS	159,5183
#define	ACE_WRITE_PERMS	162,5284
#define	ACE_MODIFY_PERMS 165,5392
#define	ACE_NFSV4_SUP_FLAGS 172,5765
#define	ACE_TYPE_FLAGS	178,5946
#define	ACE_INHERIT_FLAGS	180,6033
#define	GETACL	184,6205
#define	SETACL	185,6224
#define	GETACLCNT	186,6243
#define	ACE_GETACL	189,6301
#define	ACE_SETACL	190,6323
#define	ACE_GETACLCNT	191,6345
#define	MIN_ACL_ENTRIES	194,6412
#define	GRP_ERROR	199,6486
#define	USER_ERROR	200,6507
#define	OTHER_ERROR	201,6529
#define	CLASS_ERROR	202,6552
#define	DUPLICATE_ERROR	203,6575
#define	MISS_ERROR	204,6602
#define	MEM_ERROR	205,6624
#define	ENTRY_ERROR	206,6645
#define	UFSD_FREE	213,6772
#define	UFSD_ACL	214,6813
#define	UFSD_DFACL	215,6863
#define	ACE_ACL	216,6918
#define	ACL_NO_TRIVIAL	222,7050
#define	ACL_APPEND_ID	229,7120
#define	ACL_COMPACT_FMT	230,7190
#define	ACL_NORESOLVE	231,7251
#define	ACL_SID_FMT	232,7313
#define	EACL_GRP_ERROR	237,7433
#define	EACL_USER_ERROR	238,7467
#define	EACL_OTHER_ERROR	239,7503
#define	EACL_CLASS_ERROR	240,7540
#define	EACL_DUPLICATE_ERROR	241,7577
#define	EACL_MISS_ERROR	242,7622
#define	EACL_MEM_ERROR	243,7658
#define	EACL_ENTRY_ERROR	244,7692
#define	EACL_INHERIT_ERROR	246,7730
#define	EACL_FLAGS_ERROR	247,7788
#define	EACL_PERM_MASK_ERROR	248,7842
#define	EACL_COUNT_ERROR	249,7900
#define	EACL_INVALID_SLOT	251,7954
#define	EACL_NO_ACL_ENTRY	252,8007
#define	EACL_DIFF_TYPE	253,8063
#define	EACL_INVALID_USER_GROUP	255,8120
#define	EACL_INVALID_STR	256,8183
#define	EACL_FIELD_NOT_BLANK	257,8237
#define	EACL_INVALID_ACCESS_TYPE 258,8299
#define	EACL_UNKNOWN_DATA	259,8362
#define	EACL_MISSING_FIELDS	260,8423
#define	EACL_INHERIT_NOTDIR	262,8484

src/lib/libsolkerncompat/include/sys/kstat.h,2244
#define	_SYS_KSTAT_H27,948
typedef int	kid_t;42,1142
#define	KSTAT_IOC_BASE	48,1241
#define	KSTAT_IOC_CHAIN_ID	50,1277
#define	KSTAT_IOC_READ	51,1326
#define	KSTAT_IOC_WRITE	52,1372
#define	KSTAT_STRLEN	62,1637
typedef struct kstat 68,1740
} kstat_t;93,2797
typedef int32_t kid32_t;97,2828
typedef struct kstat32 99,2854
} kstat32_t;124,3472
#define	KSTAT_ENTER(153,4711
#define	KSTAT_EXIT(156,4796
#define	KSTAT_UPDATE(159,4879
#define	KSTAT_SNAPSHOT(161,4938
#define	KSTAT_TYPE_RAW	221,7109
#define	KSTAT_TYPE_NAMED	223,7182
#define	KSTAT_TYPE_INTR	225,7256
#define	KSTAT_TYPE_IO	227,7335
#define	KSTAT_TYPE_TIMER	229,7406
#define	KSTAT_NUM_TYPES	232,7477
#define	KSTAT_FLAG_VIRTUAL	301,9919
#define	KSTAT_FLAG_VAR_SIZE	302,9952
#define	KSTAT_FLAG_WRITABLE	303,9986
#define	KSTAT_FLAG_PERSISTENT	304,10020
#define	KSTAT_FLAG_DORMANT	305,10056
#define	KSTAT_FLAG_INVALID	306,10089
#define	KSTAT_READ	348,11727
#define	KSTAT_WRITE	349,11748
typedef struct kstat_named 443,15498
} kstat_named_t;484,16776
#define	KSTAT_DATA_CHAR	486,16794
#define	KSTAT_DATA_INT32	487,16821
#define	KSTAT_DATA_UINT32	488,16848
#define	KSTAT_DATA_INT64	489,16876
#define	KSTAT_DATA_UINT64	490,16903
#define	KSTAT_DATA_LONG	493,16952
#define	KSTAT_DATA_ULONG	494,16994
#define	KSTAT_DATA_LONG	497,17065
#define	KSTAT_DATA_ULONG	498,17107
#define	KSTAT_DATA_LONG	500,17156
#define	KSTAT_DATA_ULONG	501,17216
#define	KSTAT_DATA_STRING	521,18241
#define	KSTAT_DATA_LONGLONG	525,18302
#define	KSTAT_DATA_ULONGLONG	526,18347
#define	KSTAT_DATA_FLOAT	527,18394
#define	KSTAT_DATA_DOUBLE	528,18421
#define	KSTAT_NAMED_PTR(530,18450
#define	KSTAT_NAMED_STR_PTR(535,18597
#define	KSTAT_NAMED_STR_BUFLEN(541,18765
#define	KSTAT_INTR_HARD	562,19611
#define	KSTAT_INTR_SOFT	563,19639
#define	KSTAT_INTR_WATCHDOG	564,19667
#define	KSTAT_INTR_SPURIOUS	565,19698
#define	KSTAT_INTR_MULTSVC	566,19729
#define	KSTAT_NUM_INTRS	568,19760
typedef struct kstat_intr 570,19789
} kstat_intr_t;572,19874
#define	KSTAT_INTR_PTR(574,19891
typedef struct kstat_io 580,19982
} kstat_io_t;677,23545
#define	KSTAT_IO_PTR(679,23560
typedef struct kstat_timer 688,23816
} kstat_timer_t;697,24236
#define	KSTAT_TIMER_PTR(699,24254

src/lib/libsolkerncompat/include/sys/int_types.h,0

src/lib/libsolkerncompat/include/sys/types32.h,970
#define	_SYS_TYPES32_H27,950
typedef	uint32_t	caddr32_t;48,1299
typedef	int32_t		daddr32_t;49,1327
typedef	int32_t		off32_t;50,1355
typedef	uint32_t	ino32_t;51,1381
typedef	int32_t		blkcnt32_t;52,1407
typedef uint32_t	fsblkcnt32_t;53,1436
typedef	uint32_t	fsfilcnt32_t;54,1467
typedef	int32_t		id32_t;55,1498
typedef	uint32_t	major32_t;56,1523
typedef	uint32_t	minor32_t;57,1551
typedef	int32_t		key32_t;58,1579
typedef	uint32_t	mode32_t;59,1605
typedef	uint32_t	uid32_t;60,1632
typedef	uint32_t	gid32_t;61,1658
typedef	uint32_t	nlink32_t;62,1684
typedef	uint32_t	dev32_t;63,1712
typedef	int32_t		pid32_t;64,1738
typedef	uint32_t	size32_t;65,1764
typedef	int32_t		ssize32_t;66,1791
typedef	int32_t		time32_t;67,1819
typedef	int32_t		clock32_t;68,1846
struct timeval32 70,1875
typedef struct timespec32 75,1973
} timespec32_t;78,2075
typedef struct timespec32 timestruc32_t;80,2092
typedef	struct itimerspec32 82,2134
} itimerspec32_t;85,2225

src/lib/libsolkerncompat/include/sys/acl_impl.h,204
#define	_SYS_ACL_IMPL_H27,951
#define	ACL_IS_TRIVIAL	41,1137
#define	ACL_IS_DIR	42,1168
typedef enum acl_type 44,1196
	ACLENT_T 45,1220
	ACE_T 46,1235
} acl_type_t;47,1246
struct acl_info 49,1261

src/lib/libsolkerncompat/include/sys/param_aux.h,307
#define _SOL_SYS_PARAM_H28,974
#define MAXBSIZE 45,1560
#define DEV_BSIZE 46,1584
#define DEV_BSHIFT 47,1607
#define MAXNAMELEN 49,1655
#define MAXOFFSET_T 50,1678
#define UID_NOBODY 52,1719
#define GID_NOBODY 53,1773
#define UID_NOACCESS 54,1808
#define MAXUID 56,1865
#define MAXPROJID 57,1923

src/lib/libsolkerncompat/include/sys/vmem.h,63
#define _SYS_VMEM_H28,969
typedef struct vmem vmem_t;32,1094

src/lib/libsolkerncompat/include/sys/utsname.h,62
#define _SOL_UTSNAME_H28,972
struct utsname utsname;32,1027

src/lib/libsolkerncompat/include/sys/note.h,51
#define	_SYS_NOTE_H40,1479
#define	_NOTE(49,1556

src/lib/libsolkerncompat/include/sys/zmod.h,421
#define	_ZMOD_H28,944
#define	Z_OK	44,1290
#define	Z_STREAM_END	45,1306
#define	Z_NEED_DICT	46,1329
#define	Z_ERRNO	47,1351
#define	Z_STREAM_ERROR	48,1373
#define	Z_DATA_ERROR	49,1401
#define	Z_MEM_ERROR	50,1427
#define	Z_BUF_ERROR	51,1452
#define	Z_VERSION_ERROR	52,1477
#define	Z_NO_COMPRESSION	54,1507
#define	Z_BEST_SPEED	55,1534
#define	Z_BEST_COMPRESSION	56,1558
#define	Z_DEFAULT_COMPRESSION	57,1587

src/lib/libsolkerncompat/include/sys/modctl.h,0

src/lib/libsolkerncompat/include/sys/feature_tests.h,64
#define _SYS_FEATURE_TESTS_H28,978
#define __NORETURN 30,1008

src/lib/libsolkerncompat/include/sys/atomic.h,123
#define	_SYS_ATOMIC_H28,950
#define	atomic_add_ip	409,14718
#define	atomic_add_ip_nv	410,14757
#define	casip	411,14801

src/lib/libsolkerncompat/include/sys/idmap.h,1873
#define	_SYS_IDMAP_H27,948
#define	IDMAP_SUCCESS	32,997
#define	IDMAP_NEXT	33,1023
#define	IDMAP_ERR_OTHER	34,1046
#define	IDMAP_ERR_INTERNAL	35,1079
#define	IDMAP_ERR_MEMORY	36,1113
#define	IDMAP_ERR_NORESULT	37,1145
#define	IDMAP_ERR_NOTUSER	38,1179
#define	IDMAP_ERR_NOTGROUP	39,1212
#define	IDMAP_ERR_NOTSUPPORTED	40,1246
#define	IDMAP_ERR_W2U_NAMERULE	41,1284
#define	IDMAP_ERR_U2W_NAMERULE	42,1322
#define	IDMAP_ERR_CACHE	43,1360
#define	IDMAP_ERR_DB	44,1392
#define	IDMAP_ERR_ARG	45,1421
#define	IDMAP_ERR_SID	46,1451
#define	IDMAP_ERR_IDTYPE	47,1481
#define	IDMAP_ERR_RPC_HANDLE	48,1513
#define	IDMAP_ERR_RPC	49,1549
#define	IDMAP_ERR_CLIENT_HANDLE	50,1579
#define	IDMAP_ERR_BUSY	51,1618
#define	IDMAP_ERR_PERMISSION_DENIED	52,1649
#define	IDMAP_ERR_NOMAPPING	53,1691
#define	IDMAP_ERR_NEW_ID_ALLOC_REQD	54,1726
#define	IDMAP_ERR_DOMAIN	55,1768
#define	IDMAP_ERR_SECURITY	56,1800
#define	IDMAP_ERR_NOTFOUND	57,1834
#define	IDMAP_ERR_DOMAIN_NOTFOUND	58,1868
#define	IDMAP_ERR_UPDATE_NOTALLOWED	59,1908
#define	IDMAP_ERR_CFG	60,1950
#define	IDMAP_ERR_CFG_CHANGE	61,1980
#define	IDMAP_ERR_NOTMAPPED_WELLKNOWN	62,2016
#define	IDMAP_ERR_RETRIABLE_NET_ERR	63,2060
#define	IDMAP_ERR_W2U_NAMERULE_CONFLICT	64,2102
#define	IDMAP_ERR_U2W_NAMERULE_CONFLICT	65,2148
#define	IDMAP_ERR_BAD_UTF8	66,2194
#define	IDMAP_ERR_NONEGENERATED	67,2228
#define	IDMAP_ERR_PROP_UNKNOWN	68,2267
#define	IDMAP_ERR_NS_LDAP_OP_FAILED	69,2305
#define	IDMAP_ERR_NS_LDAP_PARTIAL	70,2347
#define	IDMAP_ERR_NS_LDAP_CFG	71,2387
#define	IDMAP_ERR_NS_LDAP_BAD_WINNAME	72,2424
#define	IDMAP_WK_LOCAL_SYSTEM_GID	75,2514
#define	IDMAP_WK_CREATOR_GROUP_GID	76,2577
#define	IDMAP_WK__MAX_GID	77,2624
#define	IDMAP_WK_CREATOR_OWNER_UID	80,2709
#define	IDMAP_WK__MAX_UID	81,2756
#define	IDMAP_WK_CREATOR_SID_AUTHORITY	84,2816
#define	IDMAP_MAX_DOOR_RPC	91,3049

src/lib/libsolkerncompat/include/sys/isa_defs.h,3844
#define	_SYS_ISA_DEFS_H28,952
#define	__amd64	223,8390
#define	__x86227,8457
#define	_LITTLE_ENDIAN233,8540
#define	_STACK_GROWS_DOWNWARD234,8563
#define	_LONG_LONG_LTOH235,8593
#define	_BIT_FIELDS_LTOH236,8617
#define	_IEEE_754237,8642
#define	_CHAR_IS_SIGNED238,8660
#define	_BOOL_ALIGNMENT	239,8684
#define	_CHAR_ALIGNMENT	240,8712
#define	_SHORT_ALIGNMENT	241,8740
#define	_INT_ALIGNMENT	242,8768
#define	_FLOAT_ALIGNMENT	243,8795
#define	_FLOAT_COMPLEX_ALIGNMENT	244,8823
#define	_LONG_ALIGNMENT	245,8858
#define	_LONG_LONG_ALIGNMENT	246,8886
#define	_DOUBLE_ALIGNMENT	247,8918
#define	_DOUBLE_COMPLEX_ALIGNMENT	248,8947
#define	_LONG_DOUBLE_ALIGNMENT	249,8983
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	250,9018
#define	_POINTER_ALIGNMENT	251,9060
#define	_MAX_ALIGNMENT	252,9090
#define	_ALIGNMENT_REQUIRED	253,9118
#define	_LONG_LONG_ALIGNMENT_32	258,9231
#define	_LP64264,9346
#define	_I32LPx267,9409
#define	_MULTI_DATAMODEL269,9432
#define	_SUNOS_VTOC_16270,9457
#define	_DMA_USES_PHYSADDR271,9480
#define	_FIRMWARE_NEEDS_FDISK272,9507
#define	__i386_COMPAT273,9537
#define	_PSM_MODULES274,9559
#define	_RTC_CONFIG275,9580
#define	_DONT_USE_1275_GENERIC_NAMES276,9600
#define	_HAVE_CPUID_INSN277,9637
#define	__i386287,9960
#define	__x86291,10003
#define	_LITTLE_ENDIAN297,10086
#define	_STACK_GROWS_DOWNWARD298,10109
#define	_LONG_LONG_LTOH299,10139
#define	_BIT_FIELDS_LTOH300,10163
#define	_IEEE_754301,10188
#define	_CHAR_IS_SIGNED302,10206
#define	_BOOL_ALIGNMENT	303,10230
#define	_CHAR_ALIGNMENT	304,10258
#define	_SHORT_ALIGNMENT	305,10286
#define	_INT_ALIGNMENT	306,10314
#define	_FLOAT_ALIGNMENT	307,10341
#define	_FLOAT_COMPLEX_ALIGNMENT	308,10369
#define	_LONG_ALIGNMENT	309,10404
#define	_LONG_LONG_ALIGNMENT	310,10432
#define	_DOUBLE_ALIGNMENT	311,10464
#define	_DOUBLE_COMPLEX_ALIGNMENT	312,10493
#define	_LONG_DOUBLE_ALIGNMENT	313,10529
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	314,10563
#define	_POINTER_ALIGNMENT	315,10604
#define	_MAX_ALIGNMENT	316,10634
#define	_ALIGNMENT_REQUIRED	317,10661
#define	_LONG_LONG_ALIGNMENT_32	319,10693
#define	_ILP32324,10807
#define	_I32LPx326,10864
#define	_SUNOS_VTOC_16328,10887
#define	_DMA_USES_PHYSADDR329,10910
#define	_FIRMWARE_NEEDS_FDISK330,10937
#define	_PSM_MODULES331,10967
#define	_RTC_CONFIG332,10988
#define	_DONT_USE_1275_GENERIC_NAMES333,11008
#define	_HAVE_CPUID_INSN334,11045
#define	__sparc358,12038
#define	__sparcv8375,12588
#define	_BIG_ENDIAN382,12723
#define	_STACK_GROWS_DOWNWARD383,12743
#define	_LONG_LONG_HTOL384,12773
#define	_BIT_FIELDS_HTOL385,12797
#define	_IEEE_754386,12822
#define	_CHAR_IS_SIGNED387,12840
#define	_BOOL_ALIGNMENT	388,12864
#define	_CHAR_ALIGNMENT	389,12892
#define	_SHORT_ALIGNMENT	390,12920
#define	_INT_ALIGNMENT	391,12948
#define	_FLOAT_ALIGNMENT	392,12975
#define	_FLOAT_COMPLEX_ALIGNMENT	393,13003
#define	_LONG_LONG_ALIGNMENT	394,13038
#define	_DOUBLE_ALIGNMENT	395,13070
#define	_DOUBLE_COMPLEX_ALIGNMENT	396,13099
#define	_ALIGNMENT_REQUIRED	397,13135
#define	_SUNOS_VTOC_8402,13250
#define	_DMA_USES_VIRTADDR403,13272
#define	_NO_FDISK_PRESENT404,13299
#define	_HAVE_TEM_FIRMWARE405,13325
#define	_OBP406,13352
#define	_LONG_ALIGNMENT	417,13568
#define	_LONG_DOUBLE_ALIGNMENT	418,13596
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	419,13630
#define	_POINTER_ALIGNMENT	420,13671
#define	_MAX_ALIGNMENT	421,13701
#define	_LONG_LONG_ALIGNMENT_32	423,13729
#define	_ILP32428,13842
#define	_I32LPx430,13899
#define	_LONG_ALIGNMENT	442,14127
#define	_LONG_DOUBLE_ALIGNMENT	443,14155
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	444,14190
#define	_POINTER_ALIGNMENT	445,14232
#define	_MAX_ALIGNMENT	446,14262
#define	_LONG_LONG_ALIGNMENT_32	448,14291
#define	_LP64454,14424
#define	_I32LPx457,14467
#define	_MULTI_DATAMODEL459,14490

src/lib/libsolkerncompat/include/sys/u8_textprep.h,1328
#define	_SYS_U8_TEXTPREP_H27,954
#define	UCONV_IN_BIG_ENDIAN	42,1163
#define	UCONV_OUT_BIG_ENDIAN	43,1199
#define	UCONV_IN_SYSTEM_ENDIAN	44,1236
#define	UCONV_OUT_SYSTEM_ENDIAN	45,1275
#define	UCONV_IN_LITTLE_ENDIAN	46,1315
#define	UCONV_OUT_LITTLE_ENDIAN	47,1354
#define	UCONV_IGNORE_NULL	48,1394
#define	UCONV_IN_ACCEPT_BOM	49,1428
#define	UCONV_OUT_EMIT_BOM	50,1464
#define	U8_STRCMP_CS	68,2223
#define	U8_STRCMP_CI_UPPER	69,2259
#define	U8_STRCMP_CI_LOWER	70,2300
#define	U8_CANON_DECOMP	72,2342
#define	U8_COMPAT_DECOMP	73,2381
#define	U8_CANON_COMP	74,2420
#define	U8_STRCMP_NFD	76,2458
#define	U8_STRCMP_NFC	77,2500
#define	U8_STRCMP_NFKD	78,2558
#define	U8_STRCMP_NFKC	79,2602
#define	U8_TEXTPREP_TOUPPER	81,2663
#define	U8_TEXTPREP_TOLOWER	82,2713
#define	U8_TEXTPREP_NFD	84,2764
#define	U8_TEXTPREP_NFC	85,2806
#define	U8_TEXTPREP_NFKD	86,2848
#define	U8_TEXTPREP_NFKC	87,2891
#define	U8_TEXTPREP_IGNORE_NULL	89,2935
#define	U8_TEXTPREP_IGNORE_INVALID	90,2981
#define	U8_TEXTPREP_NOWAIT	91,3029
#define	U8_UNICODE_320	93,3071
#define	U8_UNICODE_500	94,3100
#define	U8_UNICODE_LATEST	95,3129
#define	U8_VALIDATE_ENTIRE	97,3174
#define	U8_VALIDATE_CHECK_ADDITIONAL	98,3215
#define	U8_VALIDATE_UCS2_RANGE	99,3265
#define	U8_ILLEGAL_CHAR	101,3311
#define	U8_OUT_OF_RANGE_CHAR	102,3342

src/lib/libsolkerncompat/include/sys/dklabel.h,982
#define	_SYS_DKLABEL_H28,977
#define	DKL_MAGIC	43,1153
#define	FKL_MAGIC	44,1198
#define	NDKMAP	47,1287
#define	DK_LABEL_LOC	48,1337
#define	NDKMAP	50,1419
#define	DK_LABEL_LOC	51,1468
#define	LEN_DKL_ASCII	56,1568
#define	LEN_DKL_VVOL	57,1626
#define	DK_LABEL_SIZE	58,1675
#define	DK_MAX_BLOCKS	59,1727
#define	DK_ACYL	68,2020
struct dk_map 83,2406
struct dk_map32 93,2634
struct dk_map2 103,2879
struct dkl_partition 108,2985
struct dk_vtoc 121,3286
#define	LEN_DKL_PAD	152,4491
#define	LEN_DKL_PAD	158,4703
struct dk_label 169,4976
#define	dkl_asciilabel	213,6947
#define	v_timestamp	214,6992
#define	dkl_gap1	221,7126
#define	dkl_gap2	222,7174
#define	dkl_bhead	223,7222
#define	dkl_ppart	224,7284
struct fk_label 229,7394
#define	DK_DEVID_BLKSIZE	239,7582
#define	DK_DEVID_SIZE	240,7613
#define	DK_DEVID_REV_MSB	241,7682
#define	DK_DEVID_REV_LSB	242,7711
struct dk_devid 244,7741
#define	DKD_GETCHKSUM(255,8101
#define	DKD_FORMCHKSUM(260,8263

src/lib/libsolkerncompat/include/sys/sysmacros.h,655
#define _SOL_SYS_SYSMACROS_H28,978
#define makedevice(32,1041
#define MIN(36,1119
#define MAX(39,1186
#define ABS(42,1253
#define P2ALIGN(48,1381
#define P2CROSS(49,1427
#define P2ROUNDUP(50,1484
#define P2ROUNDUP_TYPED(51,1534
#define P2PHASE(53,1638
#define P2NPHASE(54,1689
#define P2NPHASE_TYPED(55,1741
#define ISP2(57,1846
#define IS_P2ALIGNED(58,1900
#define P2ALIGN_TYPED(71,2468
#define P2PHASE_TYPED(73,2547
#define P2NPHASE_TYPED(75,2631
#define P2ROUNDUP_TYPED(77,2716
#define P2END_TYPED(79,2799
#define P2PHASEUP_TYPED(81,2882
#define P2CROSS_TYPED(83,3005
#define P2SAMEHIGHBIT_TYPED(85,3109
#define	offsetof(92,3344

src/lib/libsolkerncompat/include/sys/proc.h,157
#define _SOL_PROC_H28,969
#define issig(33,1034
#define tsd_create(42,1229
#define tsd_destroy(43,1317
#define tsd_get(44,1398
#define tsd_set(45,1465

src/lib/libsolkerncompat/include/unistd_aux.h,103
#define _SOL_UNISTD_AUX_H28,975
static inline long fake_gethostid(33,1077
#define gethostid(39,1170

src/lib/libsolkerncompat/include/ucred.h,56
#define _SOL_UCRED_H28,970
typedef int ucred_t;30,992

src/lib/libsolkerncompat/include/string.h,29
#define _SOL_STRING_H28,971

src/lib/libsolkerncompat/include/stdarg.h,72
#define _SOL_STDARG_H31,1024
typedef __gnuc_va_list __va_list;34,1065

src/lib/libsolkerncompat/condvar.c,119
cv_init(41,1192
cv_destroy(49,1332
cv_wait(55,1409
cv_timedwait(64,1596
cv_signal(105,2295
cv_broadcast(111,2370

src/lib/libsolkerncompat/kobj_subr.c,16
strlcat(30,976

src/lib/libsolkerncompat/fs_subr.c,448
fs_nosys(46,1339
fs_inval(55,1440
fs_notdir(64,1544
fs_vnevent_nosupport(71,1598
fs_vnevent_support(79,1714
fs_setfl(90,1848
fs_rwlock(100,1992
fs_rwunlock(107,2093
fs_cmp(115,2196
fs_frlock(125,2312
fs_nosys_map(134,2505
fs_nosys_addmap(149,2705
fs_nosys_poll(164,2906
fs_poll(175,3064
fs_pathconf(190,3276
fs_dispose(268,4541
fs_nodispose(276,4675
fs_fab_acl(286,4887
fs_shrlock(301,5104
fs_sync(313,5350
fs_freevfs(326,5618

src/lib/libsolkerncompat/clock.c,20
void delay(31,1030

src/lib/libsolkerncompat/lint.h,0

src/lib/libsolkerncompat/rwlock.c,145
rw_init(37,1104
rw_destroy(46,1303
rw_enter(55,1481
rw_exit(80,2050
rw_tryenter(101,2493
rw_tryupgrade(135,3152
int rw_lock_held(142,3243

src/lib/libsolkerncompat/thread.c,26
zk_thread_create(35,1088

src/lib/libsolkerncompat/vfs.h,0

src/lib/libsolkerncompat/cmn_err.c,178
#define MAX_PREFIX_SIZE 35,1071
static char ce_prefix[ce_prefix37,1099
static int ce_level[ce_level38,1195
vpanic(41,1281
panic(57,1649
vcmn_err(67,1756
cmn_err(88,2141

src/lib/libsolkerncompat/move.c,17
uiomove(36,1223

src/lib/libsolkerncompat/acl_common.c,2606
#define	ASSERT	45,1278
#define	ACE_POSIX_SUPPORTED_BITS 48,1308
#define	ACL_SYNCHRONIZE_SET_DENY	53,1473
#define	ACL_SYNCHRONIZE_SET_ALLOW	54,1517
#define	ACL_SYNCHRONIZE_ERR_DENY	55,1562
#define	ACL_SYNCHRONIZE_ERR_ALLOW	56,1606
#define	ACL_WRITE_OWNER_SET_DENY	58,1652
#define	ACL_WRITE_OWNER_SET_ALLOW	59,1696
#define	ACL_WRITE_OWNER_ERR_DENY	60,1741
#define	ACL_WRITE_OWNER_ERR_ALLOW	61,1785
#define	ACL_DELETE_SET_DENY	63,1831
#define	ACL_DELETE_SET_ALLOW	64,1871
#define	ACL_DELETE_ERR_DENY	65,1912
#define	ACL_DELETE_ERR_ALLOW	66,1952
#define	ACL_WRITE_ATTRS_OWNER_SET_DENY	68,1994
#define	ACL_WRITE_ATTRS_OWNER_SET_ALLOW	69,2044
#define	ACL_WRITE_ATTRS_OWNER_ERR_DENY	70,2095
#define	ACL_WRITE_ATTRS_OWNER_ERR_ALLOW	71,2145
#define	ACL_WRITE_ATTRS_WRITER_SET_DENY	73,2197
#define	ACL_WRITE_ATTRS_WRITER_SET_ALLOW	74,2248
#define	ACL_WRITE_ATTRS_WRITER_ERR_DENY	75,2299
#define	ACL_WRITE_ATTRS_WRITER_ERR_ALLOW	76,2350
#define	ACL_WRITE_NAMED_WRITER_SET_DENY	78,2402
#define	ACL_WRITE_NAMED_WRITER_SET_ALLOW	79,2453
#define	ACL_WRITE_NAMED_WRITER_ERR_DENY	80,2504
#define	ACL_WRITE_NAMED_WRITER_ERR_ALLOW	81,2555
#define	ACL_READ_NAMED_READER_SET_DENY	83,2607
#define	ACL_READ_NAMED_READER_SET_ALLOW	84,2657
#define	ACL_READ_NAMED_READER_ERR_DENY	85,2708
#define	ACL_READ_NAMED_READER_ERR_ALLOW	86,2758
#define	ACE_VALID_MASK_BITS 89,2811
#define	ACE_MASK_UNDEFINED	108,3257
#define	ACE_VALID_FLAG_BITS 110,3298
	ace_unused,121,3629
	ace_user_obj,122,3642
	ace_user,123,3657
	ace_group,124,3668
	ace_other_obj125,3715
} ace_to_aent_state_t;126,3730
typedef struct acevals 128,3754
} acevals_t;135,3877
typedef struct ace_list 137,3891
} ace_list_t;150,4189
ace_t trivial_acl[trivial_acl152,4204
adjust_ace_pair_common(168,4863
adjust_ace_pair(190,5415
ace_allow_deny_helper(197,5564
ace_trivial_common(215,6040
ace_walk(291,7961
ace_trivial(307,8255
ksort(321,8650
cmp2acls(358,9355
cacl_realloc(384,9842
cacl_malloc(399,10133
cacl_free(415,10360
acl_alloc(425,10476
acl_free(455,10946
access_mask_set(471,11186
mode_to_ace_access(538,13232
ace_make_deny(593,14416
ln_aent_preprocess(617,15220
ln_aent_to_ace(666,16172
convert_aent_to_ace(832,20599
ace_mask_to_mode(896,21867
acevals_init(931,22402
ace_list_init(941,22615
acevals_find(962,23105
access_mask_check(984,23532
ace_to_aent_legal(1089,26728
ace_allow_to_mode(1193,28909
acevals_to_aent(1205,29218
ace_list_to_aent(1245,30109
ace_list_free(1382,33092
acevals_compare(1405,33562
ln_ace_to_aent(1424,33910
convert_ace_to_aent(1621,38622
acl_translate(1664,39518

src/lib/libsolkerncompat/pathname.c,248
pn_alloc(75,2310
pn_free(86,2503
pn_get_buf(101,2937
pn_get(122,3423
pn_set(140,3821
pn_insert(162,4701
pn_getsymlink(199,5715
pn_getcomponent(230,6510
pn_skipslash(262,7248
pn_setlast(277,7656
pn_fixslash(300,8122
pn_addslash(319,8496

src/lib/libsolkerncompat/vfs.c,743
struct vfs st_rootvfs 42,1278
static vnode_t st_rootdir 44,1307
static pthread_rwlock_t vfslist;49,1384
struct vfssw vfssw[vfssw51,1418
vnode_t *rootdir rootdir60,1509
struct vfs *rootvfs rootvfs61,1570
vnodeops_t *root_fvnodeops;root_fvnodeops63,1606
vnodeops_t *fd_fvnodeops;fd_fvnodeops64,1634
void vfs_init(69,1778
void vfs_list_lock(89,2152
void vfs_list_read_lock(94,2225
void vfs_list_unlock(99,2303
void vfs_exit(104,2378
vfs_hold(113,2516
vfs_rele(125,2799
fs_error(144,3203
fs_default(151,3279
fs_build_vector(158,3359
fsop_mount(252,5313
fsop_unmount(258,5450
fsop_statfs(264,5563
fsop_freefs(270,5665
fsop_sync(276,5738
fs_copyfsops(287,5962
vfs_setfsops(328,7055
int vfs_freevfsops_by_type(357,7684

src/lib/libsolkerncompat/kcf_random.c,92
random_get_bytes_common(35,1103
random_get_bytes(56,1410
random_get_pseudo_bytes(62,1522

src/lib/libsolkerncompat/flock.c,17
convoff(36,1104

src/lib/libsolkerncompat/bitmap.c,17
highbit(34,1115

src/lib/libsolkerncompat/u8_textprep.c,2164
#define	U8_MB_CUR_MAX	58,1666
#define	U8_MAX_BYTES_UCS2	64,1839
#define	U8_STREAM_SAFE_TEXT_MAX	67,1937
#define	U8_MAX_CHARS_A_SEQ	73,2126
#define	U8_UPPER_LIMIT_IN_A_SEQ	74,2159
#define	U8_COMBINING_CLASS_STARTER	77,2243
#define	U8_HANGUL_SYL_FIRST	98,3193
#define	U8_HANGUL_SYL_LAST	99,3232
#define	U8_HANGUL_JAMO_L_FIRST	101,3271
#define	U8_HANGUL_JAMO_L_LAST	102,3313
#define	U8_HANGUL_JAMO_V_FIRST	103,3354
#define	U8_HANGUL_JAMO_V_LAST	104,3396
#define	U8_HANGUL_JAMO_T_FIRST	105,3437
#define	U8_HANGUL_JAMO_T_LAST	106,3479
#define	U8_HANGUL_V_COUNT	108,3521
#define	U8_HANGUL_VT_COUNT	109,3553
#define	U8_HANGUL_T_COUNT	110,3587
#define	U8_HANGUL_JAMO_1ST_BYTE	112,3620
#define	U8_SAVE_HANGUL_AS_UTF8(114,3662
#define	U8_HANGUL_JAMO_L(119,3900
#define	U8_HANGUL_JAMO_V(122,3996
#define	U8_HANGUL_JAMO_T(125,4092
#define	U8_HANGUL_JAMO(128,4187
#define	U8_HANGUL_SYLLABLE(131,4281
#define	U8_HANGUL_COMPOSABLE_L_V(134,4373
#define	U8_HANGUL_COMPOSABLE_LV_T(137,4468
#define	U8_DECOMP_BOTH	141,4608
#define	U8_DECOMP_CANONICAL	142,4641
#define	U8_16BIT_TABLE_INDICATOR	145,4717
#define	U8_PUT_3BYTES_INTO_UTF32(148,4810
#define	U8_SIMPLE_SWAP(152,4958
#define	U8_ASCII_TOUPPER(157,5033
#define	U8_ASCII_TOLOWER(160,5118
#define	U8_ISASCII(163,5203
#define	U8_SWAP_COMB_MARKS(170,5458
	U8_STATE_START 183,5917
	U8_STATE_HANGUL_L 184,5938
	U8_STATE_HANGUL_LV 185,5962
	U8_STATE_HANGUL_LVT 186,5987
	U8_STATE_HANGUL_V 187,6013
	U8_STATE_HANGUL_T 188,6037
	U8_STATE_COMBINING_MARK 189,6061
} u8_normalization_states_t;190,6090
#define	U8_ILLEGAL_NEXT_BYTE_COMMON(203,6583
#define	I_	205,6650
#define	O_	206,6680
const int8_t u8_number_of_bytes[u8_number_of_bytes208,6716
const uint8_t u8_valid_min_2nd_byte[u8_valid_min_2nd_byte246,8385
const uint8_t u8_valid_max_2nd_byte[u8_valid_max_2nd_byte288,10304
u8_validate(338,12484
do_case_conv(463,15416
do_case_compare(569,18097
combining_class(694,21080
do_decomp(747,22331
find_composition_start(970,28261
blocked(1037,29764
do_composition(1059,30289
collect_a_seq(1381,38181
do_norm_compare(1729,46424
u8_strcmp(1845,49587
u8_textprep_str(1915,51108

src/lib/libsolkerncompat/taskq.c,298
int taskq_now;31,980
typedef struct task 33,996
} task_t;38,1111
#define	TASKQ_ACTIVE	40,1122
struct taskq 42,1155
task_alloc(59,1462
task_free(90,2218
taskq_dispatch(104,2487
taskq_wait(131,3033
taskq_thread(140,3242
taskq_create(173,3959
taskq_destroy(206,4928
taskq_member(243,5666

src/lib/libsolkerncompat/strlcpy.c,17
strlcpy(40,1156

src/lib/libzpool/arc.c,7313
static kmutex_t		arc_reclaim_thr_lock;137,5585
static kcondvar_t	arc_reclaim_thr_cv;138,5624
static uint8_t		arc_thread_exit;139,5695
#define	ARC_REDUCE_DNLC_PERCENT	145,5839
uint_t arc_reduce_dnlc_percent 146,5873
typedef enum arc_reclaim_strategy 148,5932
	ARC_RECLAIM_AGGR,149,5968
	ARC_RECLAIM_CONS	150,6022
} arc_reclaim_strategy_t;151,6077
static int		arc_grow_retry 154,6155
static int		arc_min_prefetch_lifespan;160,6282
static int arc_dead;162,6322
static boolean_t arc_warm;167,6413
uint64_t zfs_arc_max;172,6496
uint64_t zfs_arc_min;173,6518
uint64_t zfs_arc_meta_limit 174,6540
int zfs_mdcomp_disable 175,6573
typedef struct arc_state 209,8196
} arc_state_t;214,8447
static arc_state_t ARC_anon;217,8483
static arc_state_t ARC_mru;218,8512
static arc_state_t ARC_mru_ghost;219,8540
static arc_state_t ARC_mfu;220,8574
static arc_state_t ARC_mfu_ghost;221,8602
static arc_state_t ARC_l2c_only;222,8636
typedef struct arc_stats 224,8670
} arc_stats_t;271,10418
static arc_stats_t arc_stats 273,10434
#define	ARCSTAT(322,12387
#define	ARCSTAT_INCR(324,12438
#define	ARCSTAT_BUMP(327,12524
#define	ARCSTAT_BUMPDOWN(328,12574
#define	ARCSTAT_MAX(330,12629
#define	ARCSTAT_MAXSTAT(337,12832
#define	ARCSTAT_CONDSTAT(345,13128
kstat_t			*arc_ksp;arc_ksp360,13588
static arc_state_t 	*arc_anon;arc_anon361,13608
static arc_state_t	*arc_mru;arc_mru362,13639
static arc_state_t	*arc_mru_ghost;arc_mru_ghost363,13668
static arc_state_t	*arc_mfu;arc_mfu364,13703
static arc_state_t	*arc_mfu_ghost;arc_mfu_ghost365,13732
static arc_state_t	*arc_l2c_only;arc_l2c_only366,13767
#define	arc_size	376,14245
#define	arc_p	377,14312
#define	arc_c	378,14371
#define	arc_c_min	379,14432
#define	arc_c_max	380,14501
static int		arc_no_grow;382,14571
static uint64_t		arc_tempreserve;383,14631
static uint64_t		arc_meta_used;384,14665
static uint64_t		arc_meta_limit;385,14697
static uint64_t		arc_meta_max 386,14730
typedef struct l2arc_buf_hdr l2arc_buf_hdr_t;388,14766
typedef struct arc_callback arc_callback_t;390,14813
struct arc_callback 392,14858
typedef struct arc_write_callback arc_write_callback_t;400,15010
struct arc_write_callback 402,15067
struct arc_buf_hdr 409,15202
static arc_buf_t *arc_eviction_list;arc_eviction_list450,15956
static kmutex_t arc_eviction_mtx;451,15993
static arc_buf_hdr_t arc_eviction_hdr;452,16027
#define	GHOST_STATE(458,16308
#define	ARC_IN_HASH_TABLE	470,16804
#define	ARC_IO_IN_PROGRESS	471,16867
#define	ARC_IO_ERROR	472,16934
#define	ARC_FREED_IN_READ	473,16991
#define	ARC_BUF_AVAILABLE	474,17057
#define	ARC_INDIRECT	475,17123
#define	ARC_FREE_IN_PROGRESS	476,17187
#define	ARC_L2_WRITING	477,17254
#define	ARC_L2_EVICTED	478,17318
#define	ARC_L2_WRITE_HEAD	479,17377
#define	ARC_STORED	480,17438
#define	HDR_IN_HASH_TABLE(482,17496
#define	HDR_IO_IN_PROGRESS(483,17564
#define	HDR_IO_ERROR(484,17634
#define	HDR_FREED_IN_READ(485,17692
#define	HDR_BUF_AVAILABLE(486,17760
#define	HDR_FREE_IN_PROGRESS(487,17828
#define	HDR_L2CACHE(488,17902
#define	HDR_L2_READING(489,17958
#define	HDR_L2_WRITING(491,18060
#define	HDR_L2_EVICTED(492,18122
#define	HDR_L2_WRITE_HEAD(493,18184
#define	HDR_SIZE 499,18276
#define	L2HDR_SIZE 500,18327
#define	HT_LOCK_PAD	506,18414
struct ht_lock 508,18438
#define	BUF_LOCKS 515,18555
typedef struct buf_hash_table 516,18577
} buf_hash_table_t;520,18692
static buf_hash_table_t buf_hash_table;522,18713
#define	BUF_HASH_INDEX(524,18754
#define	BUF_HASH_LOCK_NTRY(526,18850
#define	BUF_HASH_LOCK(527,18929
#define	HDR_LOCK(528,18993
uint64_t zfs_crc64_table[zfs_crc64_table531,19090
#define	L2ARC_WRITE_SIZE	537,19145
#define	L2ARC_HEADROOM	538,19212
#define	L2ARC_FEED_SECS	539,19259
#define	l2arc_writes_sent	541,19311
#define	l2arc_writes_done	542,19369
uint64_t l2arc_write_max 547,19465
uint64_t l2arc_write_boost 548,19539
uint64_t l2arc_headroom 549,19618
uint64_t l2arc_feed_secs 550,19687
boolean_t l2arc_noprefetch 551,19754
typedef struct l2arc_dev 556,19851
} l2arc_dev_t;568,20393
static list_t L2ARC_dev_list;570,20409
static list_t *l2arc_dev_list;l2arc_dev_list571,20459
static kmutex_t l2arc_dev_mtx;572,20518
static l2arc_dev_t *l2arc_dev_last;l2arc_dev_last573,20575
static kmutex_t l2arc_buflist_mtx;574,20635
static list_t L2ARC_free_on_write;575,20700
static list_t *l2arc_free_on_write;l2arc_free_on_write576,20768
static kmutex_t l2arc_free_on_write_mtx;577,20837
static uint64_t l2arc_ndev;578,20899
typedef struct l2arc_read_callback 580,20954
} l2arc_read_callback_t;586,21196
typedef struct l2arc_write_callback 588,21222
} l2arc_write_callback_t;591,21361
struct l2arc_buf_hdr 593,21388
typedef struct l2arc_data_free 599,21548
} l2arc_data_free_t;605,21730
static kmutex_t l2arc_feed_thr_lock;607,21752
static kcondvar_t l2arc_feed_thr_cv;608,21789
static uint8_t l2arc_thread_exit;609,21826
buf_hash(616,21998
#define	BUF_EMPTY(633,22351
#define	BUF_EQUAL(638,22481
buf_hash_find(644,22712
buf_hash_insert(670,23425
buf_hash_remove(706,24334
static kmem_cache_t *hdr_cache;hdr_cache734,25067
static kmem_cache_t *buf_cache;buf_cache735,25099
buf_fini(738,25144
hdr_cons(756,25535
hdr_dest(776,26013
hdr_recl(793,26340
buf_init(805,26570
#define	ARC_MINTIME	843,27633
arc_cksum_verify(846,27686
arc_cksum_equal(866,28187
arc_cksum_compute(880,28487
arc_buf_thaw(897,28948
arc_buf_freeze(916,29462
add_reference(927,29678
remove_reference(957,30564
arc_change_state(985,31339
arc_space_consume(1073,33689
arc_space_return(1080,33806
arc_data_buf_alloc(1091,34054
arc_data_buf_free(1100,34239
arc_buf_alloc(1108,34392
arc_buf_clone(1138,35076
arc_buf_add_ref(1158,35483
arc_buf_data_free(1201,36479
arc_buf_destroy(1220,36991
arc_hdr_destroy(1276,38384
arc_buf_free(1345,40334
arc_buf_remove_ref(1388,41419
arc_buf_size(1418,42150
arc_evict(1437,42872
arc_evict_ghost(1556,46352
arc_adjust(1623,47979
arc_do_user_evicts(1684,49730
arc_flush(1709,50312
int arc_shrink_shift 1741,51144
arc_shrink(1744,51216
arc_reclaim_needed(1773,51781
arc_kmem_reap_now(1834,53617
arc_reclaim_thread(1880,54765
arc_adapt(1940,56306
arc_evict_needed(2001,57834
arc_get_data_buf(2048,59494
arc_access(2131,61880
arc_bcopy_func(2259,65555
arc_getbuf_func(2267,65741
arc_read_done(2279,65956
arc_read(2418,70303
arc_read_nolock(2438,70891
arc_tryread(2698,78044
arc_set_callback(2726,78538
arc_buf_evict(2741,78998
arc_release(2839,81220
arc_released(2948,84016
arc_has_callback(2954,84120
arc_referenced(2960,84194
arc_write_ready(2966,84291
arc_write_done(3001,85421
write_policy(3074,87515
arc_write(3119,88732
arc_free(3149,89657
arc_memory_throttle(3221,91536
arc_tempreserve_clear(3276,93031
arc_tempreserve_space(3283,93164
arc_init(3331,94635
arc_fini(3453,98683
l2arc_hdr_stat_add(3622,105793
l2arc_hdr_stat_remove(3629,105938
l2arc_dev_get_next(3640,106245
l2arc_do_free_on_write(3700,107614
l2arc_write_done(3725,108216
l2arc_read_done(3801,109933
l2arc_list_locked(3872,111651
l2arc_evict(3909,112527
l2arc_write_buffers(4040,115521
l2arc_feed_thread(4223,119702
l2arc_vdev_present(4303,121504
l2arc_add_vdev(4323,121901
l2arc_remove_vdev(4367,123009
l2arc_init(4402,123791
l2arc_fini(4427,124579

src/lib/libzpool/txg.c,759
int zfs_txg_timeout 39,1193
txg_init(45,1303
txg_fini(73,1892
txg_sync_start(100,2362
txg_thread_enter(127,2965
txg_thread_exit(134,3132
txg_thread_wait(145,3373
txg_sync_stop(161,3693
txg_hold_open(194,4294
txg_rele_to_quiesce(212,4578
txg_rele_to_sync(220,4682
txg_quiesce(235,4978
txg_sync_thread(270,5765
txg_quiesce_thread(344,7857
txg_delay(393,9203
txg_wait_synced(418,9837
txg_wait_open(441,10510
txg_stalled(461,11064
txg_sync_waiting(468,11193
txg_suspend(477,11357
txg_resume(485,11532
txg_list_create(495,11658
txg_list_destroy(508,11862
txg_list_empty(519,12009
txg_list_add(529,12205
txg_list_remove(551,12661
txg_list_remove_this(573,13069
txg_list_member(596,13501
txg_list_head(608,13753
txg_list_next(617,13927

src/lib/libzpool/dsl_dataset.c,3419
static char *dsl_reaper dsl_reaper43,1335
static dsl_checkfunc_t dsl_dataset_destroy_begin_check;45,1381
static dsl_syncfunc_t dsl_dataset_destroy_begin_sync;46,1437
static dsl_checkfunc_t dsl_dataset_rollback_check;47,1491
static dsl_syncfunc_t dsl_dataset_rollback_sync;48,1542
static dsl_syncfunc_t dsl_dataset_set_reservation_sync;49,1591
#define	DS_REF_MAX	51,1648
#define	DSL_DEADLIST_BLOCKSIZE	53,1681
#define	DSL_DATASET_IS_DESTROYED(55,1730
parent_delta(64,2008
dsl_dataset_block_born(79,2382
dsl_dataset_block_kill(120,3667
dsl_dataset_prev_snap_txg(205,6352
dsl_dataset_block_freeable(228,7034
dsl_dataset_evict(235,7185
dsl_dataset_get_snapname(269,7929
dsl_dataset_snap_lookup(294,8535
dsl_dataset_snap_remove(314,9043
dsl_dataset_get_ref(333,9504
dsl_dataset_hold_ref(478,13400
dsl_dataset_hold_obj(524,14884
dsl_dataset_own_obj(535,15105
dsl_dataset_hold(552,15485
dsl_dataset_own(611,16767
dsl_dataset_name(629,17204
dsl_dataset_namelen(654,17772
dsl_dataset_drop_ref(679,18266
dsl_dataset_rele(685,18360
dsl_dataset_disown(694,18531
dsl_dataset_tryown(713,18989
dsl_dataset_make_exclusive(730,19378
dsl_dataset_create_sync_dd(738,19563
dsl_dataset_create_sync(817,22043
struct destroyarg 838,22547
dsl_snapshot_destroy_one(845,22644
dsl_snapshots_destroy(879,23463
dsl_dataset_destroy(922,24461
dsl_dataset_rollback(1016,26841
dsl_dataset_set_user_ptr(1035,27284
dsl_dataset_get_user_ptr(1051,27570
dsl_dataset_get_blkptr(1058,27658
dsl_dataset_set_blkptr(1064,27741
dsl_dataset_get_spa(1077,28043
dsl_dataset_dirty(1083,28131
dsl_dataset_recalc_head_uniq(1112,28988
dsl_dataset_unique(1138,29669
struct killarg 1146,29854
kill_blkptr(1154,29949
dsl_dataset_rollback_check(1169,30273
dsl_dataset_rollback_sync(1198,30866
dsl_dataset_destroy_begin_check(1310,34360
dsl_dataset_destroy_begin_sync(1342,35131
dsl_dataset_destroy_check(1357,35554
struct refsarg 1388,36331
dsl_dataset_refs_gone(1396,36428
dsl_dataset_drain_refs(1407,36616
dsl_dataset_destroy_sync(1429,37150
dsl_dataset_snapshot_reserve_space(1710,45724
dsl_dataset_snapshot_check(1738,46379
dsl_dataset_snapshot_sync(1777,47259
dsl_dataset_sync(1883,50908
dsl_dataset_stats(1901,51345
dsl_dataset_fast_stat(1937,52498
dsl_dataset_fsid_guid(1961,53295
dsl_dataset_space(1967,53374
dsl_dataset_modified_since_lastsnap(1990,54062
dsl_dataset_snapshot_rename_check(2006,54432
dsl_dataset_snapshot_rename_sync(2037,55144
struct renamesnaparg 2067,56043
dsl_snapshot_rename_one(2075,56169
dsl_recursive_rename(2120,57133
dsl_valid_rename(2174,58439
dsl_dataset_rename(2186,58653
struct promotenode 2242,59920
struct promotearg 2247,59984
dsl_dataset_promote_check(2257,60271
dsl_dataset_promote_sync(2382,64147
static char *snaplist_tag snaplist_tag2494,67893
snaplist_make(2502,68207
snaplist_space(2548,69295
snaplist_destroy(2565,69651
dsl_dataset_promote(2593,70434
struct cloneswaparg 2676,72534
dsl_dataset_clone_swap_check(2685,72767
dsl_dataset_clone_swap_sync(2728,73966
#define	SWITCH64(2805,76565
dsl_dataset_clone_swap(2842,77788
dsl_dsobj_to_dsname(2875,78645
dsl_dataset_check_quota(2897,79111
dsl_dataset_set_quota_check(2945,80346
dsl_dataset_set_quota_sync(2966,80763
dsl_dataset_set_quota(2984,81225
dsl_dataset_set_reservation_check(3009,81780
dsl_dataset_set_reservation_sync(3051,82759
dsl_dataset_set_reservation(3081,83611

src/lib/libzpool/dmu_send.c,986
static char *dmu_recv_tag dmu_recv_tag44,1321
struct backuparg 46,1366
dump_bytes(56,1499
dump_free(70,1873
dump_data(86,2311
dump_freeobjects(105,2877
dump_dnode(119,3292
#define	BP_SPAN(151,4385
backup_cb(156,4541
dmu_sendbackup(223,6428
struct recvbeginsyncarg 319,9043
recv_full_sync_impl(333,9361
recv_full_check(356,9951
recv_full_sync(384,10633
recv_full_existing_check(399,11061
recv_full_existing_sync(431,11780
recv_incremental_check(454,12429
recv_online_incremental_sync(494,13484
recv_offline_incremental_sync(526,14442
dmu_recv_begin(543,14912
struct restorearg 686,18597
restore_read(697,18777
backup_byteswap(731,19495
#define	DO64(733,19539
#define	DO32(734,19595
restore_object(782,20836
restore_freeobjects(869,23133
restore_write(893,23630
restore_free(930,24456
dmu_recv_abort_cleanup(948,24850
dmu_recv_stream(971,25510
struct recvendsyncarg 1106,28786
recv_end_check(1113,28883
recv_end_sync(1122,29078
dmu_recv_end(1140,29619

src/lib/libzpool/spa_misc.c,2350
static avl_tree_t spa_namespace_avl;166,5570
kmutex_t spa_namespace_lock;167,5607
static kcondvar_t spa_namespace_cv;168,5636
static int spa_active_count;169,5672
int spa_max_replication_override 170,5701
static kmutex_t spa_spare_lock;172,5754
static avl_tree_t spa_spare_avl;173,5786
static kmutex_t spa_l2cache_lock;174,5819
static avl_tree_t spa_l2cache_avl;175,5853
kmem_cache_t *spa_buffer_pool;spa_buffer_pool177,5889
int spa_mode;178,5920
int zfs_flags 183,6032
int zfs_flags 185,6074
int zfs_flags 188,6107
int zfs_recover 196,6348
spa_config_lock_init(205,6568
spa_config_lock_destroy(214,6794
spa_config_enter(223,6981
spa_config_exit(245,7498
spa_config_held(263,7911
spa_lookup(284,8454
spa_add(318,9071
spa_remove(381,10999
spa_next(438,12410
spa_open_ref(459,12898
spa_close(471,13215
spa_refcount_zero(484,13622
typedef struct spa_aux 502,14070
} spa_aux_t;507,14173
spa_aux_compare(510,14198
spa_aux_add(524,14429
spa_aux_remove(542,14796
spa_aux_exists(562,15183
spa_aux_activate(587,15555
spa_spare_compare(623,16954
spa_spare_add(629,17045
spa_spare_remove(639,17232
spa_spare_exists(649,17430
spa_spare_activate(661,17660
spa_l2cache_compare(676,18067
spa_l2cache_add(682,18160
spa_l2cache_remove(692,18359
spa_l2cache_exists(702,18569
spa_l2cache_activate(714,18792
spa_l2cache_space_update(723,18970
spa_vdev_enter(740,19492
spa_vdev_exit(756,19898
spa_rename(811,21129
spa_guid_exists(865,22442
spa_strdup(900,23176
spa_strfree(914,23349
spa_get_random(920,23414
sprintf_blkptr(932,23577
spa_freeze(976,24872
zfs_panic_recover(991,25206
spa_traverse_rwlock(1007,25554
spa_traverse_wanted(1013,25636
spa_get_dsl(1019,25722
spa_get_rootblkptr(1025,25791
spa_set_rootblkptr(1031,25870
spa_altroot(1037,25968
spa_sync_pass(1046,26124
spa_name(1052,26192
spa_guid(1065,26477
spa_last_synced_txg(1080,26865
spa_first_txg(1086,26945
spa_state(1092,27010
spa_freeze_txg(1098,27072
spa_get_alloc(1107,27224
spa_get_space(1116,27386
spa_get_dspace(1125,27542
spa_get_asize(1135,27730
spa_get_failmode(1151,28203
spa_version(1157,28275
spa_max_replication(1163,28346
bp_get_dasize(1176,28690
spa_name_compare(1202,29329
spa_busy(1217,29549
spa_boot_init(1223,29602
spa_init(1229,29648
spa_fini(1259,30394
spa_has_slogs(1286,30947
spa_is_root(1295,31089

src/lib/libzpool/dmu_traverse.c,713
#define	BP_SPAN_SHIFT(40,1210
#define	BP_EQUAL(42,1267
compare_bookmark(86,2632
#define	SET_BOOKMARK(128,3570
#define	SET_BOOKMARK_LB(136,3762
advance_objset(143,3891
advance_object(164,4318
advance_from_osphys(191,4918
advance_block(214,5383
traverse_callback(276,6857
traverse_read(322,8624
find_block(378,9955
get_dnode(438,11400
traverse_zil_block(486,12494
traverse_zil_record(506,13025
traverse_zil(530,13652
traverse_segment(560,14438
traverse_dsl_dataset(720,18254
traverse_zvol(739,18669
traverse_more(757,19041
traverse_add_segment(799,19948
traverse_add_dnode(824,20627
traverse_add_objset(838,21022
traverse_add_pool(852,21374
traverse_init(865,21709
traverse_fini(897,22402

src/lib/libzpool/dmu.c,1092
const dmu_object_type_info_t dmu_ot[dmu_ot48,1447
dmu_buf_hold(91,3408
dmu_bonus_max(122,3993
dmu_set_bonus(128,4049
dmu_bonus_hold(144,4375
dmu_buf_hold_array_by_dnode(183,5375
dmu_buf_hold_array(277,7875
dmu_buf_hold_array_by_bonus(296,8259
dmu_buf_rele_array(309,8575
dmu_prefetch(326,8875
get_next_chunk(378,10095
dmu_free_long_range_impl(432,11291
dmu_free_long_range(482,12353
dmu_free_object(497,12655
dmu_free_range(527,13310
dmu_read(542,13667
dmu_write(600,14951
dmu_read_uio(643,15811
dmu_write_uio(680,16527
dmu_write_pages(735,17620
} dmu_sync_arg_t;798,18933
dmu_sync_done(802,18979
dmu_sync(851,20438
dmu_object_set_blocksize(999,24271
dmu_object_set_checksum(1014,24554
dmu_object_set_compress(1028,24891
dmu_offset_next(1042,25227
dmu_object_info_from_dnode(1073,25883
dmu_object_info(1100,26714
dmu_object_info_from_db(1119,27060
dmu_object_size_from_db(1129,27312
byteswap_uint64_array(1140,27607
byteswap_uint32_array(1153,27808
byteswap_uint16_array(1166,28009
byteswap_uint8_array(1180,28225
dmu_init(1185,28281
dmu_fini(1194,28363

src/lib/libzpool/unique.c,290
static avl_tree_t unique_avl;32,1004
static kmutex_t unique_mtx;33,1034
typedef struct unique 35,1063
} unique_t;38,1128
#define	UNIQUE_MASK 40,1141
unique_compare(43,1201
unique_init(56,1424
unique_fini(64,1600
unique_create(71,1688
unique_insert(79,1798
unique_remove(103,2326

src/lib/libzpool/zfs_znode.c,1491
kmem_cache_t *znode_cache znode_cache60,1666
#define	ZNODE_STATS76,2001
#define	ZNODE_STAT_ADD(80,2060
#define	ZNODE_STAT_ADD(82,2108
#define	POINTER_INVALIDATE(87,2299
znode_evict_error(98,2617
zfs_znode_cache_constructor(109,2836
zfs_znode_cache_destructor(141,3634
} znode_move_stats;172,4413
zfs_znode_move_impl(178,4503
zfs_enter(227,5863
zfs_znode_move(237,5993
zfs_znode_init(320,8531
zfs_znode_fini(334,8867
struct vnodeops *zfs_dvnodeops;zfs_dvnodeops350,9085
struct vnodeops *zfs_fvnodeops;zfs_fvnodeops351,9117
struct vnodeops *zfs_symvnodeops;zfs_symvnodeops352,9149
struct vnodeops *zfs_xdvnodeops;zfs_xdvnodeops353,9183
struct vnodeops *zfs_evnodeops;zfs_evnodeops354,9216
zfs_remove_op_tables(357,9254
zfs_create_op_tables(394,10113
zfs_init_fs(437,11088
#define	NBITSMINOR64	532,13839
#define	MAXMAJ64	535,13887
#define	MAXMIN64	538,13941
zfs_expldev(550,14288
zfs_cmpldev(570,14759
zfs_znode_dmu_init(587,15103
zfs_znode_dmu_fini(619,15803
zfs_znode_alloc(639,16350
zfs_mknode(739,18598
zfs_xvattr_set(870,22022
zfs_zget(939,24070
zfs_rezget(998,25319
zfs_znode_delete(1038,26170
zfs_zinactive(1055,26592
zfs_znode_free(1107,27911
zfs_time_stamper_locked(1126,28257
zfs_time_stamper(1171,29475
zfs_grow_blocksize(1188,29848
zfs_no_putpage(1221,30724
zfs_extend(1239,31032
zfs_free_range(1314,32559
zfs_trunc(1353,33250
zfs_freesp(1447,35262
zfs_create_fs(1503,36518
zfs_obj_to_pobj(1628,39929
zfs_obj_to_path(1655,40508

src/lib/libzpool/lzjb.c,189
#define	MATCH_BITS	42,1412
#define	MATCH_MIN	43,1433
#define	MATCH_MAX	44,1453
#define	OFFSET_MASK	45,1509
#define	LEMPEL_SIZE	46,1560
lzjb_compress(50,1605
lzjb_decompress(106,3051

src/lib/libzpool/rprwlock.c,151
rprw_init(33,1016
rprw_destroy(42,1213
rprw_enter_read(51,1378
rprw_enter_write(66,1647
rprw_enter(82,1958
rprw_exit(91,2104
rprw_held(106,2456

src/lib/libzpool/zio_inject.c,494
uint32_t zio_injection_enabled;50,1809
typedef struct inject_handler 52,1842
} inject_handler_t;57,1958
static list_t inject_handlers;59,1979
static krwlock_t inject_lock;60,2010
static int inject_next_id 61,2040
zio_match_handler(67,2161
zio_handle_fault_injection(103,3097
zio_handle_label_injection(154,4270
zio_handle_device_injection(204,5530
zio_inject_fault(248,6528
zio_inject_list_next(302,8054
zio_clear_fault(336,8758
zio_inject_init(364,9301
zio_inject_fini(372,9482

src/lib/libzpool/include/sys/zfs_context.h,4530
#define	_SYS_ZFS_CONTEXT_H27,954
#define	_SYS_MUTEX_H33,1022
#define	_SYS_RWLOCK_H34,1043
#define	_SYS_CONDVAR_H35,1065
#define	_SYS_SYSTM_H36,1088
#define	_SYS_DEBUG_H37,1109
#define	_SYS_T_LOCK_H38,1130
#define	_SYS_VNODE_H39,1152
#define	_SYS_VFS_H40,1173
#define	_SYS_SUNDDI_H41,1192
#define	_SYS_CALLB_H42,1214
#define	CE_CONT	85,2021
#define	CE_NOTE	86,2060
#define	CE_WARN	87,2093
#define	CE_PANIC	88,2127
#define	CE_IGNORE	89,2159
#define dprintf_setup(98,2299
#define	fm_panic	106,2542
#define ASSERT_FAIL(108,2566
#define VERIFY(114,2757
#define	ASSERT	116,2820
#define	VERIFY3_IMPL(121,2911
#define	VERIFY3_IMPL(124,2992
#define	VERIFY3S(138,3437
#define	VERIFY3U(139,3494
#define	VERIFY3P(140,3552
#define	ASSERT3S(143,3626
#define	ASSERT3U(144,3662
#define	ASSERT3P(145,3698
#define	ASSERT3S(147,3740
#define	ASSERT3U(148,3784
#define	ASSERT3P(149,3828
#define	DTRACE_PROBE(161,4150
#define	DTRACE_PROBE1(166,4254
#define	DTRACE_PROBE2(171,4365
#define	DTRACE_PROBE3(176,4482
#define	DTRACE_PROBE4(181,4605
#define	curthread	186,4683
typedef struct kthread kthread_t;188,4734
#define	thread_create(190,4769
#define	thread_exit(192,4868
#define	issig(196,4970
#define	ISSIG(197,4997
typedef struct kmutex 202,5048
} kmutex_t;206,5131
#define	MUTEX_DEFAULT	208,5144
#define	MUTEX_HELD(210,5197
#define	mutex_init(212,5248
#define	mutex_destroy(213,5311
typedef struct krwlock 225,5631
} krwlock_t;231,5766
typedef int krw_t;233,5780
#define	RW_READER	235,5800
#define	RW_WRITER	236,5820
#define	RW_DEFAULT	237,5840
#define RW_WRITE_HELD(241,5883
#define RW_LOCK_HELD(242,5937
#define	rw_downgrade(251,6313
typedef cond_t kcondvar_t;261,6535
#define	CV_DEFAULT	263,6563
#define	KM_SLEEP	283,7146
#define	KM_PUSHPAGE	284,7176
#define	KM_NOSLEEP	285,7206
#define	KMC_NODEBUG	286,7239
#define	kmem_alloc(287,7272
#define	kmem_zalloc(288,7318
#define	kmem_free(289,7366
#define	kmem_cache_create(290,7410
#define	kmem_cache_destroy(292,7529
#define	kmem_cache_alloc(293,7583
#define	kmem_cache_free(294,7641
#define	kmem_debugging(295,7697
#define	kmem_cache_reap_now(296,7724
typedef umem_cache_t kmem_cache_t;298,7756
typedef struct taskq taskq_t;303,7814
typedef uintptr_t taskqid_t;304,7844
typedef void (task_func_t)305,7873
#define	TASKQ_PREPOPULATE	307,7910
#define	TASKQ_CPR_SAFE	308,7943
#define	TASKQ_DYNAMIC	309,8002
#define	TQ_SLEEP	311,8069
#define	TQ_NOSLEEP	312,8122
#define	TQ_NOQUEUE	313,8192
#define	XVA_MAPSIZE	321,8526
#define	XVA_MAGIC	322,8548
typedef struct vnode 327,8595
} vnode_t;332,8689
typedef struct xoptattr 335,8702
} xoptattr_t;349,9074
typedef struct vattr 351,9089
} vattr_t;354,9205
typedef struct xvattr 357,9218
} xvattr_t;365,9630
typedef struct vsecattr 367,9643
} vsecattr_t;374,9966
#define	AT_TYPE	376,9981
#define	AT_MODE	377,10006
#define	AT_UID	378,10031
#define	AT_GID	379,10055
#define	AT_FSID	380,10079
#define	AT_NODEID	381,10104
#define	AT_NLINK	382,10130
#define	AT_SIZE	383,10155
#define	AT_ATIME	384,10180
#define	AT_MTIME	385,10205
#define	AT_CTIME	386,10230
#define	AT_RDEV	387,10255
#define	AT_BLKSIZE	388,10280
#define	AT_NBLOCKS	389,10307
#define	AT_SEQ	390,10334
#define	AT_XVATTR	391,10358
#define	CRCREAT	393,10385
#define	VOP_CLOSE(395,10405
#define	VOP_PUTPAGE(396,10446
#define	VOP_GETATTR(397,10492
#define	VOP_FSYNC(399,10570
#define	VN_RELE(401,10622
#define	vn_remove(411,11053
#define	vn_rename(412,11099
#define	vn_is_readonly(413,11153
#define	lbolt	422,11292
#define	lbolt64	423,11326
#define	hz	424,11362
#define	gethrestime_sec(428,11468
#define	max_ncpus	430,11506
#define	minclsyspri	432,11528
#define	maxclsyspri	433,11551
#define	CPU_SEQID	435,11575
#define	kcred	437,11625
#define	CRED(438,11645
#define	ptob(440,11667
typedef struct callb_cpr 455,12041
} callb_cpr_t;457,12089
#define	CALLB_CPR_INIT(459,12105
#define	CALLB_CPR_SAFE_BEGIN(463,12190
#define	CALLB_CPR_SAFE_END(467,12274
#define	CALLB_CPR_EXIT(471,12363
#define	zone_dataset_visible(476,12476
#define	INGLOBALZONE(477,12515
struct _buf 488,12725
struct bootstat 492,12758
typedef struct ace_object 496,12799
} ace_object_t;503,12964
#define	ACE_ACCESS_ALLOWED_OBJECT_ACE_TYPE	506,12982
#define	ACE_ACCESS_DENIED_OBJECT_ACE_TYPE	507,13030
#define	ACE_SYSTEM_AUDIT_OBJECT_ACE_TYPE	508,13077
#define	ACE_SYSTEM_ALARM_OBJECT_ACE_TYPE	509,13123
typedef struct ksiddomain 523,13701
} ksiddomain_t;527,13777
#define PAGESIZE 536,13909

src/lib/libzpool/zio_compress.c,153
zio_compress_info_t zio_compress_table[zio_compress_table39,1090
zio_compress_select(57,1787
zio_compress_data(73,2140
zio_decompress_data(140,3802

src/lib/libzpool/vdev_missing.c,181
vdev_missing_open(45,1502
vdev_missing_close(60,1963
vdev_missing_io_start(66,2025
vdev_missing_io_done(74,2149
vdev_missing_probe(81,2246
vdev_ops_t vdev_missing_ops 86,2295

src/lib/libzpool/taskq.c,298
int taskq_now;31,980
typedef struct task 33,996
} task_t;38,1111
#define	TASKQ_ACTIVE	40,1122
struct taskq 42,1155
task_alloc(59,1462
task_free(90,2218
taskq_dispatch(104,2487
taskq_wait(131,3033
taskq_thread(140,3242
taskq_create(173,3959
taskq_destroy(206,4928
taskq_member(243,5666

src/lib/libzpool/dmu_zfetch.c,541
int zfs_prefetch_disable 40,1225
uint32_t	zfetch_max_streams 43,1290
uint32_t	zfetch_min_sec_reap 45,1360
uint32_t	zfetch_block_cap 47,1440
uint64_t	zfetch_array_rd_sz 49,1546
dmu_zfetch_colinear(76,2826
dmu_zfetch_dofetch(147,4675
dmu_zfetch_init(204,6178
dmu_zfetch_fetch(225,6587
dmu_zfetch_fetchsz(247,7231
dmu_zfetch_find(273,7812
dmu_zfetch_rele(450,12201
dmu_zfetch_stream_insert(479,13030
dmu_zfetch_stream_reclaim(506,13588
dmu_zfetch_stream_remove(537,14235
dmu_zfetch_streams_equal(546,14402
dmu_zfetch(574,14971

src/lib/libzpool/zap.c,977
int fzap_default_block_shift 53,1776
fzap_byteswap(60,1956
fzap_upgrade(75,2236
zap_tryupgradedir(130,3621
zap_table_grow(146,3918
zap_table_store(221,5977
zap_table_load(268,7043
zap_ptrtbl_transfer(307,7898
zap_grow_ptrtbl(318,8077
zap_increment_num_entries(364,9487
zap_allocate_blocks(374,9822
zap_create_leaf(384,10060
fzap_count(411,10735
zap_put_leaf(425,11032
_NOTE(431,11121
zap_open_leaf(442,11304
zap_get_leaf_byblk(490,12530
zap_idx_to_blk(533,13531
zap_set_idx_to_blk(549,13935
zap_deref_leaf(564,14297
zap_expand_leaf(584,14877
zap_put_leaf_maybe_grow_ptrtbl(671,17201
fzap_checksize(707,18125
fzap_lookup(733,18552
fzap_add_cd(763,19255
fzap_add(808,20247
fzap_update(821,20551
fzap_length(864,21593
fzap_remove(888,22055
zap_value_search(911,22464
zap_join(936,23017
zap_add_int(957,23497
zap_remove_int(966,23711
zap_lookup_int(975,23917
fzap_cursor_retrieve(988,24174
zap_stats_ptrtbl(1058,25913
fzap_get_stats(1084,26438

src/lib/libzpool/util.c,68
nicenum(43,1199
show_vdev_stats(70,1794
show_pool_stats(136,3850

src/lib/libzpool/dsl_pool.c,839
int zfs_no_write_throttle 40,1259
int zfs_write_limit_shift 41,1290
int zfs_txg_synctime 42,1354
uint64_t zfs_write_limit_min 44,1415
uint64_t zfs_write_limit_max 45,1486
uint64_t zfs_write_limit_inflated 46,1552
uint64_t zfs_write_limit_override 47,1591
kmutex_t zfs_write_limit_lock;49,1631
static uint64_t old_physmem 51,1663
dsl_pool_open_special_dir(54,1708
dsl_pool_open_impl(69,2040
dsl_pool_open(97,2869
dsl_pool_close(200,5548
dsl_pool_create(233,6467
dsl_pool_sync(282,7924
dsl_pool_zil_clean(383,11129
dsl_pool_sync_context(400,11550
dsl_pool_adjustedsize(407,11691
dsl_pool_tempreserve_space(430,12271
dsl_pool_tempreserve_clear(472,13555
dsl_pool_memory_pressure(479,13768
dsl_pool_willuse_space(496,14129
upgrade_clones_cb(507,14362
dsl_pool_upgrade_clones(583,16313
dsl_pool_create_origin(593,16540

src/lib/libzpool/vdev_root.c,141
too_many_errors(48,1594
vdev_root_open(55,1723
vdev_root_close(90,2319
vdev_root_state_change(99,2447
vdev_ops_t vdev_root_ops 111,2802

src/lib/libzpool/kernel.c,1720
uint64_t physmem;46,1263
vnode_t *rootdir rootdir47,1281
char hw_serial[hw_serial48,1323
struct utsname utsname 50,1344
zk_thread_create(61,1612
kstat_create(78,1993
kstat_install(86,2148
kstat_delete(91,2198
zmutex_init(100,2406
zmutex_destroy(108,2544
mutex_enter(118,2745
mutex_tryenter(129,2984
mutex_exit(143,3236
mutex_owner(152,3410
rw_init(165,3690
rw_destroy(175,3911
rw_enter(185,4098
rw_exit(211,4681
rw_tryenter(233,5150
rw_tryupgrade(267,5801
int rw_lock_held(275,5930
cv_init(291,6278
cv_destroy(299,6416
cv_wait(305,6485
cv_timedwait(315,6696
cv_signal(358,7654
cv_broadcast(364,7721
vn_open(383,8270
vn_openat(432,9208
vn_rdwr(451,9664
vn_close(479,10355
static char *dprintf_string;dprintf_string494,10690
static int dprintf_print_all;495,10719
dprintf_find_string(498,10754
dprintf_setup(520,11229
__dprintf(562,12243
static char ce_prefix[ce_prefix607,13462
static char ce_suffix[ce_suffix608,13538
vpanic(611,13606
panic(621,13814
vcmn_err(631,13921
cmn_err(644,14239
kobj_open_file(659,14551
kobj_read_file(675,14870
kobj_close_file(686,15100
kobj_get_filesize(693,15217
delay(713,15624
highbit(724,15848
static int random_fd 753,16205
random_get_bytes_common(756,16261
random_get_bytes(774,16517
random_get_pseudo_bytes(780,16625
ddi_strtoul(786,16741
umem_out_of_memory(802,17142
kernel_init(812,17310
kernel_fini(831,17762
z_uncompress(843,17878
z_compress_level(855,18091
crgetuid(868,18331
crgetgid(874,18376
crgetngroups(880,18419
crgetgroups(886,18470
zfs_secpolicy_snapshot_perms(892,18519
zfs_secpolicy_rename_perms(898,18600
zfs_secpolicy_destroy_perms(904,18695
ksid_lookupdomain(910,18786
ksiddomain_rele(920,18952

src/lib/libzpool/spa_errlog.c,315
strtonum(65,2574
bookmark_to_name(95,2941
name_to_bookmark(107,3246
spa_log_error(126,3755
spa_get_errlog_size(171,4898
process_error_log(197,5545
process_error_list(231,6145
spa_get_errlog(264,7074
spa_errlog_rotate(298,7902
spa_errlog_drain(310,8215
sync_error_list(333,8726
spa_errlog_sync(374,10098

src/lib/libzpool/zap_micro.c,1015
zap_hash(45,1239
zap_normalize(71,1896
zap_match(88,2232
zap_name_free(104,2577
zap_name_alloc(111,2705
mzap_byteswap(137,3260
zap_byteswap(153,3680
mze_compare(168,3968
mze_insert(185,4351
mze_find(201,4736
mze_find_unused_cd(233,5479
mze_remove(259,5977
mze_destroy(269,6181
mzap_open(280,6409
zap_lockdir(366,8701
zap_unlockdir(439,10616
mzap_upgrade(446,10722
mzap_create_impl(494,11879
zap_create_claim(518,12406
zap_create_claim_norm(526,12622
zap_create(540,12952
zap_create_norm(547,13137
zap_destroy(557,13403
_NOTE(568,13711
zap_count(585,13967
mzap_normalization_conflict(607,14452
zap_lookup(648,15259
zap_lookup_norm(656,15497
zap_length(704,16533
mzap_addent(739,17233
zap_add(785,18391
zap_update(830,19593
zap_remove(877,20918
zap_remove_norm(883,21060
zap_cursor_init_serialized(929,22100
zap_cursor_init(948,22543
zap_cursor_fini(954,22666
zap_cursor_serialize(970,22978
zap_cursor_retrieve(981,23239
zap_cursor_advance(1035,24574
zap_get_stats(1049,24822

src/lib/libzpool/refcount.c,537
int reference_tracking_enable 34,1041
int reference_tracking_enable 36,1122
int reference_history 38,1167
static kmem_cache_t *reference_cache;reference_cache40,1209
static kmem_cache_t *reference_history_cache;reference_history_cache41,1247
refcount_init(44,1299
refcount_fini(54,1583
refcount_create(61,1697
refcount_destroy_many(73,2017
refcount_destroy(94,2532
refcount_is_zero(100,2605
refcount_count(107,2708
refcount_add_many(114,2804
refcount_add(136,3288
refcount_remove_many(142,3394
refcount_remove(190,4643

src/lib/libzpool/dsl_scrub.c,1047
typedef int (scrub_cb_t)46,1363
static scrub_cb_t dsl_pool_scrub_clean_cb;48,1443
static dsl_syncfunc_t dsl_pool_scrub_cancel_sync;49,1486
int zfs_scrub_min_time 51,1537
int zfs_resilver_min_time 52,1605
boolean_t zfs_no_scrub_io 53,1679
static scrub_cb_t *scrub_funcs[scrub_funcs57,1777
#define	SET_BOOKMARK(62,1869
dsl_pool_scrub_setup_sync(72,2219
dsl_pool_scrub_setup(147,4712
dsl_pool_scrub_cancel_sync(155,4887
dsl_pool_scrub_cancel(226,7266
dsl_free(235,7434
bookmark_is_zero(246,7758
bookmark_is_before(254,7961
scrub_pause(296,9003
traverse_zil_block(328,9902
traverse_zil_record(348,10385
traverse_zil(372,10966
scrub_visitbp(400,11754
scrub_visit_rootbp(528,15111
dsl_pool_ds_destroyed(537,15302
dsl_pool_ds_snapshotted(559,15895
struct enqueue_clones_arg 578,16446
enqueue_clones_cb(585,16540
scrub_visitds(616,17299
enqueue_cb(663,18482
dsl_pool_scrub_sync(704,19373
dsl_pool_scrub_restart(808,22462
dsl_pool_scrub_clean_done(820,22658
dsl_pool_scrub_clean_cb(837,23048
dsl_pool_scrub_clean(913,25107

src/lib/libzpool/fletcher.c,194
fletcher_2_native(34,1033
fletcher_2_byteswap(51,1373
fletcher_4_native(68,1735
fletcher_4_byteswap(85,2050
fletcher_4_incremental_native(102,2377
fletcher_4_incremental_byteswap(125,2780

src/lib/libzpool/dsl_dir.c,1229
dsl_dir_evict(48,1452
dsl_dir_open_obj(75,2016
dsl_dir_close(177,4701
dsl_dir_name(186,4931
dsl_dir_namelen(209,5434
dsl_dir_is_private(231,5821
getcomponent(244,6028
dsl_dir_open_spa(297,7362
dsl_dir_open(398,9610
dsl_dir_create_sync(404,9760
dsl_dir_destroy_check(442,10899
dsl_dir_destroy_sync(471,11600
dsl_dir_is_clone(501,12565
dsl_dir_stats(510,12773
dsl_dir_dirty(550,14247
parent_delta(563,14520
dsl_dir_sync(571,14763
dsl_dir_space_towrite(589,15249
dsl_dir_space_available(609,15705
struct tempreserve 679,17346
dsl_dir_tempreserve_impl(687,17462
dsl_dir_tempreserve_space(803,20943
dsl_dir_tempreserve_clear(862,22290
dsl_dir_willuse_space_impl(893,23032
dsl_dir_willuse_space(920,23853
dsl_dir_diduse_space(928,24100
dsl_dir_transfer_space(973,25462
dsl_dir_set_quota_check(996,26131
dsl_dir_set_quota_sync(1026,26868
dsl_dir_set_quota(1044,27323
dsl_dir_set_reservation_check(1068,27841
dsl_dir_set_reservation_sync(1109,28810
dsl_dir_set_reservation(1138,29630
closest_common_ancestor(1153,29985
would_change(1170,30332
struct renamearg 1181,30614
dsl_dir_rename_check(1188,30708
dsl_dir_rename_sync(1227,31643
dsl_dir_rename(1281,33361
dsl_dir_transfer_possible(1312,33949

src/lib/libzpool/bplist.c,343
bplist_hold(30,992
bplist_create(44,1272
bplist_destroy(56,1564
bplist_open(62,1682
bplist_close(92,2424
bplist_empty(112,2777
bplist_cache(128,3041
bplist_iterate(146,3526
bplist_enqueue(182,4160
bplist_enqueue_deferred(230,5317
bplist_sync(243,5605
bplist_vacate(259,5962
bplist_space(277,6419
bplist_space_birthrange(318,7218

src/lib/libzpool/dsl_prop.c,463
dodefault(43,1280
dsl_prop_get_dd(72,1943
dsl_prop_get_ds(113,2872
dsl_prop_register(140,3679
dsl_prop_get(182,4775
dsl_prop_get_integer(209,5495
dsl_prop_unregister(220,5804
dsl_prop_numcb(255,6665
dsl_prop_changed_notify(273,6990
struct prop_set_arg 336,8587
dsl_prop_set_sync(345,8689
dsl_prop_set_uint64_sync(419,10767
dsl_prop_set(437,11319
dsl_prop_get_all(478,12240
dsl_prop_nvlist_add_uint64(583,14834
dsl_prop_nvlist_add_string(594,15158

src/lib/libzpool/vdev_queue.c,505
int zfs_vdev_max_pending 43,1332
int zfs_vdev_min_pending 44,1363
int zfs_vdev_time_shift 47,1439
int zfs_vdev_ramp_rate 50,1510
int zfs_vdev_aggregation_limit 56,1645
vdev_queue_deadline_compare(62,1758
vdev_queue_offset_compare(86,2157
vdev_queue_init(105,2445
vdev_queue_fini(125,3063
vdev_queue_io_add(138,3317
vdev_queue_io_remove(145,3454
vdev_queue_agg_io_done(152,3600
#define	IS_ADJACENT(172,4082
vdev_queue_io_to_issue(176,4184
vdev_queue_io(255,6153
vdev_queue_io_done(295,6942

src/lib/libzpool/flushwc.h,23
#define FLUSH_H13,314

src/lib/libzpool/vdev_cache.c,662
int zfs_vdev_cache_max 77,3021
int zfs_vdev_cache_size 78,3066
int zfs_vdev_cache_bshift 79,3117
#define	VCBS 81,3150
kstat_t	*vdc_ksp vdc_ksp83,3204
typedef struct vdc_stats 85,3230
} vdc_stats_t;89,3356
static vdc_stats_t vdc_stats 91,3372
#define	VDCSTAT_BUMP(97,3515
vdev_cache_offset_compare(100,3600
vdev_cache_lastused_compare(113,3867
vdev_cache_evict(133,4307
vdev_cache_allocate(155,5025
vdev_cache_hit(193,5918
vdev_cache_fill(214,6412
vdev_cache_read(259,7487
vdev_cache_write(340,9312
vdev_cache_purge(376,10281
vdev_cache_init(388,10521
vdev_cache_fini(404,10961
vdev_cache_stat_init(417,11164
vdev_cache_stat_fini(429,11443

src/lib/libzpool/dmu_objset.c,1404
dmu_objset_spa(48,1396
dmu_objset_zil(54,1466
dmu_objset_pool(60,1539
dmu_objset_ds(71,1747
dmu_objset_type(77,1832
dmu_objset_name(83,1908
dmu_objset_id(89,2011
checksum_changed_cb(97,2136
compression_changed_cb(110,2398
copies_changed_cb(123,2682
primary_cache_changed_cb(137,2948
secondary_cache_changed_cb(151,3253
dmu_objset_byteswap(165,3555
dmu_objset_open_impl(176,3823
dmu_objset_open_ds_os(296,7435
dmu_objset_open_ds(323,7993
dmu_objset_open(339,8299
dmu_objset_close(374,9046
dmu_objset_evict_dbufs(388,9477
dmu_objset_evict(428,10480
dmu_objset_create_impl(477,11943
struct oscarg 531,13484
dmu_objset_create_check(542,13709
dmu_objset_create_sync(573,14387
dmu_objset_create(606,15186
dmu_objset_destroy(649,16157
dmu_objset_rollback(680,16890
struct snaparg 704,17372
struct osnode 712,17506
dmu_objset_snapshot_one(718,17571
dmu_objset_snapshot(767,18855
dmu_objset_sync_dnodes(824,20134
ready(846,20612
dmu_objset_sync(877,21422
dmu_objset_space(950,23369
dmu_objset_fsid_guid(958,23603
dmu_objset_fast_stat(964,23705
dmu_objset_stats(972,23904
dmu_objset_is_snapshot(985,24207
dmu_snapshot_realname(994,24376
dmu_snapshot_list_next(1009,24775
dmu_dir_list_next(1046,25649
struct findarg 1082,26493
findfunc(1089,26582
dmu_objset_find(1100,26874
dmu_objset_find_spa(1112,27133
dmu_objset_set_user(1218,29670
dmu_objset_get_user(1225,29813

src/lib/libzpool/vdev_label.c,663
vdev_label_offset(153,5670
vdev_label_number(166,6049
vdev_label_read(179,6344
vdev_label_write(193,6774
vdev_config_generate(208,7213
vdev_label_read_config(330,10776
vdev_inuse(376,11779
vdev_label_init(488,15007
vdev_uberblock_compare(725,22113
vdev_uberblock_load_done(741,22414
vdev_uberblock_load(760,22873
vdev_uberblock_sync_done(789,23572
vdev_uberblock_sync(801,23852
vdev_uberblock_sync_list_done(832,24582
vdev_uberblock_sync_list(841,24723
vdev_label_sync_done(896,26525
vdev_label_sync_top_done(908,26755
vdev_label_sync_ignore_done(922,27028
vdev_label_sync(931,27209
vdev_label_sync_list(974,28190
vdev_config_sync(1034,30200

src/lib/libzpool/sha256.c,264
#define	Ch(48,1494
#define	Maj(49,1542
#define	Rot32(50,1599
#define	SIGMA0(51,1652
#define	SIGMA1(52,1714
#define	sigma0(53,1776
#define	sigma1(54,1836
static const uint32_t SHA256_K[SHA256_K56,1899
SHA256Transform(76,2737
zio_checksum_SHA256(102,3417

src/lib/libzpool/zap_leaf.c,832
#define	CHAIN_END 43,1322
#define	MAX_ARRAY_BYTES 46,1421
#define	LEAF_HASH(48,1454
#define	LEAF_HASH_ENTPTR(52,1593
zap_memset(56,1678
stv(66,1804
ldv(86,2101
zap_leaf_byteswap(103,2374
zap_leaf_init(155,4033
zap_leaf_chunk_alloc(179,4782
zap_leaf_chunk_free(197,5167
zap_leaf_array_create(217,5748
zap_leaf_array_free(257,6598
zap_leaf_array_read(274,7002
zap_leaf_array_match(337,8714
zap_leaf_lookup(370,9527
#define	HCD_GTEQ(421,10840
zap_leaf_lookup_closest(425,10946
zap_entry_read(467,12054
zap_entry_read_name(487,12568
zap_entry_update(501,12954
zap_entry_remove(531,13863
zap_entry_create(553,14366
zap_entry_normalization_conflict(653,17213
zap_leaf_rehash_entry(692,18090
zap_leaf_transfer_array(716,18650
zap_leaf_transfer_entry(744,19329
zap_leaf_split(772,20018
zap_leaf_stats(811,21174

src/lib/libzpool/zfs_byteswap.c,141
zfs_oldace_byteswap(35,1061
zfs_ace_byteswap(51,1376
zfs_oldacl_byteswap(114,2980
zfs_acl_byteswap(130,3242
zfs_znode_byteswap(136,3331

src/lib/libzpool/metaslab.c,1155
uint64_t metaslab_aliquot 37,1136
uint64_t metaslab_gang_bang 38,1178
metaslab_class_create(46,1457
metaslab_class_destroy(58,1613
metaslab_class_add(71,1841
metaslab_class_remove(92,2240
metaslab_compare(120,2821
metaslab_group_create(144,3295
metaslab_group_destroy(160,3742
metaslab_group_add(168,3914
metaslab_group_remove(179,4156
metaslab_group_sort(189,4383
metaslab_ff_load(212,5077
metaslab_ff_unload(219,5218
metaslab_ff_alloc(226,5343
metaslab_ff_claim(264,6186
metaslab_ff_free(271,6316
static space_map_ops_t metaslab_ff_ops 276,6418
metaslab_init(290,6752
metaslab_fini(339,8331
#define	METASLAB_WEIGHT_PRIMARY	365,8859
#define	METASLAB_WEIGHT_SECONDARY	366,8905
#define	METASLAB_ACTIVE_MASK	367,8952
#define	METASLAB_SMO_BONUS_MULTIPLIER	369,9039
metaslab_weight(372,9096
metaslab_activate(419,10579
metaslab_passivate(443,11178
metaslab_sync(459,11696
metaslab_sync_done(550,14702
metaslab_distance(613,16604
metaslab_group_alloc(630,17053
metaslab_alloc_dva(718,19141
metaslab_free_dva(873,23390
metaslab_claim_dva(953,25397
metaslab_alloc(993,26314
metaslab_free(1026,27135
metaslab_claim(1039,27393

src/lib/libzpool/vdev.c,1591
static vdev_ops_t *vdev_ops_table[vdev_ops_table47,1345
int zfs_scrub_limit 60,1596
vdev_getops(66,1707
vdev_default_asize(82,2057
vdev_get_rsize(110,2697
vdev_lookup_top(134,3110
vdev_lookup_by_guid(149,3375
vdev_add_child(166,3648
vdev_remove_child(209,4717
vdev_compact_children(249,5504
vdev_alloc_common(279,6126
vdev_alloc(337,7724
vdev_free(509,12421
vdev_top_transfer(588,14129
vdev_top_update(644,15543
vdev_add_parent(661,15803
vdev_remove_parent(691,16449
vdev_metaslab_init(732,17643
vdev_metaslab_fini(795,19163
vdev_probe(810,19460
vdev_open(828,19739
vdev_validate(1000,24443
vdev_close(1071,26109
vdev_reopen(1092,26561
vdev_create(1126,27257
vdev_init(1161,28155
vdev_dirty(1177,28546
vdev_dtl_dirty(1192,28888
vdev_dtl_contains(1201,29084
vdev_dtl_reassess(1223,29502
vdev_dtl_load(1279,31131
vdev_dtl_sync(1307,31731
vdev_resilver_needed(1377,33475
vdev_load(1417,34347
vdev_validate_aux(1452,35305
vdev_sync_done(1487,36177
vdev_sync(1498,36400
vdev_psize_to_asize(1530,37288
vdev_description(1536,37404
vdev_fault(1561,37916
vdev_degrade(1626,39505
vdev_online(1675,40813
vdev_offline(1733,42333
vdev_clear(1801,44288
vdev_readable(1838,45335
vdev_writeable(1845,45415
vdev_is_dead(1851,45504
vdev_error_inject(1864,45875
vdev_get_stats(1894,46405
vdev_clear_stats(1931,47490
vdev_stat_update(1941,47686
vdev_scrub_stat_update(2004,49259
vdev_space_update(2037,50088
vdev_config_dirty(2087,51619
vdev_config_clean(2146,53045
vdev_propagate_state(2161,53353
vdev_set_state(2219,54921
vdev_is_bootable(2341,59018

src/lib/libzpool/spa_history.c,273
spa_history_log_to_phys(73,2631
spa_history_create_obj(83,2883
spa_history_advance_bof(119,3909
spa_history_write(146,4642
spa_history_zone(179,5538
spa_history_log_sync(192,5688
spa_history_log(293,8604
spa_history_get(310,9003
spa_history_internal_log(395,11189

src/lib/libzpool/rrwlock.c,299
uint_t rrw_tsd_key;74,3237
typedef struct rrw_node 76,3258
} rrw_node_t;79,3331
rrn_find(82,3366
rrn_add(100,3679
rrn_find_and_remove(115,4010
rrw_init(138,4460
rrw_destroy(149,4737
rrw_enter_read(159,4956
rrw_enter_write(182,5570
rrw_enter(199,5981
rrw_exit(208,6118
rrw_held(235,6821

src/lib/libzpool/zfs_fuid.c,660
#define	FUID_IDX	54,1726
#define	FUID_DOMAIN	55,1754
#define	FUID_OFFSET	56,1788
#define	FUID_NVP_ARRAY	57,1822
typedef struct fuid_domain 59,1860
} fuid_domain_t;64,1975
idx_compare(70,2035
domain_compare(86,2325
zfs_fuid_table_load(103,2697
zfs_fuid_table_destroy(156,4069
zfs_fuid_idx_domain(173,4473
zfs_fuid_init(190,4779
zfs_fuid_find_by_domain(231,5814
zfs_fuid_find_by_idx(336,8698
zfs_fuid_map_ids(355,9064
zfs_fuid_map_id(364,9303
zfs_fuid_node_add(395,9976
zfs_fuid_create_cred(456,11498
zfs_fuid_create(502,12658
zfs_fuid_destroy(586,14672
zfs_fuid_info_alloc(602,15069
zfs_fuid_info_free(618,15457
zfs_groupmember(648,16241

src/lib/libzpool/zil.c,1376
int zil_disable 70,2391
boolean_t zfs_nocacheflush 77,2628
static kmem_cache_t *zil_lwb_cache;zil_lwb_cache79,2667
zil_dva_compare(82,2715
zil_dva_tree_init(101,3096
zil_dva_tree_fini(108,3244
zil_dva_tree_add(120,3451
zil_header_in_syncing_context(136,3737
zil_init_log_chain(142,3844
zil_read_log_block(156,4223
zil_parse(213,5736
zil_claim_log_block(280,7507
zil_claim_log_record(296,7916
zil_free_log_block(306,8164
zil_free_log_record(312,8314
zil_create(332,8837
zil_destroy(408,10881
zil_rollback_destroy(473,12762
zil_claim(497,13366
zil_check_log_chain(542,14697
zil_clear_log_chain(587,15604
zil_vdev_compare(613,16167
zil_add_block(627,16396
zil_flush_vdevs(658,17130
zil_lwb_write_done(700,18053
zil_lwb_write_init(727,18735
zil_lwb_write_start(753,19449
zil_lwb_commit(858,22487
zil_itx_create(941,24686
zil_itx_assign(957,25085
zil_itx_clean(977,25549
zil_clean(1021,26829
zil_commit_writer(1036,27178
zil_commit(1172,30769
zil_sync(1198,31401
zil_init(1260,33057
zil_fini(1267,33197
zil_alloc(1273,33263
zil_free(1305,34102
zil_empty(1336,34797
zil_open(1355,35115
zil_close(1370,35392
zil_suspend(1401,36308
zil_resume(1444,37251
typedef struct zil_replay_arg 1452,37399
} zil_replay_arg_t;1459,37559
zil_replay_log_record(1462,37592
zil_incr_blks(1613,41896
zil_replay(1622,42087
zil_is_committed(1661,43062

src/lib/libzpool/gzip.c,48
gzip_compress(40,1079
gzip_decompress(59,1417

src/lib/libzpool/zio.c,2920
#define AIO_MAXIO 41,1205
#define AIO_MAXEVENTS 42,1228
uint8_t zio_priority_table[zio_priority_table50,1447
char *zio_type_name[zio_type_name68,2019
uint16_t zio_zil_fail_shift 72,2157
uint16_t zio_io_fail_shift 73,2190
int zio_write_retry 76,2266
taskq_t *zio_taskq;zio_taskq79,2332
int zio_resume_threads 80,2352
typedef struct zio_sync_pass 82,2381
} zio_sync_pass_t;86,2582
zio_sync_pass_t zio_sync_pass 88,2602
kmem_cache_t *zio_cache;zio_cache101,2941
kmem_cache_t *zio_buf_cache[zio_buf_cache102,2966
kmem_cache_t *zio_data_buf_cache[zio_data_buf_cache103,3034
#define	ZIO_ENTER(114,3306
#define	IO_IS_ALLOCATING(127,3719
zio_init(131,3817
zio_fini(196,5488
zio_buf_alloc(236,6556
zio_data_buf_alloc(252,7052
zio_buf_free(262,7257
zio_data_buf_free(272,7444
zio_push_transform(287,7849
zio_pop_transform(303,8200
zio_clear_transform_stack(321,8610
zio_create(341,9144
zio_reset(450,12517
zio_null(461,12771
zio_root(474,13057
zio_read(480,13193
zio_write(512,13970
zio_rewrite(556,15103
zio_write_allocate_ready(577,15671
zio_write_allocate(587,15894
zio_free(610,16490
zio_claim(633,17053
zio_ioctl(662,18037
zio_phys_bp_init(687,18632
zio_read_phys(718,19387
zio_write_phys(745,20041
zio_vdev_child_io(790,21255
zio_destroy(825,22381
zio_wait(839,22689
zio_nowait(861,23027
zio_interrupt(867,23079
zio_issue_async(874,23240
zio_wait_for_children(888,23663
zio_add_failed_vdev(904,23962
zio_notify_parent(932,24612
zio_wait_for_children_ready(953,25128
zio_wait_for_children_done(960,25283
zio_read_init(967,25442
zio_ready(994,26091
zio_vdev_retry_io(1012,26435
zio_vdev_resume_io(1062,27632
zio_vdev_suspend_io(1131,29334
zio_handle_io_failure(1155,29831
zio_assess(1187,30867
zio_done(1294,33841
zio_write_compress(1354,35244
zio_read_decompress(1422,37337
zio_gang_byteswap(1449,37944
zio_get_gang_header(1458,38125
zio_read_gang_members(1477,38606
zio_rewrite_gang_members(1510,39447
zio_free_gang_members(1546,40421
zio_claim_gang_members(1572,40911
zio_write_allocate_gang_member_done(1597,41403
zio_write_allocate_gang_members(1621,42069
zio_dva_allocate(1722,44934
zio_dva_free(1761,45965
zio_dva_claim(1773,46139
zio_vdev_io_start(1787,46488
zio_vdev_io_done(1843,48069
zio_should_retry(1853,48257
zio_vdev_io_assess(1876,48674
zio_vdev_io_reissue(1919,49663
zio_vdev_io_redone(1928,49804
zio_vdev_io_bypass(1936,49914
zio_checksum_generate(1951,50323
zio_gang_checksum_generate(1967,50663
zio_checksum_verify(1983,51018
zio_checksum_verified(1999,51394
zio_set_gang_verifier(2008,51573
typedef int zio_pipe_stage_t(2023,52003
zio_pipe_stage_t *zio_pipeline[zio_pipeline2025,52046
zio_execute(2067,53243
zio_io_should_fail(2099,53924
zio_alloc_blk(2110,54130
zio_free_blk(2154,55249
zio_flush(2169,55514
static void zio_aio_thread(2182,55818
int zio_aio_init(2235,56949
void zio_aio_fini(2262,57501

src/lib/libzpool/zfs_fm.c,112
zfs_ereport_post(95,3752
zfs_post_common(337,11214
zfs_post_remove(369,12167
zfs_post_autoreplace(380,12502

src/lib/libzpool/vdev_mirror.c,618
typedef struct mirror_child 36,1098
} mirror_child_t;42,1220
typedef struct mirror_map 44,1239
} mirror_map_t;50,1370
int vdev_mirror_shift 52,1387
vdev_mirror_map_alloc(55,1438
vdev_mirror_map_free(115,3027
vdev_mirror_open(124,3198
vdev_mirror_close(158,3839
vdev_mirror_child_done(167,3974
vdev_mirror_scrub_done(177,4137
vdev_mirror_repair_done(197,4560
vdev_mirror_child_select(208,4846
vdev_mirror_io_start(255,6040
vdev_mirror_io_done(320,7827
vdev_mirror_state_change(459,11430
vdev_ops_t vdev_mirror_ops 470,11789
vdev_ops_t vdev_replacing_ops 482,12044
vdev_ops_t vdev_spare_ops 494,12305

src/lib/libzpool/dsl_deleg.c,525
dsl_deleg_can_allow(96,3571
dsl_deleg_can_unallow(129,4373
dsl_deleg_set_sync(155,4966
dsl_deleg_unset_sync(199,6198
dsl_deleg_set(252,7642
dsl_deleg_get(298,8860
typedef struct perm_set 371,10618
} perm_set_t;375,10724
perm_set_compare(378,10750
dsl_check_access(401,11366
dsl_check_user_access(422,11873
dsl_load_sets(466,12881
dsl_load_user_sets(505,13830
dsl_deleg_access(536,14526
copy_create_perms(645,17001
dsl_deleg_set_create_perms(691,18329
dsl_deleg_destroy(712,18819
dsl_delegation_on(732,19290

src/lib/libzpool/dmu_tx.c,783
typedef void (*dmu_tx_hold_func_t)dmu_tx_hold_func_t40,1315
dmu_tx_create_dd(45,1430
dmu_tx_create(61,1803
dmu_tx_create_assigned(70,2022
dmu_tx_is_syncing(83,2249
dmu_tx_private_ok(89,2315
dmu_tx_hold_object_impl(95,2400
dmu_tx_add_new_object(137,3340
dmu_tx_check_ioerr(150,3656
dmu_tx_count_write(167,4047
dmu_tx_count_dnode(284,7046
dmu_tx_hold_write(303,7577
dmu_tx_count_free(321,7972
dmu_tx_hold_free(468,11729
dmu_tx_hold_zap(538,13278
dmu_tx_hold_bonus(623,15498
dmu_tx_hold_space(636,15724
dmu_tx_holds(648,15957
dmu_tx_dirty_buf(675,16546
dmu_tx_try_assign(767,19143
dmu_tx_unassign(881,22555
dmu_tx_assign(929,23926
dmu_tx_wait(952,24305
dmu_tx_willuse_space(980,25080
dmu_tx_commit(997,25463
dmu_tx_abort(1040,26600
dmu_tx_get_txg(1065,27153

src/lib/libzpool/uberblock.c,52
uberblock_verify(33,1022
uberblock_update(49,1370

src/lib/libzpool/vdev_file.c,263
vdev_file_open_common(45,1217
vdev_file_open(93,2348
vdev_file_close(122,2926
vdev_file_probe_io(140,3277
vdev_file_probe(170,4042
vdev_file_io_start(231,5330
vdev_file_io_done(354,8214
vdev_ops_t vdev_file_ops 381,8838
vdev_ops_t vdev_disk_ops 398,9130

src/lib/libzpool/vdev_raidz.c,1136
typedef struct raidz_col 78,2850
} raidz_col_t;86,3206
typedef struct raidz_map 88,3222
} raidz_map_t;96,3647
#define	VDEV_RAIDZ_P	98,3663
#define	VDEV_RAIDZ_Q	99,3687
#define	VDEV_RAIDZ_MAXPARITY	101,3712
#define	VDEV_RAIDZ_MUL_2(103,3744
static const uint8_t vdev_raidz_pow2[vdev_raidz_pow2109,3978
static const uint8_t vdev_raidz_log2[vdev_raidz_log2143,5594
vdev_raidz_exp2(182,7293
vdev_raidz_map_alloc(198,7536
vdev_raidz_map_free(283,10189
vdev_raidz_generate_parity_p(296,10466
vdev_raidz_generate_parity_pq(323,11062
vdev_raidz_reconstruct_p(380,12602
vdev_raidz_reconstruct_q(412,13305
vdev_raidz_reconstruct_pq(475,14823
vdev_raidz_open(562,17215
vdev_raidz_close(602,17985
vdev_raidz_asize(611,18118
vdev_raidz_child_done(626,18493
vdev_raidz_repair_done(636,18652
vdev_raidz_io_start(643,18786
raidz_checksum_error(724,20876
raidz_parity_verify(748,21649
static uint64_t raidz_corrected_p;782,22404
static uint64_t raidz_corrected_q;783,22439
static uint64_t raidz_corrected_pq;784,22474
vdev_raidz_io_done(787,22522
vdev_raidz_state_change(1218,34000
vdev_ops_t vdev_raidz_ops 1229,34356

src/lib/libzpool/zio_checksum.c,174
zio_checksum_off(65,2375
zio_checksum_info_t zio_checksum_table[zio_checksum_table70,2483
zio_checksum_select(83,3068
zio_checksum(102,3455
zio_checksum_error(122,3966

src/lib/libzpool/dnode_sync.c,267
dnode_increase_indirection(38,1139
free_blocks(113,3361
free_verify(136,3933
#define	ALL 209,5799
free_children(212,5826
dnode_sync_free_range(298,8158
dnode_evict_dbufs(365,10188
dnode_undirty_dbufs(421,11602
dnode_sync_free(450,12298
dnode_sync(514,13962

src/lib/libzpool/dnode.c,1000
static kmem_cache_t *dnode_cache;dnode_cache41,1294
static dnode_phys_t dnode_phys_zero;43,1329
int zfs_default_bs 45,1367
int zfs_default_ibs 46,1407
dnode_cons(50,1476
dnode_dest(79,2254
dnode_init(99,2645
dnode_fini(107,2793
dnode_verify(115,2872
dnode_byteswap(168,4566
dnode_buf_byteswap(213,5940
free_range_compar(229,6231
dnode_setbonuslen(242,6490
dnode_setdblksz(259,6989
dnode_create(272,7408
dnode_destroy(307,8361
dnode_allocate(341,9126
dnode_reallocate(414,11492
dnode_special_close(491,13891
dnode_special_open(505,14224
dnode_buf_pageout(513,14400
dnode_hold_impl(551,15315
dnode_hold(643,17454
dnode_add_ref(654,17763
dnode_rele(667,18015
dnode_setdirty(680,18289
dnode_free(740,19891
dnode_set_blksz(777,20898
dnode_new_blkid(843,22409
dnode_clear_range(924,24505
dnode_free_range(977,26171
dnode_block_freed(1164,30890
dnode_diduse_space(1210,32007
dnode_willuse_space(1243,32988
dnode_next_offset_level(1258,33297
dnode_next_offset(1390,37005

src/lib/libzpool/spa.c,2119
int zio_taskq_threads 66,1894
spa_prop_add_list(81,2328
spa_prop_get_config(103,2943
spa_prop_get(155,4510
spa_prop_validate(262,6937
spa_prop_set(403,10100
spa_prop_clear_bootfs(418,10376
spa_error_entry_compare(435,10908
spa_get_errlists(457,11353
spa_activate(476,11920
spa_deactivate(524,13271
spa_config_parse(575,14613
spa_unload(614,15331
spa_load_spares(693,17183
spa_load_l2cache(806,20819
load_nvlist(931,23601
spa_check_removed(957,24274
spa_check_logs(974,24602
spa_load(1001,25234
spa_open_common(1446,37560
spa_open(1534,39755
spa_inject_addref(1544,40003
spa_inject_delref(1560,40262
spa_add_spares(1571,40457
spa_add_l2cache(1618,41732
spa_get_stats(1671,42988
spa_validate_aux_devs(1719,44132
spa_validate_aux(1795,45694
spa_set_aux_vdevs(1811,46128
spa_l2cache_drop(1860,47382
spa_create(1888,47875
spa_import_common(2085,53293
spa_build_rootpool_config(2231,57541
spa_check_rootconf(2270,58688
spa_rootdev_validate(2288,59060
spa_get_rootconf(2307,59519
spa_import_rootpool(2394,61801
spa_import(2443,63062
spa_import_faulted(2449,63203
#define	TRYIMPORT_NAME	2459,63498
spa_tryimport(2462,63543
spa_export_common(2559,66150
spa_destroy(2660,68737
spa_export(2669,68875
spa_reset(2679,69141
spa_vdev_add(2695,69482
spa_vdev_attach(2804,72913
spa_vdev_detach(3001,78491
spa_remove_spares(3213,84536
spa_remove_l2cache(3270,85838
spa_vdev_remove(3331,87209
spa_vdev_resilver_done_hunt(3374,88332
spa_vdev_resilver_done(3423,89471
spa_vdev_setpath(3462,90536
spa_scrub(3518,91986
spa_async_remove(3556,93037
spa_async_thread(3572,93386
spa_async_suspend(3635,94942
spa_async_resume(3645,95174
spa_async_dispatch(3654,95360
spa_async_request(3666,95726
spa_sync_deferred_frees(3680,96073
spa_sync_nvlist(3710,96777
spa_sync_aux_dev(3734,97350
spa_sync_config_object(3780,98739
spa_sync_props(3800,99147
spa_sync(3936,102812
spa_sync_allpools(4116,107649
spa_evict_all(4142,108266
spa_lookup_by_guid(4173,109005
spa_upgrade(4193,109364
spa_has_spare(4214,109885
spa_has_active_shared_spare(4238,110459
spa_event_notify(4262,111149

src/lib/libzpool/space_map.c,483
space_map_seg_compare(39,1138
space_map_create(58,1477
space_map_destroy(73,1810
space_map_add(81,1959
space_map_remove(135,3537
space_map_contains(184,4794
space_map_vacate(203,5274
space_map_walk(219,5635
space_map_excise(228,5869
space_map_union(261,6511
space_map_load_wait(282,7055
space_map_load(295,7313
space_map_unload(379,9242
space_map_alloc(393,9481
space_map_claim(404,9675
space_map_free(411,9827
space_map_sync(421,10051
space_map_truncate(500,12126

src/lib/libzpool/dbuf.c,1676
static arc_done_func_t dbuf_write_ready;41,1387
static arc_done_func_t dbuf_write_done;42,1428
static kmem_cache_t *dbuf_cache;dbuf_cache47,1536
dbuf_cons(51,1596
dbuf_dest(64,1890
static dbuf_hash_table_t dbuf_hash_table;75,2085
static uint64_t dbuf_hash_count;77,2128
dbuf_hash(80,2178
#define	DBUF_HASH(98,2796
#define	DBUF_EQUAL(100,2872
dbuf_find(107,3079
dbuf_hash_insert(138,3994
dbuf_hash_remove(175,4965
static arc_evict_func_t dbuf_do_evict;203,5698
dbuf_evict_user(206,5750
dbuf_evict(222,6104
dbuf_init(233,6283
dbuf_fini(266,7145
dbuf_verify(283,7448
dbuf_update_data(377,10148
dbuf_set_data(387,10383
dbuf_whichblock(406,10831
dbuf_read_done(417,11032
dbuf_read_impl(452,12001
dbuf_read(530,14273
dbuf_noread(602,16252
dbuf_fix_old_data(637,17397
dbuf_unoverride(676,18645
dbuf_free_range(716,19952
dbuf_block_freeable(814,22505
dbuf_new_size(839,23121
dbuf_dirty(887,24487
dbuf_undirty(1146,32666
dbuf_will_dirty(1237,35055
dmu_buf_will_fill(1251,35375
dbuf_fill_done(1270,35818
dbuf_clear(1303,36910
dbuf_findbp(1352,38009
dbuf_create(1406,39410
dbuf_do_evict(1483,41514
dbuf_destroy(1506,41933
dbuf_prefetch(1541,42689
dbuf_hold_impl(1598,44018
dbuf_hold(1686,46229
dbuf_hold_level(1694,46413
dbuf_create_bonus(1702,46600
dbuf_add_ref(1712,46835
dbuf_rele(1720,46998
dbuf_refcount(1774,48335
dmu_buf_set_user(1780,48422
dmu_buf_set_user_ie(1788,48642
dmu_buf_update_user(1799,48947
dmu_buf_get_user(1824,49533
dbuf_check_blkptr(1833,49707
dbuf_sync_indirect(1873,50863
dbuf_sync_leaf(1913,51773
dbuf_sync_list(2055,55979
dbuf_write(2081,56619
dbuf_write_ready(2152,58728
dbuf_write_done(2228,60746

src/lib/libzpool/dmu_object.c,133
dmu_object_alloc(34,1035
dmu_object_claim(90,2656
dmu_object_reclaim(110,3157
dmu_object_free(130,3629
dmu_object_next(151,4041

src/lib/libzpool/dsl_synctask.c,333
#define	DST_AVG_BLKSHIFT 35,1078
dsl_null_checkfunc(39,1133
dsl_sync_task_group_create(45,1232
dsl_sync_task_create(59,1545
dsl_sync_task_group_wait(78,2061
dsl_sync_task_group_nowait(128,3153
dsl_sync_task_group_destroy(138,3379
dsl_sync_task_group_sync(150,3652
dsl_sync_task_do(199,4854
dsl_sync_task_do_nowait(215,5259

src/lib/libzpool/flushwc.c,108
#define ioctl 30,736
static int flushSCSIwc(43,1149
static int flushATAwc(115,3778
int flushwc(138,4428

src/lib/libzpool/spa_config.c,324
static uint64_t spa_config_generation 60,2064
const char *spa_config_path spa_config_path66,2230
spa_config_load(74,2480
spa_config_write(146,3964
spa_config_sync(201,5352
spa_all_configs(273,7317
spa_config_set(302,7960
spa_config_generate(317,8395
spa_config_update(382,10351
spa_config_update_common(393,10641

src/lib/libzfs/include/libzfs.h,3496
#define	_LIBZFS_H28,946
#define	ZFS_MAXNAMELEN	46,1222
#define	ZPOOL_MAXNAMELEN	47,1257
#define	ZFS_MAXPROPLEN	48,1293
#define	ZPOOL_MAXPROPLEN	49,1328
	EZFS_NOMEM 55,1396
	EZFS_BADPROP,56,1436
	EZFS_PROPREADONLY,57,1481
	EZFS_PROPTYPE,58,1536
	EZFS_PROPNONINHERIT,59,1599
	EZFS_PROPSPACE,60,1655
	EZFS_BADTYPE,61,1704
	EZFS_BUSY,62,1761
	EZFS_EXISTS,63,1804
	EZFS_NOENT,64,1856
	EZFS_BADSTREAM,65,1900
	EZFS_DSREADONLY,66,1942
	EZFS_VOLTOOBIG,67,1986
	EZFS_VOLHASDATA,68,2048
	EZFS_INVALIDNAME,69,2101
	EZFS_BADRESTORE,70,2147
	EZFS_BADBACKUP,71,2204
	EZFS_BADTARGET,72,2242
	EZFS_NODEVICE,73,2299
	EZFS_BADDEV,74,2345
	EZFS_NOREPLICAS,75,2388
	EZFS_RESILVERING,76,2430
	EZFS_BADVERSION,77,2477
	EZFS_POOLUNAVAIL,78,2521
	EZFS_DEVOVERFLOW,79,2576
	EZFS_BADPATH,80,2630
	EZFS_CROSSTARGET,81,2677
	EZFS_ZONED,82,2741
	EZFS_MOUNTFAILED,83,2791
	EZFS_UMOUNTFAILED,84,2840
	EZFS_UNSHARENFSFAILED,85,2892
	EZFS_SHARENFSFAILED,86,2941
	EZFS_DEVLINKS,87,2986
	EZFS_PERM,88,3037
	EZFS_NOSPC,89,3074
	EZFS_IO,90,3107
	EZFS_INTR,91,3134
	EZFS_ISSPARE,92,3169
	EZFS_INVALCONFIG,93,3213
	EZFS_RECURSIVE,94,3265
	EZFS_NOHISTORY,95,3310
	EZFS_UNSHAREISCSIFAILED,96,3352
	EZFS_SHAREISCSIFAILED,97,3420
	EZFS_POOLPROPS,98,3484
	EZFS_POOL_NOTSUP,99,3537
	EZFS_POOL_INVALARG,100,3602
	EZFS_NAMETOOLONG,101,3670
	EZFS_OPENFAILED,102,3720
	EZFS_NOCAP,103,3766
	EZFS_LABELFAILED,104,3808
	EZFS_ISCSISVCUNAVAIL,105,3855
	EZFS_BADWHO,106,3910
	EZFS_BADPERM,107,3954
	EZFS_BADPERMSET,108,3995
	EZFS_NODELEGATION,109,4047
	EZFS_PERMRDONLY,110,4110
	EZFS_UNSHARESMBFAILED,111,4158
	EZFS_SHARESMBFAILED,112,4215
	EZFS_BADCACHE,113,4268
	EZFS_ISL2CACHE,114,4306
	EZFS_VDEVNOTSUP,115,4360
	EZFS_NOTSUP,116,4406
	EZFS_ACTIVE_SPARE,117,4461
	EZFS_UNKNOWN118,4524
typedef struct zfs_perm_node 134,5088
} zfs_perm_node_t;137,5166
typedef struct zfs_allow_node 139,5186
} zfs_allow_node_t;145,5444
typedef struct zfs_allow 147,5465
} zfs_allow_t;155,5657
typedef struct zfs_handle zfs_handle_t;160,5702
typedef struct zpool_handle zpool_handle_t;161,5742
typedef struct libzfs_handle libzfs_handle_t;162,5786
typedef int (*zpool_iter_f)zpool_iter_f193,6791
	ZPOOL_STATUS_CORRUPT_CACHE,246,8694
	ZPOOL_STATUS_MISSING_DEV_R,247,8761
	ZPOOL_STATUS_MISSING_DEV_NR,248,8825
	ZPOOL_STATUS_CORRUPT_LABEL_R,249,8893
	ZPOOL_STATUS_CORRUPT_LABEL_NR,250,8961
	ZPOOL_STATUS_BAD_GUID_SUM,251,9033
	ZPOOL_STATUS_CORRUPT_POOL,252,9100
	ZPOOL_STATUS_CORRUPT_DATA,253,9161
	ZPOOL_STATUS_FAILING_DEV,254,9226
	ZPOOL_STATUS_VERSION_NEWER,255,9286
	ZPOOL_STATUS_HOSTID_MISMATCH,256,9343
	ZPOOL_STATUS_IO_FAILURE_WAIT,257,9412
	ZPOOL_STATUS_IO_FAILURE_CONTINUE,258,9477
	ZPOOL_STATUS_FAULTED_DEV_R,259,9550
	ZPOOL_STATUS_FAULTED_DEV_NR,260,9614
	ZPOOL_STATUS_BAD_LOG,261,9682
	ZPOOL_STATUS_VERSION_OLDER,268,9899
	ZPOOL_STATUS_RESILVERING,269,9956
	ZPOOL_STATUS_OFFLINE_DEV,270,10013
	ZPOOL_STATUS_OK275,10123
} zpool_status_t;276,10140
typedef struct zprop_list 360,13329
} zprop_list_t;367,13482
#define	ZFS_MOUNTPOINT_NONE	371,13565
#define	ZFS_MOUNTPOINT_LEGACY	372,13600
typedef struct zprop_get_cbdata 395,14341
} zprop_get_cbdata_t;404,14551
#define	GET_COL_NAME	409,14704
#define	GET_COL_PROPERTY	410,14728
#define	GET_COL_VALUE	411,14755
#define	GET_COL_SOURCE	412,14780
typedef int (*zfs_iter_f)zfs_iter_f417,14837
typedef struct recvflags 440,15967
} recvflags_t;458,16482
#define	verify(526,18939
#define	verify(528,18977

src/lib/libzfs/include/zfsfuse.h,26
#define _ZFSFUSE_H27,940

src/lib/libzfs/include/libzfs_impl.h,652
#define	_LIBFS_IMPL_H28,949
#define	VERIFY	48,1255
struct libzfs_handle 50,1278
#define	ZFSSHARE_MISS	67,1704
struct zfs_handle 69,1765
#define	ZFS_IS_VOLUME(86,2217
struct zpool_handle 88,2287
	PROTO_NFS 101,2577
	PROTO_SMB 102,2593
	PROTO_END 103,2609
} zfs_share_proto_t;104,2624
	SHARED_NOT_SHARED 111,2769
	SHARED_NOT_SHARED = 0x0,x0111,2769
	SHARED_ISCSI 112,2795
	SHARED_ISCSI = 0x1,x1112,2795
	SHARED_NFS 113,2816
	SHARED_NFS = 0x2,x2113,2816
	SHARED_SMB 114,2835
	SHARED_SMB = 0x4x4114,2835
} zfs_share_type_t;115,2853
#define	CL_GATHER_MOUNT_ALWAYS	144,3960
typedef struct prop_changelist prop_changelist_t;146,3994

src/lib/libzfs/libzfs_changelist.c,411
typedef struct prop_changenode 63,1971
} prop_changenode_t;70,2167
struct prop_changelist 72,2189
changelist_prefix(94,2907
changelist_postfix(182,5076
isa_child_of(304,8567
changelist_rename(327,9173
changelist_unshare(358,9978
changelist_haszonedchild(382,10569
changelist_remove(391,10707
changelist_free(411,11107
change_one(432,11461
compare_mountpoints(520,14033
changelist_gather(562,15558

src/lib/libzfs/libzfs_util.c,1228
libzfs_errno(51,1347
libzfs_error_action(57,1429
libzfs_error_description(63,1519
zfs_error_aux(224,7436
zfs_verror(238,7668
zfs_error(264,8288
zfs_error_fmt(271,8421
zfs_common_error(285,8604
zfs_standard_error(311,9024
zfs_standard_error_fmt(318,9175
zpool_standard_error(379,10407
zpool_standard_error_fmt(386,10562
no_memory(455,11927
zfs_alloc(464,12101
zfs_realloc(478,12330
zfs_strdup(496,12678
zfs_nicenum(510,12896
libzfs_print_on_error(551,13993
libzfs_init(557,14114
libzfs_fini(586,14605
zpool_get_handle(602,14974
zfs_get_handle(608,15061
zfs_path_to_zhandle(620,15349
zcmd_alloc_dst_nvlist(663,16344
zcmd_expand_dst_nvlist(681,16867
zcmd_free_nvlists(696,17222
zcmd_write_nvlist_com(704,17407
zcmd_write_conf_nvlist(724,17799
zcmd_write_src_nvlist(731,17978
zcmd_read_dst_nvlist(741,18220
zfs_ioctl(751,18446
zprop_print_headers(773,18965
zprop_print_one_property(878,21859
str2shift(958,23302
zfs_nicestrtonum(994,24184
zprop_parse_value(1074,26187
addlist(1184,28816
zprop_get_list(1235,30144
zprop_free_list(1316,31777
typedef struct expand_data 1328,31936
} expand_data_t;1332,32028
zprop_expand_list_cb(1335,32050
zprop_expand_list(1354,32434
zprop_iter(1395,33362

src/lib/libzfs/libzfs_sendrecv.c,1084
typedef struct fsavl_node 58,1561
} fsavl_node_t;63,1669
fsavl_compare(66,1697
fsavl_find(84,2057
fsavl_destroy(101,2350
fsavl_create(117,2585
typedef struct send_data 166,3715
} send_data_t;196,4437
send_iterate_snap(201,4529
send_iterate_prop(231,5334
send_iterate_fs(276,6570
gather_nvlist(331,8311
typedef struct zfs_node 367,9104
} zfs_node_t;370,9180
zfs_sort_snaps(373,9206
zfs_snapshot_compare(385,9433
zfs_iter_snapshots_sorted(407,9982
typedef struct send_dump_data 433,10563
} send_dump_data_t;444,10882
dump_ioctl(451,11052
dump_snapshot(510,12506
dump_filesystem(550,13350
dump_filesystems(628,15537
zfs_send(689,17004
recv_read(817,20244
recv_read_nvlist(847,20835
recv_rename(874,21349
recv_destroy(947,23136
typedef struct guid_to_name_data 989,24079
} guid_to_name_data_t;992,24143
guid_to_name_cb(995,24178
guid_to_name(1010,24486
created_before(1052,25273
recv_incremental_replication(1091,26227
zfs_receive_package(1350,33022
recv_skip(1494,37028
zfs_receive_one(1554,38286
zfs_receive_impl(1986,50223
zfs_receive(2072,53106

src/lib/libzfs/libzfs_graph.c,776
#define	MIN_EDGECOUNT	87,3528
typedef struct zfs_vertex 94,3687
} zfs_vertex_t;102,3890
	VISIT_SEEN 105,3914
	VISIT_SORT_PRE,106,3931
	VISIT_SORT_POST107,3948
typedef struct zfs_edge 115,4163
} zfs_edge_t;118,4242
#define	ZFS_GRAPH_SIZE	120,4257
typedef struct zfs_graph 125,4411
} zfs_graph_t;131,4551
zfs_edge_create(137,4648
zfs_edge_destroy(153,4881
zfs_vertex_create(162,5007
zfs_vertex_destroy(188,5529
zfs_vertex_add_edge(203,5771
zfs_edge_compare(229,6287
zfs_vertex_sort_edges(245,6664
zfs_graph_create(260,7036
zfs_graph_destroy(285,7551
zfs_graph_hash(308,7984
zfs_graph_lookup(323,8292
zfs_graph_add(355,9166
iterate_children(382,9954
external_dependents(483,12681
construct_graph(518,13816
topo_sort(563,14888
get_dependents(623,16716

src/lib/libzfs/libzfs_config.c,244
typedef struct config_node 48,1523
} config_node_t;52,1614
config_node_compare(56,1658
namespace_clear(74,1962
namespace_reload(101,2499
zpool_get_config(215,5075
zpool_refresh_stats(229,5490
zpool_iter(310,7208
zfs_iter_root(340,7818

src/lib/libzfs/libzfs_import.c,821
typedef struct config_entry 62,1951
} config_entry_t;66,2054
typedef struct vdev_entry 68,2073
} vdev_entry_t;72,2180
typedef struct pool_entry 74,2197
} pool_entry_t;78,2300
typedef struct name_entry 80,2317
} name_entry_t;84,2412
typedef struct pool_list 86,2429
} pool_list_t;89,2502
get_devid(92,2532
fix_paths(121,3041
add_config(206,5274
pool_active(343,8810
refresh_config(367,9250
get_configs(414,10403
label_offset(721,17905
zpool_read_label(733,18265
zpool_find_import_impl(788,19678
zpool_find_import(938,22984
zpool_find_import_byname(944,23132
zpool_find_import_byguid(951,23303
zpool_find_import_activeok(958,23480
zpool_find_import_cached(969,23821
find_guid(1084,26350
typedef struct aux_cbdata 1104,26755
} aux_cbdata_t;1108,26849
find_aux(1111,26877
zpool_in_use(1144,27624

src/lib/libzfs/libzfs_pool.c,1927
zpool_get_all_props(59,1640
zpool_props_refresh(92,2290
zpool_get_prop_string(106,2495
zpool_get_prop_int(132,3078
zpool_state_to_name(174,4170
zpool_get_prop(203,4859
bootfs_name_valid(285,6767
pool_uses_efi(306,7210
zpool_valid_proplist(329,7744
zpool_set_prop(509,12436
zpool_expand_proplist(567,13834
zpool_name_valid(598,14484
zpool_open_canfail(686,16571
zpool_open_silent(728,17527
zpool_open(759,18116
zpool_close(780,18567
zpool_get_name(795,18849
zpool_get_state(805,18985
zpool_create(816,19260
zpool_destroy(947,22653
zpool_add(994,23766
zpool_export(1099,26626
zpool_import(1140,27714
zpool_import_props(1175,28651
zpool_scrub(1280,30936
vdev_to_nvlist_iter(1306,31610
zpool_find_vdev(1393,33921
is_guid_type(1429,34796
zpool_vdev_online(1456,35419
zpool_vdev_offline(1493,36408
zpool_vdev_fault(1538,37532
zpool_vdev_degrade(1572,38241
is_replacing_spare(1596,38874
zpool_vdev_attach(1624,39546
zpool_vdev_detach(1786,43816
zpool_vdev_remove(1843,45147
zpool_clear(1878,46105
zpool_vdev_clear(1922,47193
zpool_iter_zvol(1946,47762
typedef struct zvol_cb 2047,49788
} zvol_cb_t;2050,49863
do_zvol_create(2054,49901
zpool_create_zvol_links(2075,50300
do_zvol_remove(2094,50638
zpool_remove_zvol_links(2107,50953
devid_to_path(2116,51119
path_to_devid(2147,51628
set_path(2176,52279
zpool_vdev_name(2207,53530
zbookmark_compare(2284,55505
zpool_get_errlog(2294,55704
zpool_upgrade(2393,58322
zpool_set_history_str(2409,58718
zpool_stage_history(2428,59170
get_history(2455,59847
zpool_history_unpack(2500,61176
#define	HIS_BUF_LEN	2535,62039
zpool_get_history(2541,62125
zpool_obj_to_path(2581,62954
#define	RDISK_ROOT	2628,64298
#define	BACKUP_SLICE	2629,64329
#define	NEW_START_BLOCK	2634,64496
read_efi_label(2645,64810
find_start_block(2675,65458
zpool_label_disk(2711,66202
supported_dump_vdev_type(2814,69072
zvol_check_dump_config(2845,69980

src/lib/libzfs/libzfs_status.c,296
static char *zfs_msgid_table[zfs_msgid_table54,2072
#define	NMSGID	71,2335
vdev_missing(75,2434
vdev_faulted(83,2600
vdev_errors(90,2728
vdev_broken(97,2869
vdev_offlined(104,2998
find_vdev_problem(113,3201
check_status(167,4879
zpool_get_status(323,8860
zpool_import_status(336,9094

src/lib/libzfs/libzfs_dataset.c,2579
zfs_type_to_name(66,1717
path_to_str(89,2353
zfs_validate_name(132,3752
zfs_name_valid(217,5717
process_user_props(229,6049
zpool_add_handle(258,6656
zpool_find_handle(272,7003
zpool_handle(289,7532
zpool_free_handles(308,7899
get_stats(324,8215
zfs_refresh_properties(374,9246
make_dataset_handle(384,9460
zfs_open(483,12346
zfs_close(523,13259
zfs_spa_version(533,13423
zfs_which_resv_prop(549,13751
zfs_valid_proplist(570,14231
zfs_get_perm_who(961,24593
zfs_perms_add_to_nvlist(1013,25716
helper(1024,25964
zfs_perms_add_who_nvlist(1052,26775
zfs_build_perms(1094,28497
zfs_perm_set_common(1218,31492
zfs_perm_set(1249,32330
zfs_perm_remove(1255,32436
perm_compare(1261,32555
zfs_destroy_perm_tree(1278,32833
zfs_destroy_tree(1289,33043
zfs_free_allows(1304,33396
zfs_alloc_perm_tree(1323,33838
zfs_coalesce_perm(1364,35126
zfs_perm_get(1432,37143
zfs_deleg_perm_note(1645,42470
	ZFS_DELEG_SUBCOMMAND,1697,44217
	ZFS_DELEG_PROP,1698,44240
	ZFS_DELEG_OTHER1699,44257
} zfs_deleg_perm_type_t;1700,44274
zfs_deleg_perm_type(1706,44373
zfs_deleg_perm_type_str(1715,44533
zfs_deleg_prop_cb(1730,44858
zfs_deleg_permissions(1740,45076
zfs_prop_set(1766,45723
zfs_prop_inherit(1922,49493
getprop_uint64(2023,52236
getprop_string(2042,52663
get_numeric_property(2071,53526
get_source(2259,58069
zfs_prop_get(2288,58781
zfs_prop_get_int(2512,64347
zfs_prop_set_int(2523,64518
zfs_prop_get_numeric(2535,64780
zfs_get_name(2564,65440
zfs_get_type(2573,65571
zfs_iter_filesystems(2582,65688
zfs_iter_snapshots(2628,66836
zfs_iter_children(2666,67842
parent_name(2681,68178
check_parents(2703,68820
zfs_dataset_exists(2780,71121
create_parents(2806,71747
zfs_create_ancestors(2884,73352
zfs_create(2908,73778
zfs_destroy(3072,78439
struct destroydata 3107,79194
zfs_remove_link_cb(3114,79287
zfs_destroy_snaps(3152,80167
zfs_clone(3196,81239
typedef struct promote_data 3283,83443
} promote_data_t;3288,83578
promote_snap_cb(3291,83608
promote_snap_done_cb(3325,84579
zfs_promote(3344,85024
struct createdata 3427,87279
zfs_create_link_cb(3433,87358
zfs_snapshot(3464,88043
typedef struct rollback_data 3557,90508
} rollback_data_t;3563,90702
rollback_destroy(3566,90733
zfs_rollback(3618,92075
zfs_iter_dependents(3708,94713
zfs_rename(3741,95314
zvol_create_link(3957,101171
zvol_create_link_common(3963,101305
#define	MAX_WAIT	4033,103002
zvol_remove_link(4064,103646
zfs_get_user_props(4091,104238
zfs_expand_proplist(4108,104837
zfs_iscsi_perm_check(4192,106913
zfs_deleg_share_nfs(4242,107991

src/lib/libzfs/libzfs_zfsfuse.c,148
int zfsfuse_open(39,1139
int zfsfuse_ioctl_read_loop(76,1927
int zfsfuse_sendfd(105,2529
int zfsfuse_ioctl(136,3170
int zfsfuse_mount(193,4802

src/lib/libzfs/libzfs_mount.c,1634
#define	MAXISALEN	87,2304
} proto_table_t;107,2903
proto_table_t proto_table[proto_table109,2921
zfs_share_proto_t nfs_only[nfs_only114,3112
zfs_share_proto_t smb_only[smb_only119,3172
zfs_share_proto_t share_all_proto[share_all_proto123,3231
zfs_iscsi_init(130,3322
zfs_iscsi_init(132,3385
is_shared(160,4243
dir_is_empty(212,5417
is_mounted(240,5956
zfs_is_mounted(263,6574
zfs_is_mountable(273,6818
zfs_mount(306,7590
unmount_one(378,9669
zfs_unmount(413,10345
zfs_unmountall(459,11630
zfs_is_shared(475,11892
zfs_share(491,12224
zfs_unshare(500,12370
zfs_is_shared_proto(512,12577
zfs_is_shared_nfs(533,12990
zfs_is_shared_smb(540,13136
static void _zfs_init_libshare(573,14341
_zfs_init_libshare(575,14420
zfs_init_libshare(644,16851
zfs_uninit_libshare(684,17946
zfs_parse_options(700,18344
zfs_sa_find_share(716,18702
zfs_sa_enable_share(730,18983
zfs_sa_disable_share(744,19280
zfs_share_proto(757,19634
zfs_share_nfs(852,22356
zfs_share_smb(858,22440
zfs_shareall(864,22524
unshare_one(873,22667
zfs_unshare_proto(916,23857
zfs_unshare_nfs(955,24858
zfs_unshare_smb(961,24982
zfs_unshareall_proto(970,25172
zfs_unshareall_nfs(986,25451
zfs_unshareall_smb(992,25545
zfs_unshareall(998,25639
zfs_unshareall_bypath(1004,25736
remove_mountpoint(1021,26237
zfs_is_shared_iscsi(1043,26758
zfs_share_iscsi(1057,27049
zfs_unshare_iscsi(1098,28126
typedef struct mount_cbdata 1125,28835
} mount_cbdata_t;1129,28926
mount_cb(1132,28956
dataset_cmp(1164,29621
zpool_enable_datasets(1200,30815
zvol_cb(1266,32349
mountpoint_compare(1287,32730
zpool_disable_datasets(1304,33333

src/lib/libzfs/fletcher.c,194
fletcher_2_native(34,1033
fletcher_2_byteswap(51,1373
fletcher_4_native(68,1735
fletcher_4_byteswap(85,2050
fletcher_4_incremental_native(102,2377
fletcher_4_incremental_byteswap(125,2780

src/lib/libsolcompat/zone.c,94
zoneid_t getzoneid(30,979
zoneid_t getzoneidbyname(35,1028
ssize_t getzonenamebyid(46,1203

src/lib/libsolcompat/strlcpy.c,17
strlcpy(40,1156

src/lib/libsolcompat/getmntany.c,151
#define BUFSIZE 40,1217
__thread char buf[buf42,1253
#define DIFF(44,1282
getmntany(47,1384
int _sol_getmntent(56,1611
int getextmntent(77,2003

src/lib/libsolcompat/include/i386/sys/asm_linkage.h,20
#define __i3862,15

src/lib/libsolcompat/include/devid.h,492
#define _DEVID_H28,966
typedef int ddi_devid_t;32,1005
typedef struct devid_nmlist 34,1031
} devid_nmlist_t;37,1089
static inline int devid_str_decode(39,1108
static inline int devid_deviceid_to_nmlist(40,1217
static inline void devid_str_free(41,1355
static inline void devid_free(42,1413
static inline void devid_free_nmlist(43,1475
static inline int devid_get(44,1547
static inline int devid_get_minor_name(45,1621
static inline char *devid_str_encode(devid_str_encode46,1703

src/lib/libsolcompat/include/strings.h,30
#define _SOL_STRINGS_H28,972

src/lib/libsolcompat/include/ia32/sys/asm_linkage.h,1214
#define	_IA32_SYS_ASM_LINKAGE_H28,960
#define	D16	53,1445
#define	A16	54,1465
#define	_CONST(59,1554
#define	_BITNOT(60,1585
#define	_MUL(61,1626
#define	D16	69,1845
#define	A16	70,1869
#define	_CONST(72,1894
#define	_BITNOT(73,1925
#define	_MUL(74,1964
#define	CLONGSHIFT	83,2164
#define	CLONGSIZE	84,2185
#define	CLONGMASK	85,2205
#define	CLONGSHIFT	87,2247
#define	CLONGSIZE	88,2268
#define	CLONGMASK	89,2288
#define	CPTRSHIFT	95,2370
#define	CPTRSIZE	96,2399
#define	CPTRMASK	97,2426
#define	ASM_ENTRY_ALIGN	107,2675
#define	XMM_SIZE	113,2752
#define	XMM_ALIGN	114,2772
#define	SAVE_XMM_PROLOG(118,2816
#define	RSTOR_XMM_EPILOG(122,2921
#define	SAVE_XMM_PROLOG(127,3029
#define	RSTOR_XMM_EPILOG(133,3215
#define	MCOUNT(144,3440
#define	MCOUNT(154,3557
#define	MCOUNT(170,3862
#define	RTMCOUNT(173,3928
#define	ANSI_PRAGMA_WEAK(181,4219
#define	ANSI_PRAGMA_WEAK2(193,4463
#define	ENTRY(203,4734
#define	ENTRY_NP(210,4840
#define	RTENTRY(217,4939
#define	ENTRY2(227,5133
#define	ENTRY_NP2(237,5292
#define	ALTENTRY(251,5502
#define	DGDEF2(266,5872
#define	DGDEF3(273,5975
#define	DGDEF(281,6100
#define	SET_SIZE(286,6220
#define	NWORD	295,6337
#define	NWORD	299,6380

src/lib/libsolcompat/include/synch.h,0

src/lib/libsolcompat/include/libdevinfo.h,0

src/lib/libsolcompat/include/amd64/sys/asm_linkage.h,21
#define __amd642,16

src/lib/libsolcompat/include/mtlib.h,0

src/lib/libsolcompat/include/thread.h,1038
#define _SOL_THREAD_H29,1006
typedef pthread_t thread_t;38,1142
typedef pthread_mutex_t mutex_t;39,1170
typedef pthread_cond_t cond_t;40,1203
typedef pthread_rwlock_t rwlock_t;41,1234
#define USYNC_THREAD 43,1270
#define thr_self(45,1294
#define thr_equal(46,1342
#define thr_join(47,1394
#define thr_exit(48,1445
#define _mutex_init(49,1494
#define _mutex_destroy(50,1554
#define mutex_lock(51,1612
#define mutex_trylock(52,1667
#define mutex_unlock(53,1725
#define rwlock_init(54,1782
#define rwlock_destroy(55,1843
#define rw_rdlock(56,1902
#define rw_wrlock(57,1960
#define rw_tryrdlock(58,2018
#define rw_trywrlock(59,2079
#define rw_unlock(60,2140
#define cond_init(61,2198
#define cond_destroy(62,2257
#define cond_wait(63,2314
#define cond_signal(64,2370
#define cond_broadcast(65,2426
#define zfsfuse_thr_main(67,2486
#define THR_BOUND 69,2524
#define THR_NEW_LWP 70,2587
#define THR_DETACHED 71,2620
#define THR_SUSPENDED 72,2686
#define THR_DAEMON 73,2719
static inline int thr_create(75,2753

src/lib/libsolcompat/include/stdarg.h,72
#define _SOL_STDARG_H31,1024
typedef __gnuc_va_list __va_list;34,1065

src/lib/libsolcompat/include/string.h,29
#define _SOL_STRING_H28,971

src/lib/libsolcompat/include/libshare.h,2379
#define	_LIBSHARE_H32,1003
typedef void *sa_group_t;sa_group_t45,1135
typedef void *sa_share_t;sa_share_t46,1161
typedef void *sa_property_t;sa_property_t47,1187
typedef void *sa_optionset_t;sa_optionset_t48,1216
typedef void *sa_security_t;sa_security_t49,1246
typedef void *sa_protocol_properties_t;sa_protocol_properties_t50,1275
typedef void *sa_resource_t;sa_resource_t51,1315
typedef void *sa_handle_t;sa_handle_t53,1345
#define	SA_OK	59,1450
#define	SA_NO_SUCH_PATH	60,1468
#define	SA_NO_MEMORY	61,1529
#define	SA_DUPLICATE_NAME	62,1589
#define	SA_BAD_PATH	63,1653
#define	SA_NO_SUCH_GROUP	64,1698
#define	SA_CONFIG_ERR	65,1752
#define	SA_SYSTEM_ERR	66,1810
#define	SA_SYNTAX_ERR	67,1865
#define	SA_NO_PERMISSION	68,1925
#define	SA_BUSY	69,1986
#define	SA_NO_SUCH_PROP	70,2030
#define	SA_INVALID_NAME	71,2087
#define	SA_INVALID_PROTOCOL	72,2147
#define	SA_NOT_ALLOWED	73,2213
#define	SA_BAD_VALUE	74,2268
#define	SA_INVALID_SECURITY	75,2322
#define	SA_NO_SUCH_SECURITY	76,2381
#define	SA_VALUE_CONFLICT	77,2441
#define	SA_NOT_IMPLEMENTED	78,2500
#define	SA_INVALID_PATH	79,2569
#define	SA_NOT_SUPPORTED	80,2637
#define	SA_PROP_SHARE_ONLY	81,2705
#define	SA_NOT_SHARED	82,2770
#define	SA_NO_SUCH_RESOURCE	83,2821
#define	SA_RESOURCE_REQUIRED	84,2877
#define	SA_MULTIPLE_ERROR	85,2942
#define	SA_PATH_IS_SUBDIR	86,3011
#define	SA_PATH_IS_PARENTDIR	87,3078
#define	SA_NO_SECTION	88,3148
#define	SA_NO_SUCH_SECTION	89,3211
#define	SA_NO_PROPERTIES	90,3264
#define	SA_PASSWORD_ENC	91,3318
#define	SA_INIT_SHARE_API	94,3406
#define	SA_INIT_CONTROL_API	95,3475
#define	SA_LEGACY_ERR	98,3579
#define	SA_MAX_NAME_LEN	104,3671
#define	SA_MAX_RESOURCE_NAME	105,3737
#define	SA_SHARE_TRANSIENT	108,3869
#define	SA_SHARE_LEGACY	109,3933
#define	SA_SHARE_PERMANENT	110,3990
#define	SA_CHECK_NORMAL	113,4081
#define	SA_CHECK_STRICT	114,4147
#define	SA_RBAC_MANAGE	117,4225
#define	SA_RBAC_VALUE	118,4276
#define	SA_FEATURE_NONE	124,4365
#define	SA_FEATURE_RESOURCE	125,4424
#define	SA_FEATURE_DFSTAB	126,4493
#define	SA_FEATURE_ALLOWSUBDIRS	127,4557
#define	SA_FEATURE_ALLOWPARDIRS	128,4629
#define	SA_FEATURE_HAS_SECTIONS	129,4705
#define	SA_FEATURE_ADD_PROPERTIES	130,4777
#define	SA_FEATURE_SERVER	131,4843
#define	SA_LEGACY_DFSTAB	137,4937
#define	SA_LEGACY_SHARETAB	138,4980
#define	SA_SVC_FMRI_BASE	144,5051

src/lib/libsolcompat/include/unistd.h,29
#define _SOL_UNISTD_H28,971

src/lib/libsolcompat/include/rpc/xdr.h,316
#define _SOL_RPC_XDR_H_36,1212
#define xdr_control(46,1469
#define	XDR_GET_BYTES_AVAIL 52,1562
struct xdr_bytesrec 54,1593
typedef struct xdr_bytesrec xdr_bytesrec;59,1668
#define XDR_PEEK 71,2155
#define XDR_SKIPBYTES 72,2179
#define XDR_RDMAGET 73,2203
#define XDR_RDMASET 74,2227
xdrmem_control(78,2301

src/lib/libsolcompat/include/atomic.h,123
#define	_SYS_ATOMIC_H28,950
#define	atomic_add_ip	409,14718
#define	atomic_add_ip_nv	410,14757
#define	casip	411,14801

src/lib/libsolcompat/include/sparc64/sys/asm_linkage.h,875
#define	_SYS_ASM_LINKAGE_H28,955
#define	CPTRSHIFT	46,1292
#define	CLONGSHIFT	47,1312
#define	CPTRSHIFT	49,1339
#define	CLONGSHIFT	50,1359
#define	CPTRSIZE	52,1387
#define	CLONGSIZE	53,1419
#define	CPTRMASK	54,1453
#define	CLONGMASK	55,1485
#define	RODATA	60,1560
#define	MCOUNT_SIZE	68,1691
#define	MCOUNT(69,1738
#define	MCOUNT_SIZE	81,1884
#define	MCOUNT(82,1931
#define	MCOUNT_SIZE	101,2329
#define	MCOUNT(102,2376
#define	MCOUNT_SIZE	121,2758
#define	MCOUNT(122,2811
#define	RTMCOUNT(125,2877
#define	ANSI_PRAGMA_WEAK(133,3168
#define	ANSI_PRAGMA_WEAK2(145,3412
#define	ENTRY(155,3683
#define	ENTRY_SIZE	162,3787
#define	ENTRY_NP(164,3819
#define	RTENTRY(171,3916
#define	ENTRY2(181,4108
#define	ENTRY_NP2(191,4265
#define	ALTENTRY(205,4473
#define	DGDEF2(220,4844
#define	DGDEF3(227,4959
#define	DGDEF(235,5096
#define	SET_SIZE(240,5216

src/lib/libsolcompat/include/libgen.h,29
#define _SOL_LIBGEN_H28,971

src/lib/libsolcompat/include/tsol/label.h,0

src/lib/libsolcompat/include/priv.h,103
#define _PRIV_H28,965
#define PRIV_SYS_CONFIG 33,1054
static inline boolean_t priv_ineffect(35,1092

src/lib/libsolcompat/include/stdio_ext.h,71
#define _STDIO_EXT_H28,970
#define enable_extended_FILE_stdio(30,992

src/lib/libsolcompat/include/ucred.h,56
#define _SOL_UCRED_H28,970
typedef int ucred_t;30,992

src/lib/libsolcompat/include/zone.h,90
#define	_ZONE_H27,943
#define GLOBAL_ZONEID 40,1094
#define GLOBAL_ZONEID_NAME 41,1118

src/lib/libsolcompat/include/unistd_aux.h,103
#define _SOL_UNISTD_AUX_H28,975
static inline long fake_gethostid(33,1077
#define gethostid(39,1170

src/lib/libsolcompat/include/sys/u8_textprep_data.h,1926
#define	_SYS_U8_TEXTPREP_DATA_H69,3330
} u8_displacement_t;132,5867
#define	U8_TBL_ELEMENT_NOT_DEF	139,6070
#define	N_	140,6109
#define	U8_TBL_ELEMENT_FILLER	142,6147
#define	FIL_	143,6185
static const uchar_t u8_common_b1_tbl[u8_common_b1_tbl149,6339
static const uchar_t u8_combining_class_b2_tbl[u8_combining_class_b2_tbl220,8583
static const uchar_t u8_combining_class_b3_tbl[u8_combining_class_b3_tbl366,13180
static const uchar_t u8_combining_class_b4_tbl[u8_combining_class_b4_tbl989,34182
static const uchar_t u8_composition_b1_tbl[u8_composition_b1_tbl4736,182774
static const uchar_t u8_composition_b2_tbl[u8_composition_b2_tbl4807,185023
static const u8_displacement_t u8_composition_b3_tbl[u8_composition_b3_tbl4885,187360
static const uchar_t u8_composition_b4_tbl[u8_composition_b4_tbl5772,218820
static const uint16_t u8_composition_b4_16bit_tbl[u8_composition_b4_16bit_tbl8649,331209
static const uchar_t u8_composition_final_tbl[u8_composition_final_tbl9006,347542
static const uchar_t u8_decomp_b2_tbl[u8_decomp_b2_tbl10669,430368
static const u8_displacement_t u8_decomp_b3_tbl[u8_decomp_b3_tbl10815,434954
static const uchar_t u8_decomp_b4_tbl[u8_decomp_b4_tbl12230,485972
static const uint16_t u8_decomp_b4_16bit_tbl[u8_decomp_b4_16bit_tbl20497,809952
static const uchar_t u8_decomp_final_tbl[u8_decomp_final_tbl22604,907026
static const uchar_t u8_case_common_b2_tbl[u8_case_common_b2_tbl27455,1148915
static const u8_displacement_t u8_tolower_b3_tbl[u8_tolower_b3_tbl27601,1153508
static const uchar_t u8_tolower_b4_tbl[u8_tolower_b4_tbl28268,1184151
static const uchar_t u8_tolower_final_tbl[u8_tolower_final_tbl30795,1282758
static const u8_displacement_t u8_toupper_b3_tbl[u8_toupper_b3_tbl31378,1311382
static const uchar_t u8_toupper_b4_tbl[u8_toupper_b4_tbl32045,1342034
static const uchar_t u8_toupper_final_tbl[u8_toupper_final_tbl34782,1448793

src/lib/libsolcompat/include/sys/proc.h,157
#define _SOL_PROC_H28,969
#define issig(33,1034
#define tsd_create(42,1229
#define tsd_destroy(43,1317
#define tsd_get(44,1398
#define tsd_set(45,1465

src/lib/libsolcompat/include/sys/param.h,307
#define _SOL_SYS_PARAM_H28,974
#define MAXBSIZE 45,1560
#define DEV_BSIZE 46,1584
#define DEV_BSHIFT 47,1607
#define MAXNAMELEN 49,1655
#define MAXOFFSET_T 50,1678
#define UID_NOBODY 52,1719
#define GID_NOBODY 53,1773
#define UID_NOACCESS 54,1808
#define MAXUID 56,1865
#define MAXPROJID 57,1923

src/lib/libsolcompat/include/sys/uuid.h,216
#define	_SYS_UUID_H28,969
} uuid_node_t;65,2262
struct uuid 70,2352
#define	UUID_LEN	79,2527
#define	UUID_PRINTABLE_STRING_LENGTH 81,2548
typedef uchar_t		uuid_t[uuid_t83,2589
#define	UUID_LE_CONVERT(88,2679

src/lib/libsolcompat/include/sys/debug.h,52
#define _SYS_DEBUG_H28,970
#define ASSERT(32,1013

src/lib/libsolcompat/include/sys/ioctl.h,93
#define _SOL_SYS_IOCTL_H28,968
static inline int real_ioctl(34,1047
#define ioctl(45,1293

src/lib/libsolcompat/include/sys/systm.h,0

src/lib/libsolcompat/include/sys/mkdev.h,0

src/lib/libsolcompat/include/sys/int_limits.h,0

src/lib/libsolcompat/include/sys/cred.h,66
#define _SOL_SYS_CRED_H28,973
typedef struct cred cred_t;30,998

src/lib/libsolcompat/include/sys/sunddi.h,50
#define _SOL_SUNDDI_H28,971
ddi_strtoul(38,1098

src/lib/libsolcompat/include/sys/inttypes.h,63
#define _SOL_SYS_INTTYPES_H28,977
#define _INT64_TYPE32,1029

src/lib/libsolcompat/include/sys/byteorder.h,1313
#define	_SYS_BYTEORDER_H41,1350
#define	ntohl(61,1757
#define	ntohll(62,1778
#define	ntohs(63,1800
#define	htonl(64,1821
#define	htonll(65,1842
#define	htons(66,1864
#define	_IN_PORT_T71,1948
typedef uint16_t in_port_t;72,1967
#define	_IN_ADDR_T76,2022
typedef uint32_t in_addr_t;77,2041
#define	BSWAP_8(102,2781
#define	BSWAP_16(103,2813
#define	BSWAP_32(104,2873
#define	BSWAP_64(105,2937
#define	BMASK_8(107,3002
#define	BMASK_16(108,3034
#define	BMASK_32(109,3069
#define	BMASK_64(110,3108
#define	BE_8(116,3233
#define	BE_16(117,3261
#define	BE_32(118,3290
#define	BE_64(119,3319
#define	LE_8(120,3348
#define	LE_16(121,3376
#define	LE_32(122,3405
#define	LE_64(123,3434
#define	LE_8(125,3469
#define	LE_16(126,3497
#define	LE_32(127,3526
#define	LE_64(128,3555
#define	BE_8(129,3584
#define	BE_16(130,3612
#define	BE_32(131,3641
#define	BE_64(132,3670
#define	BE_IN8(140,3801
#define	BE_IN16(143,3843
#define	BE_IN32(146,3925
#define	BE_IN64(149,4010
#define	LE_IN8(152,4095
#define	LE_IN16(155,4137
#define	LE_IN32(158,4221
#define	LE_IN64(161,4308
#define	BE_OUT8(169,4491
#define	BE_OUT16(171,4552
#define	BE_OUT32(175,4655
#define	BE_OUT64(179,4761
#define	LE_OUT8(183,4867
#define	LE_OUT16(185,4928
#define	LE_OUT32(189,5031
#define	LE_OUT64(193,5137

src/lib/libsolcompat/include/sys/varargs.h,0

src/lib/libsolcompat/include/sys/sysmacros.h,655
#define _SOL_SYS_SYSMACROS_H28,978
#define makedevice(32,1041
#define MIN(36,1119
#define MAX(39,1186
#define ABS(42,1253
#define P2ALIGN(48,1381
#define P2CROSS(49,1427
#define P2ROUNDUP(50,1484
#define P2ROUNDUP_TYPED(51,1534
#define P2PHASE(53,1638
#define P2NPHASE(54,1689
#define P2NPHASE_TYPED(55,1741
#define ISP2(57,1846
#define IS_P2ALIGNED(58,1900
#define P2ALIGN_TYPED(71,2468
#define P2PHASE_TYPED(73,2547
#define P2NPHASE_TYPED(75,2631
#define P2ROUNDUP_TYPED(77,2716
#define P2END_TYPED(79,2799
#define P2PHASEUP_TYPED(81,2882
#define P2CROSS_TYPED(83,3005
#define P2SAMEHIGHBIT_TYPED(85,3109
#define	offsetof(92,3344

src/lib/libsolcompat/include/sys/mnttab.h,332
#define _SYS_MNTTAB_H31,1089
#define MNTTAB 41,1211
#define MNT_LINE_MAX 42,1241
#define MNT_TOOLONG 44,1268
#define MNT_TOOMANY 45,1326
#define MNT_TOOFEW 46,1381
struct mnttab 48,1436
struct extmnttab 61,1758
static inline char *_sol_hasmntopt(_sol_hasmntopt74,2093
#define hasmntopt 83,2262
#define getmntent 84,2295

src/lib/libsolcompat/include/sys/mntio.h,0

src/lib/libsolcompat/include/sys/dklabel.h,982
#define	_SYS_DKLABEL_H28,977
#define	DKL_MAGIC	43,1153
#define	FKL_MAGIC	44,1198
#define	NDKMAP	47,1287
#define	DK_LABEL_LOC	48,1337
#define	NDKMAP	50,1419
#define	DK_LABEL_LOC	51,1468
#define	LEN_DKL_ASCII	56,1568
#define	LEN_DKL_VVOL	57,1626
#define	DK_LABEL_SIZE	58,1675
#define	DK_MAX_BLOCKS	59,1727
#define	DK_ACYL	68,2020
struct dk_map 83,2406
struct dk_map32 93,2634
struct dk_map2 103,2879
struct dkl_partition 108,2985
struct dk_vtoc 121,3286
#define	LEN_DKL_PAD	152,4491
#define	LEN_DKL_PAD	158,4703
struct dk_label 169,4976
#define	dkl_asciilabel	213,6947
#define	v_timestamp	214,6992
#define	dkl_gap1	221,7126
#define	dkl_gap2	222,7174
#define	dkl_bhead	223,7222
#define	dkl_ppart	224,7284
struct fk_label 229,7394
#define	DK_DEVID_BLKSIZE	239,7582
#define	DK_DEVID_SIZE	240,7613
#define	DK_DEVID_REV_MSB	241,7682
#define	DK_DEVID_REV_LSB	242,7711
struct dk_devid 244,7741
#define	DKD_GETCHKSUM(255,8101
#define	DKD_FORMCHKSUM(260,8263

src/lib/libsolcompat/include/sys/u8_textprep.h,1328
#define	_SYS_U8_TEXTPREP_H27,954
#define	UCONV_IN_BIG_ENDIAN	42,1163
#define	UCONV_OUT_BIG_ENDIAN	43,1199
#define	UCONV_IN_SYSTEM_ENDIAN	44,1236
#define	UCONV_OUT_SYSTEM_ENDIAN	45,1275
#define	UCONV_IN_LITTLE_ENDIAN	46,1315
#define	UCONV_OUT_LITTLE_ENDIAN	47,1354
#define	UCONV_IGNORE_NULL	48,1394
#define	UCONV_IN_ACCEPT_BOM	49,1428
#define	UCONV_OUT_EMIT_BOM	50,1464
#define	U8_STRCMP_CS	68,2223
#define	U8_STRCMP_CI_UPPER	69,2259
#define	U8_STRCMP_CI_LOWER	70,2300
#define	U8_CANON_DECOMP	72,2342
#define	U8_COMPAT_DECOMP	73,2381
#define	U8_CANON_COMP	74,2420
#define	U8_STRCMP_NFD	76,2458
#define	U8_STRCMP_NFC	77,2500
#define	U8_STRCMP_NFKD	78,2558
#define	U8_STRCMP_NFKC	79,2602
#define	U8_TEXTPREP_TOUPPER	81,2663
#define	U8_TEXTPREP_TOLOWER	82,2713
#define	U8_TEXTPREP_NFD	84,2764
#define	U8_TEXTPREP_NFC	85,2806
#define	U8_TEXTPREP_NFKD	86,2848
#define	U8_TEXTPREP_NFKC	87,2891
#define	U8_TEXTPREP_IGNORE_NULL	89,2935
#define	U8_TEXTPREP_IGNORE_INVALID	90,2981
#define	U8_TEXTPREP_NOWAIT	91,3029
#define	U8_UNICODE_320	93,3071
#define	U8_UNICODE_500	94,3100
#define	U8_UNICODE_LATEST	95,3129
#define	U8_VALIDATE_ENTIRE	97,3174
#define	U8_VALIDATE_CHECK_ADDITIONAL	98,3215
#define	U8_VALIDATE_UCS2_RANGE	99,3265
#define	U8_ILLEGAL_CHAR	101,3311
#define	U8_OUT_OF_RANGE_CHAR	102,3342

src/lib/libsolcompat/include/sys/isa_defs.h,3844
#define	_SYS_ISA_DEFS_H28,952
#define	__amd64	223,8390
#define	__x86227,8457
#define	_LITTLE_ENDIAN233,8540
#define	_STACK_GROWS_DOWNWARD234,8563
#define	_LONG_LONG_LTOH235,8593
#define	_BIT_FIELDS_LTOH236,8617
#define	_IEEE_754237,8642
#define	_CHAR_IS_SIGNED238,8660
#define	_BOOL_ALIGNMENT	239,8684
#define	_CHAR_ALIGNMENT	240,8712
#define	_SHORT_ALIGNMENT	241,8740
#define	_INT_ALIGNMENT	242,8768
#define	_FLOAT_ALIGNMENT	243,8795
#define	_FLOAT_COMPLEX_ALIGNMENT	244,8823
#define	_LONG_ALIGNMENT	245,8858
#define	_LONG_LONG_ALIGNMENT	246,8886
#define	_DOUBLE_ALIGNMENT	247,8918
#define	_DOUBLE_COMPLEX_ALIGNMENT	248,8947
#define	_LONG_DOUBLE_ALIGNMENT	249,8983
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	250,9018
#define	_POINTER_ALIGNMENT	251,9060
#define	_MAX_ALIGNMENT	252,9090
#define	_ALIGNMENT_REQUIRED	253,9118
#define	_LONG_LONG_ALIGNMENT_32	258,9231
#define	_LP64264,9346
#define	_I32LPx267,9409
#define	_MULTI_DATAMODEL269,9432
#define	_SUNOS_VTOC_16270,9457
#define	_DMA_USES_PHYSADDR271,9480
#define	_FIRMWARE_NEEDS_FDISK272,9507
#define	__i386_COMPAT273,9537
#define	_PSM_MODULES274,9559
#define	_RTC_CONFIG275,9580
#define	_DONT_USE_1275_GENERIC_NAMES276,9600
#define	_HAVE_CPUID_INSN277,9637
#define	__i386287,9960
#define	__x86291,10003
#define	_LITTLE_ENDIAN297,10086
#define	_STACK_GROWS_DOWNWARD298,10109
#define	_LONG_LONG_LTOH299,10139
#define	_BIT_FIELDS_LTOH300,10163
#define	_IEEE_754301,10188
#define	_CHAR_IS_SIGNED302,10206
#define	_BOOL_ALIGNMENT	303,10230
#define	_CHAR_ALIGNMENT	304,10258
#define	_SHORT_ALIGNMENT	305,10286
#define	_INT_ALIGNMENT	306,10314
#define	_FLOAT_ALIGNMENT	307,10341
#define	_FLOAT_COMPLEX_ALIGNMENT	308,10369
#define	_LONG_ALIGNMENT	309,10404
#define	_LONG_LONG_ALIGNMENT	310,10432
#define	_DOUBLE_ALIGNMENT	311,10464
#define	_DOUBLE_COMPLEX_ALIGNMENT	312,10493
#define	_LONG_DOUBLE_ALIGNMENT	313,10529
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	314,10563
#define	_POINTER_ALIGNMENT	315,10604
#define	_MAX_ALIGNMENT	316,10634
#define	_ALIGNMENT_REQUIRED	317,10661
#define	_LONG_LONG_ALIGNMENT_32	319,10693
#define	_ILP32324,10807
#define	_I32LPx326,10864
#define	_SUNOS_VTOC_16328,10887
#define	_DMA_USES_PHYSADDR329,10910
#define	_FIRMWARE_NEEDS_FDISK330,10937
#define	_PSM_MODULES331,10967
#define	_RTC_CONFIG332,10988
#define	_DONT_USE_1275_GENERIC_NAMES333,11008
#define	_HAVE_CPUID_INSN334,11045
#define	__sparc358,12038
#define	__sparcv8375,12588
#define	_BIG_ENDIAN382,12723
#define	_STACK_GROWS_DOWNWARD383,12743
#define	_LONG_LONG_HTOL384,12773
#define	_BIT_FIELDS_HTOL385,12797
#define	_IEEE_754386,12822
#define	_CHAR_IS_SIGNED387,12840
#define	_BOOL_ALIGNMENT	388,12864
#define	_CHAR_ALIGNMENT	389,12892
#define	_SHORT_ALIGNMENT	390,12920
#define	_INT_ALIGNMENT	391,12948
#define	_FLOAT_ALIGNMENT	392,12975
#define	_FLOAT_COMPLEX_ALIGNMENT	393,13003
#define	_LONG_LONG_ALIGNMENT	394,13038
#define	_DOUBLE_ALIGNMENT	395,13070
#define	_DOUBLE_COMPLEX_ALIGNMENT	396,13099
#define	_ALIGNMENT_REQUIRED	397,13135
#define	_SUNOS_VTOC_8402,13250
#define	_DMA_USES_VIRTADDR403,13272
#define	_NO_FDISK_PRESENT404,13299
#define	_HAVE_TEM_FIRMWARE405,13325
#define	_OBP406,13352
#define	_LONG_ALIGNMENT	417,13568
#define	_LONG_DOUBLE_ALIGNMENT	418,13596
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	419,13630
#define	_POINTER_ALIGNMENT	420,13671
#define	_MAX_ALIGNMENT	421,13701
#define	_LONG_LONG_ALIGNMENT_32	423,13729
#define	_ILP32428,13842
#define	_I32LPx430,13899
#define	_LONG_ALIGNMENT	442,14127
#define	_LONG_DOUBLE_ALIGNMENT	443,14155
#define	_LONG_DOUBLE_COMPLEX_ALIGNMENT	444,14190
#define	_POINTER_ALIGNMENT	445,14232
#define	_MAX_ALIGNMENT	446,14262
#define	_LONG_LONG_ALIGNMENT_32	448,14291
#define	_LP64454,14424
#define	_I32LPx457,14467
#define	_MULTI_DATAMODEL459,14490

src/lib/libsolcompat/include/sys/idmap.h,1873
#define	_SYS_IDMAP_H27,948
#define	IDMAP_SUCCESS	32,997
#define	IDMAP_NEXT	33,1023
#define	IDMAP_ERR_OTHER	34,1046
#define	IDMAP_ERR_INTERNAL	35,1079
#define	IDMAP_ERR_MEMORY	36,1113
#define	IDMAP_ERR_NORESULT	37,1145
#define	IDMAP_ERR_NOTUSER	38,1179
#define	IDMAP_ERR_NOTGROUP	39,1212
#define	IDMAP_ERR_NOTSUPPORTED	40,1246
#define	IDMAP_ERR_W2U_NAMERULE	41,1284
#define	IDMAP_ERR_U2W_NAMERULE	42,1322
#define	IDMAP_ERR_CACHE	43,1360
#define	IDMAP_ERR_DB	44,1392
#define	IDMAP_ERR_ARG	45,1421
#define	IDMAP_ERR_SID	46,1451
#define	IDMAP_ERR_IDTYPE	47,1481
#define	IDMAP_ERR_RPC_HANDLE	48,1513
#define	IDMAP_ERR_RPC	49,1549
#define	IDMAP_ERR_CLIENT_HANDLE	50,1579
#define	IDMAP_ERR_BUSY	51,1618
#define	IDMAP_ERR_PERMISSION_DENIED	52,1649
#define	IDMAP_ERR_NOMAPPING	53,1691
#define	IDMAP_ERR_NEW_ID_ALLOC_REQD	54,1726
#define	IDMAP_ERR_DOMAIN	55,1768
#define	IDMAP_ERR_SECURITY	56,1800
#define	IDMAP_ERR_NOTFOUND	57,1834
#define	IDMAP_ERR_DOMAIN_NOTFOUND	58,1868
#define	IDMAP_ERR_UPDATE_NOTALLOWED	59,1908
#define	IDMAP_ERR_CFG	60,1950
#define	IDMAP_ERR_CFG_CHANGE	61,1980
#define	IDMAP_ERR_NOTMAPPED_WELLKNOWN	62,2016
#define	IDMAP_ERR_RETRIABLE_NET_ERR	63,2060
#define	IDMAP_ERR_W2U_NAMERULE_CONFLICT	64,2102
#define	IDMAP_ERR_U2W_NAMERULE_CONFLICT	65,2148
#define	IDMAP_ERR_BAD_UTF8	66,2194
#define	IDMAP_ERR_NONEGENERATED	67,2228
#define	IDMAP_ERR_PROP_UNKNOWN	68,2267
#define	IDMAP_ERR_NS_LDAP_OP_FAILED	69,2305
#define	IDMAP_ERR_NS_LDAP_PARTIAL	70,2347
#define	IDMAP_ERR_NS_LDAP_CFG	71,2387
#define	IDMAP_ERR_NS_LDAP_BAD_WINNAME	72,2424
#define	IDMAP_WK_LOCAL_SYSTEM_GID	75,2514
#define	IDMAP_WK_CREATOR_GROUP_GID	76,2577
#define	IDMAP_WK__MAX_GID	77,2624
#define	IDMAP_WK_CREATOR_OWNER_UID	80,2709
#define	IDMAP_WK__MAX_UID	81,2756
#define	IDMAP_WK_CREATOR_SID_AUTHORITY	84,2816
#define	IDMAP_MAX_DOOR_RPC	91,3049

src/lib/libsolcompat/include/sys/kmem.h,0

src/lib/libsolcompat/include/sys/feature_tests.h,64
#define _SYS_FEATURE_TESTS_H28,978
#define __NORETURN 30,1008

src/lib/libsolcompat/include/sys/file.h,327
#define _SOL_SYS_FILE_H28,973
#define FREAD 34,1049
#define FWRITE 35,1067
#define FCREAT 38,1107
#define FTRUNC 39,1131
#define FOFFMAX 40,1155
#define FSYNC 41,1183
#define FDSYNC 42,1206
#define FRSYNC 43,1230
#define FEXCL 44,1254
#define FNODSYNC 46,1278
#define FNOFOLLOW 47,1334
#define FIGNORECASE 48,1394

src/lib/libsolcompat/include/sys/stat.h,95
#define _SOL_STAT_H28,963
static inline int zfsfuse_fstat64(40,1130
#define fstat64(58,1476

src/lib/libsolcompat/include/sys/modctl.h,0

src/lib/libsolcompat/include/sys/bitmap.h,0

src/lib/libsolcompat/include/sys/mntent.h,3032
#define	_SYS_MNTENT_H30,1027
#define	MNTTAB	38,1092
#define	VFSTAB	39,1123
#define	MNTMAXSTR	40,1153
#define	MNTTYPE_ZFS	42,1176
#define	MNTTYPE_UFS	43,1226
#define	MNTTYPE_SMBFS	44,1276
#define	MNTTYPE_NFS	45,1331
#define	MNTTYPE_NFS3	46,1380
#define	MNTTYPE_NFS4	47,1441
#define	MNTTYPE_CACHEFS	48,1502
#define	MNTTYPE_PCFS	49,1560
#define	MNTTYPE_PC	50,1618
#define	MNTTYPE_LOFS	51,1690
#define	MNTTYPE_LO	52,1747
#define	MNTTYPE_HSFS	53,1819
#define	MNTTYPE_SWAP	54,1885
#define	MNTTYPE_TMPFS	55,1937
#define	MNTTYPE_AUTOFS	56,1999
#define	MNTTYPE_MNTFS	57,2065
#define	MNTTYPE_DEV	58,2119
#define	MNTTYPE_CTFS	59,2169
#define	MNTTYPE_OBJFS	60,2225
#define	MNTTYPE_SHAREFS	61,2288
#define	MNTOPT_RO	64,2358
#define	MNTOPT_RW	65,2398
#define	MNTOPT_RQ	66,2439
#define	MNTOPT_QUOTA	67,2492
#define	MNTOPT_NOQUOTA	68,2541
#define	MNTOPT_ONERROR	69,2599
#define	MNTOPT_SOFT	70,2663
#define	MNTOPT_SEMISOFT	71,2708
#define	MNTOPT_HARD	72,2784
#define	MNTOPT_SUID	73,2829
#define	MNTOPT_NOSUID	74,2895
#define	MNTOPT_DEVICES	75,2967
#define	MNTOPT_NODEVICES	76,3029
#define	MNTOPT_SETUID	77,3098
#define	MNTOPT_NOSETUID	78,3151
#define	MNTOPT_GRPID	79,3212
#define	MNTOPT_REMOUNT	80,3278
#define	MNTOPT_NOSUB	81,3338
#define	MNTOPT_MULTI	82,3401
#define	MNTOPT_INTR	83,3463
#define	MNTOPT_NOINTR	84,3529
#define	MNTOPT_PORT	85,3594
#define	MNTOPT_SECURE	86,3654
#define	MNTOPT_RSIZE	87,3718
#define	MNTOPT_WSIZE	88,3780
#define	MNTOPT_TIMEO	89,3843
#define	MNTOPT_RETRANS	90,3902
#define	MNTOPT_ACTIMEO	91,3973
#define	MNTOPT_ACREGMIN	92,4037
#define	MNTOPT_ACREGMAX	93,4109
#define	MNTOPT_ACDIRMIN	94,4181
#define	MNTOPT_ACDIRMAX	95,4252
#define	MNTOPT_NOAC	96,4323
#define	MNTOPT_NOCTO	97,4387
#define	MNTOPT_BG	98,4452
#define	MNTOPT_FG	99,4513
#define	MNTOPT_RETRY	100,4574
#define	MNTOPT_DEV	101,4634
#define	MNTOPT_POSIX	102,4690
#define	MNTOPT_MAP	103,4756
#define	MNTOPT_DIRECT	104,4802
#define	MNTOPT_INDIRECT	105,4868
#define	MNTOPT_LLOCK	106,4938
#define	MNTOPT_IGNORE	107,5006
#define	MNTOPT_VERS	108,5061
#define	MNTOPT_PROTO	109,5129
#define	MNTOPT_SEC	110,5195
#define	MNTOPT_SYNCDIR	111,5253
#define	MNTOPT_NOSETSEC	112,5324
#define	MNTOPT_NOPRINT	113,5393
#define	MNTOPT_LARGEFILES 114,5454
#define	MNTOPT_NOLARGEFILES 115,5517
#define	MNTOPT_FORCEDIRECTIO 116,5590
#define	MNTOPT_NOFORCEDIRECTIO 117,5669
#define	MNTOPT_DISABLEDIRECTIO 118,5742
#define	MNTOPT_PUBLIC	119,5821
#define	MNTOPT_LOGGING 120,5886
#define	MNTOPT_NOLOGGING 121,5941
#define	MNTOPT_ATIME	122,6001
#define	MNTOPT_NOATIME 123,6060
#define	MNTOPT_GLOBAL	124,6130
#define	MNTOPT_NOGLOBAL	125,6193
#define	MNTOPT_DFRATIME	126,6261
#define	MNTOPT_NODFRATIME 127,6331
#define	MNTOPT_NBMAND	128,6408
#define	MNTOPT_NONBMAND	129,6480
#define	MNTOPT_XATTR	130,6555
#define	MNTOPT_NOXATTR	131,6618
#define	MNTOPT_EXEC	132,6685
#define	MNTOPT_NOEXEC	133,6738
#define	MNTOPT_RESTRICT	134,6795
#define	MNTOPT_BROWSE	135,6860
#define	MNTOPT_NOBROWSE	136,6920

src/lib/libsolcompat/include/sys/zmod.h,421
#define	_ZMOD_H28,944
#define	Z_OK	44,1290
#define	Z_STREAM_END	45,1306
#define	Z_NEED_DICT	46,1329
#define	Z_ERRNO	47,1351
#define	Z_STREAM_ERROR	48,1373
#define	Z_DATA_ERROR	49,1401
#define	Z_MEM_ERROR	50,1427
#define	Z_BUF_ERROR	51,1452
#define	Z_VERSION_ERROR	52,1477
#define	Z_NO_COMPRESSION	54,1507
#define	Z_BEST_SPEED	55,1534
#define	Z_BEST_COMPRESSION	56,1558
#define	Z_DEFAULT_COMPRESSION	57,1587

src/lib/libsolcompat/include/sys/note.h,51
#define	_SYS_NOTE_H40,1479
#define	_NOTE(49,1556

src/lib/libsolcompat/include/sys/trap.h,0

src/lib/libsolcompat/include/sys/stack.h,0

src/lib/libsolcompat/include/sys/fm/protocol.h,0

src/lib/libsolcompat/include/sys/fm/util.h,0

src/lib/libsolcompat/include/sys/sysevent/eventdefs.h,3684
#define	_SYS_SYSEVENT_EVENTDEFS_H27,961
#define	EC_NONE	40,1233
#define	EC_PRIV	41,1260
#define	EC_PLATFORM	42,1287
#define	EC_DR	43,1354
#define	EC_ENV	44,1419
#define	EC_DOMAIN	45,1484
#define	EC_AP_DRIVER	46,1539
#define	EC_IPMP	47,1611
#define	EC_DEV_ADD	48,1672
#define	EC_DEV_REMOVE	49,1733
#define	EC_DEV_BRANCH	50,1803
#define	EC_DEV_STATUS	51,1878
#define	EC_FM	52,1948
#define	EC_ZFS	53,2001
#define	EC_DATALINK	54,2042
#define	EC_CLUSTER	60,2192
#define	EC_SVM_CONFIG	66,2329
#define	EC_SVM_STATE	67,2367
#define	ESC_SVM_CREATE	73,2527
#define	ESC_SVM_DELETE	74,2568
#define	ESC_SVM_ADD	75,2609
#define	ESC_SVM_REMOVE	76,2644
#define	ESC_SVM_REPLACE	77,2685
#define	ESC_SVM_GROW	78,2728
#define	ESC_SVM_RENAME_SRC	79,2765
#define	ESC_SVM_RENAME_DST	80,2813
#define	ESC_SVM_MEDIATOR_ADD	81,2861
#define	ESC_SVM_MEDIATOR_DELETE	82,2913
#define	ESC_SVM_HOST_ADD	83,2971
#define	ESC_SVM_HOST_DELETE	84,3015
#define	ESC_SVM_DRIVE_ADD	85,3065
#define	ESC_SVM_DRIVE_DELETE	86,3111
#define	ESC_SVM_DETACH	87,3163
#define	ESC_SVM_DETACHING	88,3204
#define	ESC_SVM_ATTACH	89,3250
#define	ESC_SVM_ATTACHING	90,3291
#define	ESC_SVM_INIT_START	96,3460
#define	ESC_SVM_INIT_FAILED	97,3508
#define	ESC_SVM_INIT_FATAL	98,3558
#define	ESC_SVM_INIT_SUCCESS	99,3606
#define	ESC_SVM_IOERR	100,3658
#define	ESC_SVM_ERRED	101,3697
#define	ESC_SVM_LASTERRED	102,3736
#define	ESC_SVM_OK	103,3782
#define	ESC_SVM_ENABLE	104,3815
#define	ESC_SVM_RESYNC_START	105,3856
#define	ESC_SVM_RESYNC_FAILED	106,3908
#define	ESC_SVM_RESYNC_SUCCESS	107,3962
#define	ESC_SVM_RESYNC_DONE	108,4018
#define	ESC_SVM_HOTSPARED	109,4068
#define	ESC_SVM_HS_FREED	110,4114
#define	ESC_SVM_HS_CHANGED	111,4158
#define	ESC_SVM_TAKEOVER	112,4206
#define	ESC_SVM_RELEASE	113,4250
#define	ESC_SVM_OPEN_FAIL	114,4293
#define	ESC_SVM_OFFLINE	115,4339
#define	ESC_SVM_ONLINE	116,4382
#define	ESC_SVM_CHANGE	117,4423
#define	ESC_SVM_EXCHANGE	118,4464
#define	ESC_SVM_REGEN_START	119,4508
#define	ESC_SVM_REGEN_DONE	120,4558
#define	ESC_SVM_REGEN_FAILED	121,4606
#define	ESC_DR_AP_STATE_CHANGE	129,4810
#define	ESC_DR_REQ	130,4866
#define	ESC_DR_TARGET_STATE_CHANGE	131,4916
#define	ESC_ENV_TEMP	137,5097
#define	ESC_ENV_FAN	138,5173
#define	ESC_ENV_POWER	139,5246
#define	ESC_ENV_LED	140,5325
#define	ESC_DOMAIN_STATE_CHANGE	148,5541
#define	ESC_DOMAIN_LOGHOST_CHANGE	150,5633
#define	ESC_AP_DRIVER_PATHSWITCH	158,5861
#define	ESC_AP_DRIVER_COMMIT	160,5961
#define	ESC_AP_DRIVER_PHYS_PATH_STATUS_CHANGE	162,6066
#define	ESC_IPMP_GROUP_STATE	171,6310
#define	ESC_IPMP_GROUP_CHANGE	174,6409
#define	ESC_IPMP_GROUP_MEMBER_CHANGE	177,6520
#define	ESC_IPMP_IF_CHANGE	180,6652
#define	ESC_DISK	187,6841
#define	ESC_NETWORK	188,6884
#define	ESC_PRINTER	189,6938
#define	ESC_LOFI	190,6989
#define	ESC_DEV_BRANCH_ADD	198,7188
#define	ESC_DEV_BRANCH_REMOVE	201,7270
#define	ESC_DEV_DLE	204,7367
#define	ESC_FM_ERROR	207,7453
#define	ESC_FM_ERROR_REPLAY	208,7490
#define	ESC_PLATFORM_SP_RESET	211,7586
#define	EC_PWRCTL	216,7682
#define	ESC_PWRCTL_ADD	217,7714
#define	ESC_PWRCTL_REMOVE	218,7756
#define	ESC_PWRCTL_WARN	219,7803
#define	ESC_PWRCTL_LOW	220,7847
#define	ESC_PWRCTL_STATE_CHANGE	221,7889
#define	ESC_PWRCTL_POWER_BUTTON	222,7948
#define	ESC_PWRCTL_BRIGHTNESS_UP	223,8007
#define	ESC_PWRCTL_BRIGHTNESS_DOWN	224,8067
#define	ESC_ZFS_RESILVER_START	230,8239
#define	ESC_ZFS_RESILVER_FINISH	231,8295
#define	ESC_ZFS_VDEV_REMOVE	232,8353
#define	ESC_ZFS_POOL_DESTROY	233,8403
#define	ESC_ZFS_VDEV_CLEAR	234,8455
#define	ESC_ZFS_VDEV_CHECK	235,8503
#define	ESC_ZFS_CONFIG_SYNC	236,8551
#define	ESC_DATALINK_PHYS_ADD	241,8643

src/lib/libsolcompat/include/sys/time.h,271
#define _SOL_SYS_TIME_H28,973
typedef longlong_t hrtime_t;38,1127
typedef struct timespec timestruc_t;39,1156
#define NANOSEC 41,1194
#define TIME32_MAX 43,1222
#define TIME32_MIN 44,1251
#define TIMESPEC_OVERFLOW(46,1281
static inline hrtime_t gethrtime(48,1369

src/lib/libsolcompat/include/sys/utsname.h,62
#define _SOL_UTSNAME_H28,972
struct utsname utsname;32,1027

src/lib/libsolcompat/include/sys/callb.h,0

src/lib/libsolcompat/include/sys/efi_partition.h,0

src/lib/libsolcompat/include/sys/vmem.h,63
#define _SYS_VMEM_H28,969
typedef struct vmem vmem_t;32,1094

src/lib/libsolcompat/include/sys/sdt.h,0

src/lib/libsolcompat/include/sys/systeminfo.h,0

src/lib/libsolcompat/include/sys/acl_impl.h,204
#define	_SYS_ACL_IMPL_H27,951
#define	ACL_IS_TRIVIAL	41,1137
#define	ACL_IS_DIR	42,1168
typedef enum acl_type 44,1196
	ACLENT_T 45,1220
	ACE_T 46,1235
} acl_type_t;47,1246
struct acl_info 49,1261

src/lib/libsolcompat/include/sys/user.h,27
#define _SOL_USER_H28,969

src/lib/libsolcompat/include/sys/uio.h,243
#define	_SOL_SYS_UIO_H41,1357
typedef enum uio_rw 46,1459
typedef enum uio_rw { UIO_READ,46,1459
typedef enum uio_rw { UIO_READ, UIO_WRITE 46,1459
typedef enum uio_rw { UIO_READ, UIO_WRITE } uio_rw_t;46,1459
#define UIO_SYSSPACE 48,1514

src/lib/libsolcompat/include/sys/types32.h,970
#define	_SYS_TYPES32_H27,950
typedef	uint32_t	caddr32_t;48,1299
typedef	int32_t		daddr32_t;49,1327
typedef	int32_t		off32_t;50,1355
typedef	uint32_t	ino32_t;51,1381
typedef	int32_t		blkcnt32_t;52,1407
typedef uint32_t	fsblkcnt32_t;53,1436
typedef	uint32_t	fsfilcnt32_t;54,1467
typedef	int32_t		id32_t;55,1498
typedef	uint32_t	major32_t;56,1523
typedef	uint32_t	minor32_t;57,1551
typedef	int32_t		key32_t;58,1579
typedef	uint32_t	mode32_t;59,1605
typedef	uint32_t	uid32_t;60,1632
typedef	uint32_t	gid32_t;61,1658
typedef	uint32_t	nlink32_t;62,1684
typedef	uint32_t	dev32_t;63,1712
typedef	int32_t		pid32_t;64,1738
typedef	uint32_t	size32_t;65,1764
typedef	int32_t		ssize32_t;66,1791
typedef	int32_t		time32_t;67,1819
typedef	int32_t		clock32_t;68,1846
struct timeval32 70,1875
typedef struct timespec32 75,1973
} timespec32_t;78,2075
typedef struct timespec32 timestruc32_t;80,2092
typedef	struct itimerspec32 82,2134
} itimerspec32_t;85,2225

src/lib/libsolcompat/include/sys/int_types.h,0

src/lib/libsolcompat/include/sys/kstat.h,2244
#define	_SYS_KSTAT_H27,948
typedef int	kid_t;42,1142
#define	KSTAT_IOC_BASE	48,1241
#define	KSTAT_IOC_CHAIN_ID	50,1277
#define	KSTAT_IOC_READ	51,1326
#define	KSTAT_IOC_WRITE	52,1372
#define	KSTAT_STRLEN	62,1637
typedef struct kstat 68,1740
} kstat_t;93,2797
typedef int32_t kid32_t;97,2828
typedef struct kstat32 99,2854
} kstat32_t;124,3472
#define	KSTAT_ENTER(153,4711
#define	KSTAT_EXIT(156,4796
#define	KSTAT_UPDATE(159,4879
#define	KSTAT_SNAPSHOT(161,4938
#define	KSTAT_TYPE_RAW	221,7109
#define	KSTAT_TYPE_NAMED	223,7182
#define	KSTAT_TYPE_INTR	225,7256
#define	KSTAT_TYPE_IO	227,7335
#define	KSTAT_TYPE_TIMER	229,7406
#define	KSTAT_NUM_TYPES	232,7477
#define	KSTAT_FLAG_VIRTUAL	301,9919
#define	KSTAT_FLAG_VAR_SIZE	302,9952
#define	KSTAT_FLAG_WRITABLE	303,9986
#define	KSTAT_FLAG_PERSISTENT	304,10020
#define	KSTAT_FLAG_DORMANT	305,10056
#define	KSTAT_FLAG_INVALID	306,10089
#define	KSTAT_READ	348,11727
#define	KSTAT_WRITE	349,11748
typedef struct kstat_named 443,15498
} kstat_named_t;484,16776
#define	KSTAT_DATA_CHAR	486,16794
#define	KSTAT_DATA_INT32	487,16821
#define	KSTAT_DATA_UINT32	488,16848
#define	KSTAT_DATA_INT64	489,16876
#define	KSTAT_DATA_UINT64	490,16903
#define	KSTAT_DATA_LONG	493,16952
#define	KSTAT_DATA_ULONG	494,16994
#define	KSTAT_DATA_LONG	497,17065
#define	KSTAT_DATA_ULONG	498,17107
#define	KSTAT_DATA_LONG	500,17156
#define	KSTAT_DATA_ULONG	501,17216
#define	KSTAT_DATA_STRING	521,18241
#define	KSTAT_DATA_LONGLONG	525,18302
#define	KSTAT_DATA_ULONGLONG	526,18347
#define	KSTAT_DATA_FLOAT	527,18394
#define	KSTAT_DATA_DOUBLE	528,18421
#define	KSTAT_NAMED_PTR(530,18450
#define	KSTAT_NAMED_STR_PTR(535,18597
#define	KSTAT_NAMED_STR_BUFLEN(541,18765
#define	KSTAT_INTR_HARD	562,19611
#define	KSTAT_INTR_SOFT	563,19639
#define	KSTAT_INTR_WATCHDOG	564,19667
#define	KSTAT_INTR_SPURIOUS	565,19698
#define	KSTAT_INTR_MULTSVC	566,19729
#define	KSTAT_NUM_INTRS	568,19760
typedef struct kstat_intr 570,19789
} kstat_intr_t;572,19874
#define	KSTAT_INTR_PTR(574,19891
typedef struct kstat_io 580,19982
} kstat_io_t;677,23545
#define	KSTAT_IO_PTR(679,23560
typedef struct kstat_timer 688,23816
} kstat_timer_t;697,24236
#define	KSTAT_TIMER_PTR(699,24254

src/lib/libsolcompat/include/sys/acl.h,4420
#define _SOL_SYS_ACL_H27,950
#define	MAX_ACL_ENTRIES	38,1066
typedef struct acl 39,1129
} aclent_t;43,1285
typedef struct ace 45,1298
} ace_t;50,1472
typedef struct acl_info acl_t;52,1482
#define	USER_OBJ	57,1573
#define	USER	58,1617
#define	GROUP_OBJ	59,1662
#define	GROUP	60,1721
#define	CLASS_OBJ	61,1768
#define	OTHER_OBJ	62,1832
#define	ACL_DEFAULT	63,1891
#define	DEF_USER_OBJ	65,1966
#define	DEF_USER	67,2043
#define	DEF_GROUP_OBJ	69,2108
#define	DEF_GROUP	71,2188
#define	DEF_CLASS_OBJ	73,2253
#define	DEF_OTHER_OBJ	75,2327
#define	ACE_READ_DATA	80,2423
#define	ACE_LIST_DIRECTORY	81,2457
#define	ACE_WRITE_DATA	82,2495
#define	ACE_ADD_FILE	83,2530
#define	ACE_APPEND_DATA	84,2563
#define	ACE_ADD_SUBDIRECTORY	85,2599
#define	ACE_READ_NAMED_ATTRS	86,2639
#define	ACE_WRITE_NAMED_ATTRS	87,2679
#define	ACE_EXECUTE	88,2720
#define	ACE_DELETE_CHILD	89,2752
#define	ACE_READ_ATTRIBUTES	90,2788
#define	ACE_WRITE_ATTRIBUTES	91,2827
#define	ACE_DELETE	92,2867
#define	ACE_READ_ACL	93,2898
#define	ACE_WRITE_ACL	94,2931
#define	ACE_WRITE_OWNER	95,2965
#define	ACE_SYNCHRONIZE	96,3001
#define	ACE_FILE_INHERIT_ACE	98,3038
#define	ACE_DIRECTORY_INHERIT_ACE	99,3075
#define	ACE_NO_PROPAGATE_INHERIT_ACE	100,3116
#define	ACE_INHERIT_ONLY_ACE	101,3160
#define	ACE_SUCCESSFUL_ACCESS_ACE_FLAG	102,3197
#define	ACE_FAILED_ACCESS_ACE_FLAG	103,3243
#define	ACE_IDENTIFIER_GROUP	104,3285
#define	ACE_INHERITED_ACE	105,3322
#define	ACE_OWNER	106,3356
#define	ACE_GROUP	107,3383
#define	ACE_EVERYONE	108,3410
#define	ACE_ACCESS_ALLOWED_ACE_TYPE	110,3441
#define	ACE_ACCESS_DENIED_ACE_TYPE	111,3484
#define	ACE_SYSTEM_AUDIT_ACE_TYPE	112,3526
#define	ACE_SYSTEM_ALARM_ACE_TYPE	113,3567
#define	ACL_AUTO_INHERIT	115,3609
#define	ACL_PROTECTED	116,3642
#define	ACL_DEFAULTED	117,3673
#define	ACL_FLAGS_ALL	118,3704
#define	ACE_ACCESS_ALLOWED_COMPOUND_ACE_TYPE	126,3854
#define	ACE_ACCESS_ALLOWED_OBJECT_ACE_TYPE	127,3905
#define	ACE_ACCESS_DENIED_OBJECT_ACE_TYPE	128,3954
#define	ACE_SYSTEM_AUDIT_OBJECT_ACE_TYPE	129,4002
#define	ACE_SYSTEM_ALARM_OBJECT_ACE_TYPE	130,4049
#define	ACE_ACCESS_ALLOWED_CALLBACK_ACE_TYPE	131,4096
#define	ACE_ACCESS_DENIED_CALLBACK_ACE_TYPE	132,4147
#define	ACE_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE	133,4197
#define	ACE_ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE	134,4254
#define	ACE_SYSTEM_AUDIT_CALLBACK_ACE_TYPE	135,4310
#define	ACE_SYSTEM_ALARM_CALLBACK_ACE_TYPE	136,4359
#define	ACE_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE	137,4408
#define	ACE_SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE	138,4463
#define	ACE_ALL_TYPES	140,4519
typedef struct ace_object 142,4549
} ace_object_t;149,4824
#define	ACE_ALL_PERMS	153,4849
#define	ACE_READ_PERMS	159,5183
#define	ACE_WRITE_PERMS	162,5284
#define	ACE_MODIFY_PERMS 165,5392
#define	ACE_NFSV4_SUP_FLAGS 172,5765
#define	ACE_TYPE_FLAGS	178,5946
#define	ACE_INHERIT_FLAGS	180,6033
#define	GETACL	184,6205
#define	SETACL	185,6224
#define	GETACLCNT	186,6243
#define	ACE_GETACL	189,6301
#define	ACE_SETACL	190,6323
#define	ACE_GETACLCNT	191,6345
#define	MIN_ACL_ENTRIES	194,6412
#define	GRP_ERROR	199,6486
#define	USER_ERROR	200,6507
#define	OTHER_ERROR	201,6529
#define	CLASS_ERROR	202,6552
#define	DUPLICATE_ERROR	203,6575
#define	MISS_ERROR	204,6602
#define	MEM_ERROR	205,6624
#define	ENTRY_ERROR	206,6645
#define	UFSD_FREE	213,6772
#define	UFSD_ACL	214,6813
#define	UFSD_DFACL	215,6863
#define	ACE_ACL	216,6918
#define	ACL_NO_TRIVIAL	222,7050
#define	ACL_APPEND_ID	229,7120
#define	ACL_COMPACT_FMT	230,7190
#define	ACL_NORESOLVE	231,7251
#define	ACL_SID_FMT	232,7313
#define	EACL_GRP_ERROR	237,7433
#define	EACL_USER_ERROR	238,7467
#define	EACL_OTHER_ERROR	239,7503
#define	EACL_CLASS_ERROR	240,7540
#define	EACL_DUPLICATE_ERROR	241,7577
#define	EACL_MISS_ERROR	242,7622
#define	EACL_MEM_ERROR	243,7658
#define	EACL_ENTRY_ERROR	244,7692
#define	EACL_INHERIT_ERROR	246,7730
#define	EACL_FLAGS_ERROR	247,7788
#define	EACL_PERM_MASK_ERROR	248,7842
#define	EACL_COUNT_ERROR	249,7900
#define	EACL_INVALID_SLOT	251,7954
#define	EACL_NO_ACL_ENTRY	252,8007
#define	EACL_DIFF_TYPE	253,8063
#define	EACL_INVALID_USER_GROUP	255,8120
#define	EACL_INVALID_STR	256,8183
#define	EACL_FIELD_NOT_BLANK	257,8237
#define	EACL_INVALID_ACCESS_TYPE 258,8299
#define	EACL_UNKNOWN_DATA	259,8362
#define	EACL_MISSING_FIELDS	260,8423
#define	EACL_INHERIT_NOTDIR	262,8484

src/lib/libsolcompat/include/sys/priv.h,0

src/lib/libsolcompat/include/sys/mount.h,262
#define _SOL_SYS_MOUNT_H28,974
#define BLKGETSIZE64 44,1264
#define MS_FORCE 47,1315
#define MS_OVERLAY 48,1346
#define MS_NOMNTTAB 49,1373
#define MS_OPTIONSTR 50,1433
#define FUSESPEC 52,1494
static inline int _sol_mount(55,1601
#define mount 78,2207

src/lib/libsolcompat/include/sys/types.h,826
#define _SOL_SYS_TYPES_H28,974
typedef enum boolean 37,1171
typedef enum boolean { B_FALSE,37,1171
typedef enum boolean { B_FALSE, B_TRUE 37,1171
typedef enum boolean { B_FALSE, B_TRUE } boolean_t;37,1171
typedef unsigned char uchar_t;39,1224
typedef unsigned short ushort_t;40,1255
typedef unsigned int uint_t;41,1288
typedef unsigned long ulong_t;42,1317
typedef long long longlong_t;44,1349
typedef unsigned long long u_longlong_t;45,1379
typedef longlong_t offset_t;47,1421
typedef u_longlong_t u_offset_t;48,1450
typedef u_longlong_t len_t;49,1483
typedef longlong_t diskaddr_t;50,1511
typedef short pri_t;52,1543
typedef int zoneid_t;54,1565
typedef int projid_t;55,1587
typedef int major_t;57,1610
typedef int minor_t;58,1631
typedef ushort_t o_mode_t;60,1653
} lloff_t;74,2100
} lloff_t;84,2323

src/lib/libsolcompat/include/sys/zone.h,0

src/lib/libsolcompat/include/sys/vtoc.h,815
#define	_SYS_VTOC_H32,1034
#define	V_NUMPAR 61,1802
#define	VTOC_SANE	64,1885
#define	V_VERSION	65,1942
#define	V_UNASSIGNED	70,2035
#define	V_BOOT	71,2089
#define	V_ROOT	72,2132
#define	V_SWAP	73,2176
#define	V_USR	74,2220
#define	V_BACKUP	75,2262
#define	V_STAND	76,2301
#define	V_VAR	77,2346
#define	V_HOME	78,2387
#define	V_ALTSCTR	79,2430
#define	V_CACHE	80,2487
#define	V_RESERVED	81,2542
#define	V_UNMNT	86,2629
#define	V_RONLY	87,2680
#define	VT_ERROR	92,2769
#define	VT_EIO	93,2828
#define	VT_EINVAL	94,2881
#define	VT_ENOTSUP	95,2944
#define	VT_ENOSPC	96,2998
struct partition	98,3055
struct vtoc 105,3266
struct partition32	119,3859
struct vtoc32 126,4074
#define	vtoc32tovtoc(139,4629
#define	vtoctovtoc32(164,5515
#define	CK_CHECKSUM	198,6605
#define	CK_MAKESUM	199,6648

src/lib/libsolcompat/include/sys/processor.h,0

src/lib/libsolcompat/include/sys/dkio.h,4394
#define	_SYS_DKIO_H27,947
#define	DK_DEVLEN	45,1185
struct dk_cinfo 51,1322
#define	DKC_UNKNOWN	70,1978
#define	DKC_CDROM	71,2000
#define	DKC_WDC2880	72,2052
#define	DKC_XXX_0	73,2074
#define	DKC_XXX_1	74,2111
#define	DKC_DSD5215	75,2148
#define	DKC_ACB4000	76,2170
#define	DKC_MD21	77,2192
#define	DKC_XXX_2	78,2211
#define	DKC_NCRFLOPPY	79,2248
#define	DKC_SMSFLOPPY	80,2273
#define	DKC_SCSI_CCS	81,2298
#define	DKC_INTEL82072	82,2348
#define	DKC_MD	83,2399
#define	DKC_INTEL82077	84,2456
#define	DKC_DIRECT	85,2517
#define	DKC_PCMCIA_MEM	86,2583
#define	DKC_PCMCIA_ATA	87,2644
#define	DKC_VBD	88,2700
#define	DKC_CUSTOMER_BASE	94,2788
#define	DKI_BAD144	99,2836
#define	DKI_MAPTRK	100,2900
#define	DKI_FMTTRK	101,2960
#define	DKI_FMTVOL	102,3024
#define	DKI_FMTCYL	103,3089
#define	DKI_HEXUNIT	104,3157
#define	DKI_PCMCIA_PFD	105,3227
struct dk_allmap 110,3329
struct dk_allmap32 115,3408
struct dk_geom 123,3533
#define	dkg_bhead	144,4452
#define	dkg_gap1	145,4508
#define	dkg_gap2	146,4556
#define	DKIOC	157,4922
#define	DKIOCGGEOM	163,5065
#define	DKIOCINFO	164,5114
#define	DKIOCEJECT	165,5158
#define	DKIOCGVTOC	166,5210
#define	DKIOCSVTOC	167,5256
#define	DKIOCFLUSHWRITECACHE	189,6308
struct dk_callback 191,6382
#define	FLUSH_VOLATILE	198,6533
#define	DKIOCGETWCE	202,6681
#define	DKIOCSETWCE	204,6773
#define	DKIOCSGEOM	211,7013
#define	DKIOCSAPART	212,7062
#define	DKIOCGAPART	213,7118
#define	DKIOCG_PHYGEOM	214,7174
#define	DKIOCG_VIRTGEOM	215,7237
#define	DKIOCLOCK	220,7361
#define	DKIOCUNLOCK	221,7410
#define	DKIOCSTATE	222,7463
#define	DKIOCREMOVABLE	223,7526
#define	DKIOCHOTPLUGGABLE	229,7628
#define	DKIOCADDBAD	235,7795
#define	DKIOCGETDEF	236,7864
struct defect_header32 243,8028
struct defect_header 249,8112
#define	DKIOCPARTINFO	254,8169
struct part_info32 260,8330
struct part_info 266,8415
#define	DKIOC_EBP_ENABLE 272,8530
#define	DKIOC_EBP_DISABLE 273,8603
enum dkio_state 278,8752
enum dkio_state { DKIO_NONE,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED, DKIO_INSERTED,278,8752
enum dkio_state { DKIO_NONE, DKIO_EJECTED, DKIO_INSERTED, DKIO_DEV_GONE 278,8752
#define	DKIOCGMEDIAINFO	280,8828
#define	DKIOCGMBOOT	285,8945
#define	DKIOCSMBOOT	286,8997
#define	DKIOCGTEMPERATURE	291,9097
struct	dk_temperature	297,9204
#define	DKT_BYPASS_PM	303,9372
#define	DKT_INVALID_TEMP	304,9399
struct dk_minfo 310,9491
#define	DK_UNKNOWN	319,9730
#define	DK_REMOVABLE_DISK	327,9968
#define	DK_MO_ERASABLE	328,10020
#define	DK_MO_WRITEONCE	329,10067
#define	DK_AS_MO	330,10117
#define	DK_CDROM	331,10152
#define	DK_CDR	332,10187
#define	DK_CDRW	333,10220
#define	DK_DVDROM	334,10255
#define	DK_DVDR	335,10293
#define	DK_DVDRAM	336,10328
#define	DK_FIXED_DISK	341,10435
#define	DK_FLOPPY	342,10501
#define	DK_ZIP	343,10547
#define	DK_JAZ	344,10595
#define	DKIOCSETEFI	346,10644
#define	DKIOCGETEFI	347,10695
#define	DKIOCPARTITION	349,10747
#define	DKIOCGETVOLCAP	357,11023
#define	DKIOCSETVOLCAP	358,11089
#define	DKIOCDMR	359,11155
#define	DKIOCDUMPINIT	361,11214
#define	DKIOCDUMPFINI	362,11270
typedef uint_t volcapinfo_t;364,11330
typedef uint_t volcapset_t;366,11360
#define	DKV_ABR_CAP 368,11389
#define	DKV_DMR_CAP 369,11455
typedef struct volcap 371,11524
} volcap_t;374,11644
#define	VOL_SIDENAME 376,11657
typedef struct vol_directed_rd 378,11683
} vol_directed_rd_t;386,11870
#define	DKV_SIDE_INIT	388,11892
#define	DKV_DMR_NEXT_SIDE	389,11920
#define	DKV_DMR_DONE	390,11957
#define	DKV_DMR_ERROR	391,11990
#define	DKV_DMR_SUCCESS	392,12024
#define	DKV_DMR_SHORT	393,12060
typedef struct vol_directed_rd32 399,12204
} vol_directed_rd32_t;407,12447
#define	DKIOC_GETDISKID	421,12926
#define	DKD_ATA_TYPE	424,13019
#define	DKD_SCSI_TYPE	425,13085
#define	DKD_ATA_MODEL	427,13154
#define	DKD_ATA_FWVER	428,13205
#define	DKD_ATA_SERIAL	429,13260
#define	DKD_SCSI_VENDOR	431,13314
#define	DKD_SCSI_PRODUCT 432,13363
#define	DKD_SCSI_REVLEVEL 433,13415
#define	DKD_SCSI_SERIAL 434,13471
typedef struct dk_disk_id 439,13581
} dk_disk_id_t;454,14072
#define	DKIOC_UPDATEFW	459,14151
typedef struct dk_updatefw 462,14236
} dk_updatefw_t;466,14409
typedef struct dk_updatefw_32 469,14445
} dk_updatefw_32_t;473,14622
#define	FW_TYPE_TEMP	479,14727
#define	FW_TYPE_PERM	480,14773

src/lib/libsolcompat/include/sys/sysevent.h,0

src/lib/libsolcompat/include/sys/cmn_err.h,0

src/lib/libsolcompat/include/sys/rctl.h,0

src/lib/libsolcompat/include/sys/va_list.h,30
#define _SYS_VA_LIST_H28,972

src/lib/libsolcompat/include/libc.h,0

src/lib/libsolcompat/include/libdiskmgt.h,0

src/lib/libsolcompat/u8_textprep.c,2164
#define	U8_MB_CUR_MAX	58,1666
#define	U8_MAX_BYTES_UCS2	64,1839
#define	U8_STREAM_SAFE_TEXT_MAX	67,1937
#define	U8_MAX_CHARS_A_SEQ	73,2126
#define	U8_UPPER_LIMIT_IN_A_SEQ	74,2159
#define	U8_COMBINING_CLASS_STARTER	77,2243
#define	U8_HANGUL_SYL_FIRST	98,3193
#define	U8_HANGUL_SYL_LAST	99,3232
#define	U8_HANGUL_JAMO_L_FIRST	101,3271
#define	U8_HANGUL_JAMO_L_LAST	102,3313
#define	U8_HANGUL_JAMO_V_FIRST	103,3354
#define	U8_HANGUL_JAMO_V_LAST	104,3396
#define	U8_HANGUL_JAMO_T_FIRST	105,3437
#define	U8_HANGUL_JAMO_T_LAST	106,3479
#define	U8_HANGUL_V_COUNT	108,3521
#define	U8_HANGUL_VT_COUNT	109,3553
#define	U8_HANGUL_T_COUNT	110,3587
#define	U8_HANGUL_JAMO_1ST_BYTE	112,3620
#define	U8_SAVE_HANGUL_AS_UTF8(114,3662
#define	U8_HANGUL_JAMO_L(119,3900
#define	U8_HANGUL_JAMO_V(122,3996
#define	U8_HANGUL_JAMO_T(125,4092
#define	U8_HANGUL_JAMO(128,4187
#define	U8_HANGUL_SYLLABLE(131,4281
#define	U8_HANGUL_COMPOSABLE_L_V(134,4373
#define	U8_HANGUL_COMPOSABLE_LV_T(137,4468
#define	U8_DECOMP_BOTH	141,4608
#define	U8_DECOMP_CANONICAL	142,4641
#define	U8_16BIT_TABLE_INDICATOR	145,4717
#define	U8_PUT_3BYTES_INTO_UTF32(148,4810
#define	U8_SIMPLE_SWAP(152,4958
#define	U8_ASCII_TOUPPER(157,5033
#define	U8_ASCII_TOLOWER(160,5118
#define	U8_ISASCII(163,5203
#define	U8_SWAP_COMB_MARKS(170,5458
	U8_STATE_START 183,5917
	U8_STATE_HANGUL_L 184,5938
	U8_STATE_HANGUL_LV 185,5962
	U8_STATE_HANGUL_LVT 186,5987
	U8_STATE_HANGUL_V 187,6013
	U8_STATE_HANGUL_T 188,6037
	U8_STATE_COMBINING_MARK 189,6061
} u8_normalization_states_t;190,6090
#define	U8_ILLEGAL_NEXT_BYTE_COMMON(203,6583
#define	I_	205,6650
#define	O_	206,6680
const int8_t u8_number_of_bytes[u8_number_of_bytes208,6716
const uint8_t u8_valid_min_2nd_byte[u8_valid_min_2nd_byte246,8385
const uint8_t u8_valid_max_2nd_byte[u8_valid_max_2nd_byte288,10304
u8_validate(338,12484
do_case_conv(463,15416
do_case_compare(569,18097
combining_class(694,21080
do_decomp(747,22331
find_composition_start(970,28261
blocked(1037,29764
do_composition(1059,30289
collect_a_seq(1381,38181
do_norm_compare(1729,46424
u8_strcmp(1845,49587
u8_textprep_str(1915,51108

src/lib/libsolcompat/strlcat.c,17
strlcat(41,1255

src/lib/libsolcompat/lint.h,0

src/lib/libsolcompat/tsd.h,0

src/lib/libsolcompat/gen_synonyms.h,0

src/lib/libsolcompat/atomic_asm_weak.h,0

src/lib/libsolcompat/mkdirp.c,35
mkdirp(52,1390
simplify(138,3147

src/lib/libzfscommon/list.c,636
#define	list_d2l(38,1105
#define	list_object(39,1182
#define	list_empty(40,1257
#define	list_insert_after_node(42,1326
#define	list_insert_before_node(50,1575
#define	list_remove_node(58,1825
list_create(64,2020
list_destroy(77,2301
list_insert_after(89,2525
list_insert_before(100,2760
list_insert_head(111,2997
list_insert_tail(118,3136
list_remove(125,3276
list_remove_head(134,3460
list_remove_tail(144,3659
list_head(154,3858
list_tail(162,3990
list_next(170,4122
list_prev(181,4324
list_move_tail(195,4594
list_link_replace(216,5117
list_link_init(229,5438
list_link_active(236,5531
list_is_empty(242,5611

src/lib/libzfscommon/zfs_prop.c,662
static zprop_desc_t zfs_prop_table[zfs_prop_table44,1241
zfs_prop_get_table(47,1308
zfs_prop_init(53,1369
zfs_prop_delegatable(317,11686
zfs_name_to_prop(327,11907
valid_char(338,12149
zfs_prop_user(349,12383
zfs_prop_string_to_index(374,12800
zfs_prop_index_to_string(380,12960
zfs_prop_valid_for_type(389,13208
zfs_prop_get_type(395,13323
zfs_prop_readonly(404,13469
zfs_prop_setonce(414,13700
zfs_prop_default_string(420,13808
zfs_prop_default_numeric(426,13909
zfs_prop_to_name(436,14136
zfs_prop_inheritable(445,14280
zfs_prop_values(458,14589
zfs_prop_is_string(469,14869
zfs_prop_column_name(480,15197
zfs_prop_align_right(490,15393

src/lib/libzfscommon/include/zfs_deleg.h,767
#define	_ZFS_DELEG_H27,948
#define	ZFS_DELEG_SET_NAME_CHR	37,1037
#define	ZFS_DELEG_FIELD_SEP_CHR	38,1099
#define	ZFS_MAX_DELEG_NAME	43,1213
#define	ZFS_DELEG_LOCAL	45,1245
#define	ZFS_DELEG_DESCENDENT	46,1274
#define	ZFS_DELEG_NA	47,1307
	ZFS_DELEG_NOTE_CREATE,50,1349
	ZFS_DELEG_NOTE_DESTROY,51,1373
	ZFS_DELEG_NOTE_SNAPSHOT,52,1398
	ZFS_DELEG_NOTE_ROLLBACK,53,1424
	ZFS_DELEG_NOTE_CLONE,54,1450
	ZFS_DELEG_NOTE_PROMOTE,55,1473
	ZFS_DELEG_NOTE_RENAME,56,1498
	ZFS_DELEG_NOTE_RECEIVE,57,1522
	ZFS_DELEG_NOTE_ALLOW,58,1547
	ZFS_DELEG_NOTE_USERPROP,59,1570
	ZFS_DELEG_NOTE_MOUNT,60,1596
	ZFS_DELEG_NOTE_SHARE,61,1619
	ZFS_DELEG_NOTE_NONE62,1642
} zfs_deleg_note_t;63,1663
typedef struct zfs_deleg_perm_tab 65,1684
} zfs_deleg_perm_tab_t;68,1761

src/lib/libzfscommon/include/zfs_comutil.h,30
#define	_ZFS_COMUTIL_H27,950

src/lib/libzfscommon/include/zfs_prop.h,330
#define	_ZFS_PROP_H27,947
	PROP_TYPE_NUMBER,43,1210
	PROP_TYPE_STRING,44,1249
	PROP_TYPE_INDEX	45,1287
} zprop_type_t;46,1343
	PROP_DEFAULT,49,1375
	PROP_READONLY,50,1390
	PROP_INHERIT,51,1406
	PROP_ONETIME58,1658
} zprop_attr_t;59,1672
typedef struct zfs_index 61,1689
} zprop_index_t;64,1758
} zprop_desc_t;82,2614

src/lib/libzfscommon/include/sys/dsl_dir.h,571
#define	_SYS_DSL_DIR_H27,950
typedef enum dd_used 41,1168
	DD_USED_HEAD,42,1191
	DD_USED_SNAP,43,1206
	DD_USED_CHILD,44,1221
	DD_USED_CHILD_RSRV,45,1237
	DD_USED_REFRSRV,46,1258
	DD_USED_NUM47,1276
} dd_used_t;48,1289
#define	DD_FLAG_USED_BREAKDOWN 50,1303
typedef struct dsl_dir_phys 52,1342
} dsl_dir_phys_t;74,2086
struct dsl_dir 76,2105
dsl_checkfunc_t dsl_dir_destroy_check;113,3352
dsl_syncfunc_t dsl_dir_destroy_sync;114,3391
#define	MOS_DIR_NAME 137,4625
#define	ORIGIN_DIR_NAME 138,4653
#define	dprintf_dd(141,4705
#define	dprintf_dd(151,5060

src/lib/libzfscommon/include/sys/zfs_acl.h,1053
#define	_SYS_FS_ZFS_ACL_H27,953
#define	ACE_SLOT_CNT	45,1184
#define	ZFS_ACL_VERSION_INITIAL 46,1207
#define	ZFS_ACL_VERSION_FUID	47,1244
#define	ZFS_ACL_VERSION	48,1278
typedef struct zfs_ace_hdr 67,1863
} zfs_ace_hdr_t;71,1954
typedef zfs_ace_hdr_t zfs_ace_abstract_t;73,1972
typedef struct zfs_ace 78,2038
} zfs_ace_t;81,2103
typedef struct zfs_object_ace 88,2258
} zfs_object_ace_t;92,2413
typedef struct zfs_oldace 94,2434
} zfs_oldace_t;99,2635
typedef struct zfs_acl_phys_v0 101,2652
} zfs_acl_phys_v0_t;107,2917
#define	ZFS_ACE_SPACE	109,2939
typedef struct zfs_acl_phys 111,3001
} zfs_acl_phys_t;117,3291
typedef struct acl_ops 121,3312
} acl_ops_t;139,4138
typedef struct zfs_acl_node 147,4392
} zfs_acl_node_t;155,4781
typedef struct zfs_acl 157,4800
} zfs_acl_t;167,5260
#define	ACL_DATA_ALLOCED	169,5274
#define	ZFS_ACL_SIZE(170,5303
#define	ZFS_ACL_DISCARD	179,5543
#define	ZFS_ACL_NOALLOW	180,5570
#define	ZFS_ACL_GROUPMASK	181,5597
#define	ZFS_ACL_PASSTHROUGH	182,5625
#define	ZFS_ACL_RESTRICTED	183,5655

src/lib/libzfscommon/include/sys/zfs_debug.h,338
#define	_SYS_ZFS_DEBUG_H27,952
#define	TRUE 36,1033
#define	FALSE 40,1070
#define	ZFS_DEBUG48,1138
#define	ZFS_DEBUG_DPRINTF	53,1187
#define	ZFS_DEBUG_DBUF_VERIFY	54,1220
#define	ZFS_DEBUG_DNODE_VERIFY	55,1257
#define	ZFS_DEBUG_SNAPNAMES	56,1295
#define	ZFS_DEBUG_MODIFY	57,1330
#define	dprintf(62,1475
#define	dprintf(66,1597

src/lib/libzfscommon/include/sys/txg.h,462
#define	_SYS_TXG_H27,946
#define	TXG_CONCURRENT_STATES	38,1059
#define	TXG_SIZE	39,1122
#define	TXG_MASK	40,1165
#define	TXG_INITIAL	41,1218
#define	TXG_IDX	42,1268
#define	TXG_WAIT	44,1304
#define	TXG_NOWAIT	45,1327
typedef struct tx_cpu tx_cpu_t;47,1353
typedef struct txg_handle 49,1386
} txg_handle_t;52,1451
typedef struct txg_node 54,1468
} txg_node_t;57,1562
typedef struct txg_list 59,1577
} txg_list_t;63,1674
#define	TXG_CLEAN(114,3381

src/lib/libzfscommon/include/sys/zio_impl.h,1817
#define	_ZIO_IMPL_H27,947
typedef struct zio_aio_ctx 43,1123
} zio_aio_ctx_t;47,1290
typedef enum zio_stage 53,1365
	ZIO_STAGE_OPEN 54,1390
	ZIO_STAGE_WAIT_FOR_CHILDREN_READY,55,1425
	ZIO_STAGE_READ_INIT,57,1474
	ZIO_STAGE_ISSUE_ASYNC,58,1510
	ZIO_STAGE_WRITE_COMPRESS,59,1548
	ZIO_STAGE_CHECKSUM_GENERATE,60,1588
	ZIO_STAGE_GET_GANG_HEADER,62,1632
	ZIO_STAGE_REWRITE_GANG_MEMBERS,63,1673
	ZIO_STAGE_FREE_GANG_MEMBERS,64,1719
	ZIO_STAGE_CLAIM_GANG_MEMBERS,65,1762
	ZIO_STAGE_DVA_ALLOCATE,67,1807
	ZIO_STAGE_DVA_FREE,68,1846
	ZIO_STAGE_DVA_CLAIM,69,1881
	ZIO_STAGE_GANG_CHECKSUM_GENERATE,71,1918
	ZIO_STAGE_READY,73,1966
	ZIO_STAGE_VDEV_IO_START,75,1999
	ZIO_STAGE_VDEV_IO_DONE,76,2038
	ZIO_STAGE_VDEV_IO_ASSESS,77,2077
	ZIO_STAGE_WAIT_FOR_CHILDREN_DONE,79,2118
	ZIO_STAGE_CHECKSUM_VERIFY,81,2166
	ZIO_STAGE_READ_GANG_MEMBERS,82,2207
	ZIO_STAGE_READ_DECOMPRESS,83,2250
	ZIO_STAGE_ASSESS,85,2292
	ZIO_STAGE_DONE	86,2325
} zio_stage_t;87,2356
#define	ZIO_INTERLOCK_STAGES	89,2372
#define	ZIO_VDEV_IO_STAGES	96,2594
#define	ZIO_READ_PHYS_PIPELINE	101,2741
#define	ZIO_READ_GANG_PIPELINE	106,2874
#define	ZIO_READ_PIPELINE	109,2936
#define	ZIO_WRITE_COMMON_STAGES	113,3029
#define	ZIO_WRITE_PHYS_PIPELINE	119,3203
#define	ZIO_WRITE_PIPELINE	122,3267
#define	ZIO_GANG_REWRITE_STAGES	127,3407
#define	ZIO_GANG_FREE_STAGES	132,3576
#define	ZIO_GANG_CLAIM_STAGES	136,3692
#define	ZIO_REWRITE_PIPELINE(140,3810
#define	ZIO_WRITE_ALLOCATE_PIPELINE	144,3931
#define	ZIO_FREE_PIPELINE(148,4039
#define	ZIO_CLAIM_PIPELINE(153,4188
#define	ZIO_IOCTL_PIPELINE	158,4340
#define	ZIO_WAIT_FOR_CHILDREN_PIPELINE	163,4427
#define	ZIO_VDEV_CHILD_PIPELINE	166,4494
#define	ZIO_ERROR_PIPELINE_MASK	172,4667
typedef struct zio_transform zio_transform_t;175,4728
struct zio_transform 176,4774

src/lib/libzfscommon/include/sys/dsl_deleg.h,617
#define	_SYS_DSL_DELEG_H27,952
#define	ZFS_DELEG_PERM_NONE	39,1097
#define	ZFS_DELEG_PERM_CREATE	40,1129
#define	ZFS_DELEG_PERM_DESTROY	41,1169
#define	ZFS_DELEG_PERM_SNAPSHOT	42,1211
#define	ZFS_DELEG_PERM_ROLLBACK	43,1255
#define	ZFS_DELEG_PERM_CLONE	44,1299
#define	ZFS_DELEG_PERM_PROMOTE	45,1337
#define	ZFS_DELEG_PERM_RENAME	46,1379
#define	ZFS_DELEG_PERM_MOUNT	47,1419
#define	ZFS_DELEG_PERM_SHARE	48,1457
#define	ZFS_DELEG_PERM_SEND	49,1495
#define	ZFS_DELEG_PERM_RECEIVE	50,1531
#define	ZFS_DELEG_PERM_ALLOW	51,1573
#define	ZFS_DELEG_PERM_USERPROP	52,1611
#define	ZFS_DELEG_PERM_VSCAN	53,1655

src/lib/libzfscommon/include/sys/unique.h,58
#define	_SYS_UNIQUE_H27,949
#define	UNIQUE_BITS	38,1103

src/lib/libzfscommon/include/sys/dmu_impl.h,31
#define	_SYS_DMU_IMPL_H27,951

src/lib/libzfscommon/include/sys/zfs_znode.h,1723
#define	_SYS_FS_ZFS_ZNODE_H27,955
#define	ZFS_READONLY	49,1355
#define	ZFS_HIDDEN	50,1396
#define	ZFS_SYSTEM	51,1435
#define	ZFS_ARCHIVE	52,1474
#define	ZFS_IMMUTABLE	53,1514
#define	ZFS_NOUNLINK	54,1556
#define	ZFS_APPENDONLY	55,1597
#define	ZFS_NODUMP	56,1640
#define	ZFS_OPAQUE	57,1679
#define	ZFS_AV_QUARANTINED 58,1718
#define	ZFS_AV_MODIFIED 59,1765
#define	ZFS_ATTR_SET(61,1810
#define	ZFS_XATTR	72,1984
#define	ZFS_INHERIT_ACE	73,2039
#define	ZFS_ACL_TRIVIAL 74,2100
#define	ZFS_ACL_OBJ_ACE 75,2157
#define	ZFS_ACL_PROTECTED	76,2218
#define	ZFS_ACL_DEFAULTED	77,2270
#define	ZFS_ACL_AUTO_INHERIT	78,2332
#define	ZFS_BONUS_SCANSTAMP	79,2397
#define	IS_EPHEMERAL(84,2489
#define	USE_FUIDS(89,2559
#define	MASTER_NODE_OBJ	92,2681
#define	ZFS_FSID	97,2754
#define	ZFS_UNLINKED_SET	98,2779
#define	ZFS_ROOT_OBJ	99,2819
#define	ZPL_VERSION_STR	100,2848
#define	ZFS_FUID_TABLES	101,2883
#define	ZFS_MAX_BLOCKSIZE	103,2916
#define	ZFS_MAXNAMELEN	113,3284
#define	IFTODT(120,3444
#define	ZFS_DIRENT_TYPE(128,3673
#define	ZFS_DIRENT_OBJ(129,3721
typedef struct znode_phys 136,3938
} znode_phys_t;165,5255
typedef struct zfs_dirlock 173,5479
} zfs_dirlock_t;180,5838
typedef struct znode 182,5856
} znode_t;209,7085
#define	ZTOV(231,7996
#define	VTOZ(232,8029
#define	ZFS_ENTER(239,8253
#define	ZFS_EXIT(248,8431
#define	ZFS_VERIFY_ZP(250,8500
#define	ZFS_OBJ_HASH(259,8660
#define	ZFS_OBJ_MUTEX(260,8725
#define	ZFS_OBJ_HOLD_ENTER(262,8814
#define	ZFS_OBJ_HOLD_EXIT(264,8909
#define	ZFS_TIME_ENCODE(270,9084
#define	ZFS_TIME_DECODE(276,9212
#define	ACCESSED	285,9364
#define	STATE_CHANGED	286,9393
#define	CONTENT_MODIFIED	287,9427
#define	ZFS_ACCESSTIME_STAMP(289,9475

src/lib/libzfscommon/include/sys/spa_boot.h,31
#define	_SYS_SPA_BOOT_H27,951

src/lib/libzfscommon/include/sys/vdev_disk.h,89
#define	_SYS_VDEV_DISK_H27,952
typedef struct vdev_disk 43,1155
} vdev_disk_t;47,1244

src/lib/libzfscommon/include/sys/list.h,109
#define	_SYS_LIST_H27,947
typedef struct list_node list_node_t;37,1038
typedef struct list list_t;38,1076

src/lib/libzfscommon/include/sys/dmu_objset.h,256
#define	_SYS_DMU_OBJSET_H27,953
typedef struct objset_phys 47,1236
} objset_phys_t;53,1435
struct objset 55,1453
typedef struct objset_impl 60,1512
} objset_impl_t;94,2487
#define	DMU_META_DNODE_OBJECT	96,2505
#define	DMU_OS_IS_L2CACHEABLE(98,2538

src/lib/libzfscommon/include/sys/fs/zfs.h,13397
#define	_SYS_FS_ZFS_H27,949
	ZFS_TYPE_FILESYSTEM	42,1244
	ZFS_TYPE_FILESYSTEM	= 0x1,x142,1244
	ZFS_TYPE_SNAPSHOT	43,1272
	ZFS_TYPE_SNAPSHOT	= 0x2,x243,1272
	ZFS_TYPE_VOLUME	44,1298
	ZFS_TYPE_VOLUME		= 0x4,x444,1298
	ZFS_TYPE_POOL	45,1323
	ZFS_TYPE_POOL		= 0x8x845,1323
} zfs_type_t;46,1345
#define	ZFS_TYPE_DATASET	48,1360
	ZFS_PROP_TYPE,58,1753
	ZFS_PROP_CREATION,59,1769
	ZFS_PROP_USED,60,1789
	ZFS_PROP_AVAILABLE,61,1805
	ZFS_PROP_REFERENCED,62,1826
	ZFS_PROP_COMPRESSRATIO,63,1848
	ZFS_PROP_MOUNTED,64,1873
	ZFS_PROP_ORIGIN,65,1892
	ZFS_PROP_QUOTA,66,1910
	ZFS_PROP_RESERVATION,67,1927
	ZFS_PROP_VOLSIZE,68,1950
	ZFS_PROP_VOLBLOCKSIZE,69,1969
	ZFS_PROP_RECORDSIZE,70,1993
	ZFS_PROP_MOUNTPOINT,71,2015
	ZFS_PROP_SHARENFS,72,2037
	ZFS_PROP_CHECKSUM,73,2057
	ZFS_PROP_COMPRESSION,74,2077
	ZFS_PROP_ATIME,75,2100
	ZFS_PROP_DEVICES,76,2117
	ZFS_PROP_EXEC,77,2136
	ZFS_PROP_SETUID,78,2152
	ZFS_PROP_READONLY,79,2170
	ZFS_PROP_ZONED,80,2190
	ZFS_PROP_SNAPDIR,81,2207
	ZFS_PROP_ACLMODE,82,2226
	ZFS_PROP_ACLINHERIT,83,2245
	ZFS_PROP_CREATETXG,84,2267
	ZFS_PROP_NAME,85,2319
	ZFS_PROP_CANMOUNT,86,2367
	ZFS_PROP_SHAREISCSI,87,2387
	ZFS_PROP_ISCSIOPTIONS,88,2409
	ZFS_PROP_XATTR,89,2464
	ZFS_PROP_NUMCLONES,90,2481
	ZFS_PROP_COPIES,91,2533
	ZFS_PROP_VERSION,92,2551
	ZFS_PROP_UTF8ONLY,93,2570
	ZFS_PROP_NORMALIZE,94,2590
	ZFS_PROP_CASE,95,2611
	ZFS_PROP_VSCAN,96,2627
	ZFS_PROP_NBMAND,97,2644
	ZFS_PROP_SHARESMB,98,2662
	ZFS_PROP_REFQUOTA,99,2682
	ZFS_PROP_REFRESERVATION,100,2702
	ZFS_PROP_GUID,101,2728
	ZFS_PROP_PRIMARYCACHE,102,2744
	ZFS_PROP_SECONDARYCACHE,103,2768
	ZFS_PROP_USEDSNAP,104,2794
	ZFS_PROP_USEDDS,105,2814
	ZFS_PROP_USEDCHILD,106,2832
	ZFS_PROP_USEDREFRESERV,107,2853
	ZFS_NUM_PROPS108,2878
} zfs_prop_t;109,2893
	ZPOOL_PROP_NAME,118,3211
	ZPOOL_PROP_SIZE,119,3229
	ZPOOL_PROP_USED,120,3247
	ZPOOL_PROP_AVAILABLE,121,3265
	ZPOOL_PROP_CAPACITY,122,3288
	ZPOOL_PROP_ALTROOT,123,3310
	ZPOOL_PROP_HEALTH,124,3331
	ZPOOL_PROP_GUID,125,3351
	ZPOOL_PROP_VERSION,126,3369
	ZPOOL_PROP_BOOTFS,127,3390
	ZPOOL_PROP_DELEGATION,128,3410
	ZPOOL_PROP_AUTOREPLACE,129,3434
	ZPOOL_PROP_CACHEFILE,130,3459
	ZPOOL_PROP_FAILUREMODE,131,3482
	ZPOOL_NUM_PROPS132,3507
} zpool_prop_t;133,3524
#define	ZPROP_CONT	135,3541
#define	ZPROP_INVAL	136,3564
#define	ZPROP_VALUE	138,3589
#define	ZPROP_SOURCE	139,3618
	ZPROP_SRC_NONE 142,3665
	ZPROP_SRC_NONE = 0x1,x1142,3665
	ZPROP_SRC_DEFAULT 143,3688
	ZPROP_SRC_DEFAULT = 0x2,x2143,3688
	ZPROP_SRC_TEMPORARY 144,3714
	ZPROP_SRC_TEMPORARY = 0x4,x4144,3714
	ZPROP_SRC_LOCAL 145,3742
	ZPROP_SRC_LOCAL = 0x8,x8145,3742
	ZPROP_SRC_INHERITED 146,3766
	ZPROP_SRC_INHERITED = 0x10x10146,3766
} zprop_source_t;147,3794
#define	ZPROP_SRC_ALL	149,3813
typedef int (*zprop_func)zprop_func151,3841
#define	ZPOOL_ROOTFS_PROPS	158,4066
	ZFS_DELEG_WHO_UNKNOWN 190,5226
	ZFS_DELEG_USER 191,5254
	ZFS_DELEG_USER_SETS 192,5277
	ZFS_DELEG_GROUP 193,5305
	ZFS_DELEG_GROUP_SETS 194,5329
	ZFS_DELEG_EVERYONE 195,5358
	ZFS_DELEG_EVERYONE_SETS 196,5385
	ZFS_DELEG_CREATE 197,5417
	ZFS_DELEG_CREATE_SETS 198,5442
	ZFS_DELEG_NAMED_SET 199,5472
	ZFS_DELEG_NAMED_SET_SETS 200,5500
} zfs_deleg_who_type_t;201,5532
	ZFS_DELEG_NONE 204,5572
	ZFS_DELEG_PERM_LOCAL 205,5593
	ZFS_DELEG_PERM_DESCENDENT 206,5620
	ZFS_DELEG_PERM_LOCALDESCENDENT 207,5652
	ZFS_DELEG_PERM_CREATE 208,5689
} zfs_deleg_inherit_t;209,5716
#define	ZFS_DELEG_PERM_UID	211,5740
#define	ZFS_DELEG_PERM_GID	212,5773
#define	ZFS_DELEG_PERM_GROUPS	213,5806
	ZFS_CANMOUNT_OFF 216,5861
	ZFS_CANMOUNT_ON 217,5884
	ZFS_CANMOUNT_NOAUTO 218,5906
} zfs_canmount_type_t;219,5931
typedef enum zfs_share_op 221,5955
	ZFS_SHARE_NFS 222,5983
	ZFS_UNSHARE_NFS 223,6003
	ZFS_SHARE_SMB 224,6025
	ZFS_UNSHARE_SMB 225,6045
} zfs_share_op_t;226,6066
typedef enum zfs_cache_type 228,6085
	ZFS_CACHE_NONE 229,6115
	ZFS_CACHE_METADATA 230,6136
	ZFS_CACHE_ALL 231,6161
} zfs_cache_type_t;232,6180
#define	SPA_VERSION_1	238,6236
#define	SPA_VERSION_2	239,6265
#define	SPA_VERSION_3	240,6294
#define	SPA_VERSION_4	241,6323
#define	SPA_VERSION_5	242,6352
#define	SPA_VERSION_6	243,6381
#define	SPA_VERSION_7	244,6410
#define	SPA_VERSION_8	245,6439
#define	SPA_VERSION_9	246,6468
#define	SPA_VERSION_10	247,6497
#define	SPA_VERSION_11	248,6528
#define	SPA_VERSION_12	249,6559
#define	SPA_VERSION_13	250,6590
#define	SPA_VERSION	256,6819
#define	SPA_VERSION_STRING	257,6856
#define	SPA_VERSION_INITIAL	270,7421
#define	SPA_VERSION_DITTO_BLOCKS	271,7464
#define	SPA_VERSION_SPARES	272,7511
#define	SPA_VERSION_RAID6	273,7553
#define	SPA_VERSION_BPLIST_ACCOUNT	274,7594
#define	SPA_VERSION_RAIDZ_DEFLATE	275,7643
#define	SPA_VERSION_DNODE_BYTES	276,7691
#define	SPA_VERSION_ZPOOL_HISTORY	277,7738
#define	SPA_VERSION_GZIP_COMPRESSION	278,7786
#define	SPA_VERSION_BOOTFS	279,7837
#define	SPA_VERSION_SLOGS	280,7879
#define	SPA_VERSION_DELEGATED_PERMS	281,7920
#define	SPA_VERSION_FUID	282,7970
#define	SPA_VERSION_REFRESERVATION	283,8010
#define	SPA_VERSION_REFQUOTA	284,8059
#define	SPA_VERSION_UNIQUE_ACCURATE	285,8103
#define	SPA_VERSION_L2CACHE	286,8153
#define	SPA_VERSION_NEXT_CLONES	287,8197
#define	SPA_VERSION_ORIGIN	288,8245
#define	SPA_VERSION_DSL_SCRUB	289,8288
#define	SPA_VERSION_SNAP_PROPS	290,8334
#define	SPA_VERSION_USED_BREAKDOWN	291,8381
#define	ZPL_VERSION_1	301,8778
#define	ZPL_VERSION_2	302,8807
#define	ZPL_VERSION_3	303,8836
#define	ZPL_VERSION	304,8865
#define	ZPL_VERSION_STRING	305,8901
#define	ZPL_VERSION_INITIAL	307,8934
#define	ZPL_VERSION_DIRENT_TYPE	308,8977
#define	ZPL_VERSION_FUID	309,9024
#define	ZPL_VERSION_NORMALIZATION	310,9064
#define	ZPL_VERSION_SYSATTR	311,9112
#define	ZPOOL_CONFIG_VERSION	317,9261
#define	ZPOOL_CONFIG_POOL_NAME	318,9301
#define	ZPOOL_CONFIG_POOL_STATE	319,9340
#define	ZPOOL_CONFIG_POOL_TXG	320,9381
#define	ZPOOL_CONFIG_POOL_GUID	321,9418
#define	ZPOOL_CONFIG_CREATE_TXG	322,9462
#define	ZPOOL_CONFIG_TOP_GUID	323,9508
#define	ZPOOL_CONFIG_VDEV_TREE	324,9550
#define	ZPOOL_CONFIG_TYPE	325,9594
#define	ZPOOL_CONFIG_CHILDREN	326,9628
#define	ZPOOL_CONFIG_ID	327,9670
#define	ZPOOL_CONFIG_GUID	328,9701
#define	ZPOOL_CONFIG_PATH	329,9735
#define	ZPOOL_CONFIG_DEVID	330,9769
#define	ZPOOL_CONFIG_METASLAB_ARRAY	331,9805
#define	ZPOOL_CONFIG_METASLAB_SHIFT	332,9858
#define	ZPOOL_CONFIG_ASHIFT	333,9911
#define	ZPOOL_CONFIG_ASIZE	334,9949
#define	ZPOOL_CONFIG_DTL	335,9985
#define	ZPOOL_CONFIG_STATS	336,10017
#define	ZPOOL_CONFIG_WHOLE_DISK	337,10053
#define	ZPOOL_CONFIG_ERRCOUNT	338,10099
#define	ZPOOL_CONFIG_NOT_PRESENT	339,10144
#define	ZPOOL_CONFIG_SPARES	340,10191
#define	ZPOOL_CONFIG_IS_SPARE	341,10229
#define	ZPOOL_CONFIG_NPARITY	342,10271
#define	ZPOOL_CONFIG_HOSTID	343,10311
#define	ZPOOL_CONFIG_HOSTNAME	344,10349
#define	ZPOOL_CONFIG_UNSPARE	345,10391
#define	ZPOOL_CONFIG_PHYS_PATH	346,10431
#define	ZPOOL_CONFIG_IS_LOG	347,10475
#define	ZPOOL_CONFIG_L2CACHE	348,10513
#define	ZPOOL_CONFIG_TIMESTAMP	349,10553
#define	ZPOOL_CONFIG_BOOTFS	350,10622
#define	ZPOOL_CONFIG_OFFLINE	356,10880
#define	ZPOOL_CONFIG_FAULTED	357,10920
#define	ZPOOL_CONFIG_DEGRADED	358,10960
#define	ZPOOL_CONFIG_REMOVED	359,11002
#define	VDEV_TYPE_ROOT	361,11043
#define	VDEV_TYPE_MIRROR	362,11075
#define	VDEV_TYPE_REPLACING	363,11110
#define	VDEV_TYPE_RAIDZ	364,11151
#define	VDEV_TYPE_DISK	365,11185
#define	VDEV_TYPE_FILE	366,11217
#define	VDEV_TYPE_MISSING	367,11249
#define	VDEV_TYPE_SPARE	368,11286
#define	VDEV_TYPE_LOG	369,11320
#define	VDEV_TYPE_L2CACHE	370,11350
#define	SPA_MINDEVSIZE	375,11470
#define	ZPOOL_CACHE	381,11609
typedef enum vdev_state 387,11776
	VDEV_STATE_UNKNOWN 388,11802
	VDEV_STATE_CLOSED,389,11854
	VDEV_STATE_OFFLINE,390,11901
	VDEV_STATE_REMOVED,391,11950
	VDEV_STATE_CANT_OPEN,392,12008
	VDEV_STATE_FAULTED,393,12064
	VDEV_STATE_DEGRADED,394,12124
	VDEV_STATE_HEALTHY	395,12188
} vdev_state_t;396,12230
#define	VDEV_STATE_ONLINE	398,12247
typedef enum vdev_aux 404,12446
	VDEV_AUX_NONE,405,12470
	VDEV_AUX_OPEN_FAILED,406,12505
	VDEV_AUX_CORRUPT_DATA,407,12567
	VDEV_AUX_NO_REPLICAS,408,12625
	VDEV_AUX_BAD_GUID_SUM,409,12686
	VDEV_AUX_TOO_SMALL,410,12745
	VDEV_AUX_BAD_LABEL,411,12796
	VDEV_AUX_VERSION_NEWER,412,12852
	VDEV_AUX_VERSION_OLDER,413,12911
	VDEV_AUX_SPARED,414,12970
	VDEV_AUX_ERR_EXCEEDED,415,13025
	VDEV_AUX_IO_FAILURE,416,13073
	VDEV_AUX_BAD_LOG	417,13126
} vdev_aux_t;418,13176
typedef enum pool_state 426,13444
	POOL_STATE_ACTIVE 427,13470
	POOL_STATE_EXPORTED,428,13516
	POOL_STATE_DESTROYED,429,13566
	POOL_STATE_SPARE,430,13618
	POOL_STATE_L2CACHE,431,13671
	POOL_STATE_UNINITIALIZED,432,13719
	POOL_STATE_IO_FAILURE,433,13774
	POOL_STATE_UNAVAIL,434,13826
	POOL_STATE_POTENTIALLY_ACTIVE	435,13876
} pool_state_t;436,13935
typedef enum pool_scrub_type 441,13975
	POOL_SCRUB_NONE,442,14006
	POOL_SCRUB_RESILVER,443,14024
	POOL_SCRUB_EVERYTHING,444,14046
	POOL_SCRUB_TYPES445,14070
} pool_scrub_type_t;446,14088
typedef enum zio_type 451,14175
	ZIO_TYPE_NULL 452,14199
	ZIO_TYPE_READ,453,14219
	ZIO_TYPE_WRITE,454,14235
	ZIO_TYPE_FREE,455,14252
	ZIO_TYPE_CLAIM,456,14268
	ZIO_TYPE_IOCTL,457,14285
	ZIO_TYPES458,14302
} zio_type_t;459,14313
typedef struct vdev_stat 465,14471
} vdev_stat_t;486,15477
#define	ZVOL_DRIVER	488,15493
#define	ZFS_DRIVER	489,15520
#define ZFS_SOCK_DIR 494,15650
#define ZFS_SOCK_NAME 495,15686
#define	ZVOL_DEV_DIR	502,15930
#define	ZVOL_RDEV_DIR	503,15962
#define	ZVOL_PSEUDO_DEV	508,16073
#define	ZVOL_FULL_DEV_DIR	509,16124
#define	ZVOL_PROP_NAME	511,16176
#define	ZFS_IOC	516,16242
typedef enum zfs_ioc 518,16271
	ZFS_IOC_POOL_CREATE 519,16294
	ZFS_IOC_POOL_CREATE = ZFS_IOC,519,16294
	ZFS_IOC_POOL_DESTROY,520,16326
	ZFS_IOC_POOL_IMPORT,521,16349
	ZFS_IOC_POOL_EXPORT,522,16371
	ZFS_IOC_POOL_CONFIGS,523,16393
	ZFS_IOC_POOL_STATS,524,16416
	ZFS_IOC_POOL_TRYIMPORT,525,16437
	ZFS_IOC_POOL_SCRUB,526,16462
	ZFS_IOC_POOL_FREEZE,527,16483
	ZFS_IOC_POOL_UPGRADE,528,16505
	ZFS_IOC_POOL_GET_HISTORY,529,16528
	ZFS_IOC_VDEV_ADD,530,16555
	ZFS_IOC_VDEV_REMOVE,531,16574
	ZFS_IOC_VDEV_SET_STATE,532,16596
	ZFS_IOC_VDEV_ATTACH,533,16621
	ZFS_IOC_VDEV_DETACH,534,16643
	ZFS_IOC_VDEV_SETPATH,535,16665
	ZFS_IOC_OBJSET_STATS,536,16688
	ZFS_IOC_OBJSET_ZPLPROPS,537,16711
	ZFS_IOC_DATASET_LIST_NEXT,538,16737
	ZFS_IOC_SNAPSHOT_LIST_NEXT,539,16765
	ZFS_IOC_SET_PROP,540,16794
	ZFS_IOC_CREATE_MINOR,541,16813
	ZFS_IOC_REMOVE_MINOR,542,16836
	ZFS_IOC_CREATE,543,16859
	ZFS_IOC_DESTROY,544,16876
	ZFS_IOC_ROLLBACK,545,16894
	ZFS_IOC_RENAME,546,16913
	ZFS_IOC_RECV,547,16930
	ZFS_IOC_SEND,548,16945
	ZFS_IOC_INJECT_FAULT,549,16960
	ZFS_IOC_CLEAR_FAULT,550,16983
	ZFS_IOC_INJECT_LIST_NEXT,551,17005
	ZFS_IOC_ERROR_LOG,552,17032
	ZFS_IOC_CLEAR,553,17052
	ZFS_IOC_PROMOTE,554,17068
	ZFS_IOC_DESTROY_SNAPS,555,17086
	ZFS_IOC_SNAPSHOT,556,17110
	ZFS_IOC_DSOBJ_TO_DSNAME,557,17129
	ZFS_IOC_OBJ_TO_PATH,558,17155
	ZFS_IOC_POOL_SET_PROPS,559,17177
	ZFS_IOC_POOL_GET_PROPS,560,17202
	ZFS_IOC_SET_FSACL,561,17227
	ZFS_IOC_GET_FSACL,562,17247
	ZFS_IOC_ISCSI_PERM_CHECK,563,17267
	ZFS_IOC_SHARE,564,17294
	ZFS_IOC_INHERIT_PROP565,17310
} zfs_ioc_t;566,17332
	SPA_LOAD_NONE,572,17427
	SPA_LOAD_OPEN,573,17470
	SPA_LOAD_IMPORT,574,17505
	SPA_LOAD_TRYIMPORT	575,17548
} spa_load_state_t;576,17596
#define	ZPOOL_ERR_LIST	581,17649
#define	ZPOOL_ERR_DATASET	582,17686
#define	ZPOOL_ERR_OBJECT	583,17722
#define	HIS_MAX_RECORD_LEN	585,17757
#define	ZPOOL_HIST_RECORD	591,17906
#define	ZPOOL_HIST_TIME	592,17949
#define	ZPOOL_HIST_CMD	593,17989
#define	ZPOOL_HIST_WHO	594,18031
#define	ZPOOL_HIST_ZONE	595,18069
#define	ZPOOL_HIST_HOST	596,18109
#define	ZPOOL_HIST_TXG	597,18153
#define	ZPOOL_HIST_INT_EVENT	598,18191
#define	ZPOOL_HIST_INT_STR	599,18245
#define	ZFS_ONLINE_CHECKREMOVE	604,18339
#define	ZFS_ONLINE_UNSPARE	605,18374
#define	ZFS_ONLINE_FORCEFAULT	606,18405
#define	ZFS_OFFLINE_TEMPORARY	607,18439
#define	ZFS_EV_POOL_NAME	629,18973
#define	ZFS_EV_POOL_GUID	630,19010
#define	ZFS_EV_VDEV_PATH	631,19047
#define	ZFS_EV_VDEV_GUID	632,19084
typedef enum history_internal_events 639,19298
	LOG_NO_EVENT 640,19337
	LOG_POOL_CREATE,641,19356
	LOG_POOL_VDEV_ADD,642,19374
	LOG_POOL_REMOVE,643,19394
	LOG_POOL_DESTROY,644,19412
	LOG_POOL_EXPORT,645,19431
	LOG_POOL_IMPORT,646,19449
	LOG_POOL_VDEV_ATTACH,647,19467
	LOG_POOL_VDEV_REPLACE,648,19490
	LOG_POOL_VDEV_DETACH,649,19514
	LOG_POOL_VDEV_ONLINE,650,19537
	LOG_POOL_VDEV_OFFLINE,651,19560
	LOG_POOL_UPGRADE,652,19584
	LOG_POOL_CLEAR,653,19603
	LOG_POOL_SCRUB,654,19620
	LOG_POOL_PROPSET,655,19637
	LOG_DS_CREATE,656,19656
	LOG_DS_CLONE,657,19672
	LOG_DS_DESTROY,658,19687
	LOG_DS_DESTROY_BEGIN,659,19704
	LOG_DS_INHERIT,660,19727
	LOG_DS_PROPSET,661,19744
	LOG_DS_QUOTA,662,19761
	LOG_DS_PERM_UPDATE,663,19776
	LOG_DS_PERM_REMOVE,664,19797
	LOG_DS_PERM_WHO_REMOVE,665,19818
	LOG_DS_PROMOTE,666,19843
	LOG_DS_RECEIVE,667,19860
	LOG_DS_RENAME,668,19877
	LOG_DS_RESERVATION,669,19893
	LOG_DS_REPLAY_INC_SYNC,670,19914
	LOG_DS_REPLAY_FULL_SYNC,671,19939
	LOG_DS_ROLLBACK,672,19965
	LOG_DS_SNAPSHOT,673,19983
	LOG_DS_UPGRADE,674,20001
	LOG_DS_REFQUOTA,675,20018
	LOG_DS_REFRESERV,676,20036
	LOG_POOL_SCRUB_DONE,677,20055
	LOG_END678,20077
} history_internal_events_t;679,20086

src/lib/libzfscommon/include/sys/dsl_dataset.h,746
#define	_SYS_DSL_DATASET_H27,954
typedef void dsl_dataset_evict_func_t(45,1244
#define	DS_FLAG_INCONSISTENT	47,1314
#define	DS_IS_INCONSISTENT(48,1353
#define	DS_FLAG_NOPROMOTE	56,1689
#define	DS_FLAG_UNIQUE_ACCURATE	63,1911
#define	DS_FLAG_CI_DATASET	69,2090
typedef struct dsl_dataset_phys 71,2129
} dsl_dataset_phys_t;97,3226
typedef struct dsl_dataset 99,3249
} dsl_dataset_t;144,4346
#define	dsl_dataset_is_snapshot(146,4364
#define	DS_UNIQUE_IS_ACCURATE(149,4442
dsl_checkfunc_t dsl_dataset_destroy_check;172,5639
dsl_syncfunc_t dsl_dataset_destroy_sync;173,5682
dsl_checkfunc_t dsl_dataset_snapshot_check;174,5723
dsl_syncfunc_t dsl_dataset_snapshot_sync;175,5767
#define	dprintf_ds(221,7751
#define	dprintf_ds(230,8049

src/lib/libzfscommon/include/sys/zfs_vfsops.h,314
#define	_SYS_FS_ZFS_VFSOPS_H27,956
typedef struct zfsvfs zfsvfs_t;43,1196
struct zfsvfs 45,1229
#define	ZFS_OBJ_MTX_SZ	79,2838
typedef struct zfid_short 100,3702
} zfid_short_t;104,3855
typedef struct zfid_long 122,4480
} zfid_long_t;126,4637
#define	SHORT_FID_LEN	128,4653
#define	LONG_FID_LEN	129,4719

src/lib/libzfscommon/include/sys/metaslab.h,143
#define	_SYS_METASLAB_H27,951
typedef struct metaslab_class metaslab_class_t;41,1130
typedef struct metaslab_group metaslab_group_t;42,1178

src/lib/libzfscommon/include/sys/zap_leaf.h,998
#define	_SYS_ZAP_LEAF_H27,951
#define	ZAP_LEAF_MAGIC 37,1031
#define	ZAP_LEAF_CHUNKSIZE 40,1093
#define	ZAP_LEAF_NUMCHUNKS(47,1285
#define	ZAP_LEAF_ARRAY_BYTES 55,1537
#define	ZAP_LEAF_ARRAY_NCHUNKS(57,1592
#define	ZAP_LEAF_LOW_WATER 67,2019
#define	ZAP_LEAF_HASH_SHIFT(75,2293
#define	ZAP_LEAF_HASH_NUMENTRIES(76,2340
#define	ZAP_LEAF_CHUNK(83,2568
#define	ZAP_LEAF_ENTRY(86,2685
typedef enum zap_chunk_type 88,2751
	ZAP_CHUNK_FREE 89,2781
	ZAP_CHUNK_ENTRY 90,2804
	ZAP_CHUNK_ARRAY 91,2828
	ZAP_CHUNK_TYPE_MAX 92,2852
} zap_chunk_type_t;93,2878
#define	ZLF_ENTRIES_CDSORTED 95,2899
typedef struct zap_leaf_phys 101,3030
	struct zap_leaf_header 102,3061
} zap_leaf_phys_t;127,3905
typedef union zap_leaf_chunk 129,3925
	struct zap_leaf_entry 130,3956
	struct zap_leaf_array 141,4467
	struct zap_leaf_free 146,4644
} zap_leaf_chunk_t;151,4825
typedef struct zap_leaf 153,4846
} zap_leaf_t;159,5035
typedef struct zap_entry_handle 162,5051
} zap_entry_handle_t;173,5345

src/lib/libzfscommon/include/sys/dnode.h,1339
#define	_SYS_DNODE_H27,948
#define	DNODE_MUST_BE_ALLOCATED	44,1208
#define	DNODE_MUST_BE_FREE	45,1242
#define	DNODE_FIND_HOLE	50,1309
#define	DNODE_FIND_BACKWARDS	51,1336
#define	DNODE_FIND_HAVELOCK	52,1367
#define	DNODE_SHIFT	57,1425
#define	DN_MIN_INDBLKSHIFT	58,1464
#define	DN_MAX_INDBLKSHIFT	59,1503
#define	DNODE_BLOCK_SHIFT	60,1543
#define	DNODE_CORE_SIZE	61,1582
#define	DN_MAX_OBJECT_SHIFT	62,1648
#define	DN_MAX_OFFSET_SHIFT	63,1716
#define	DNODE_SIZE	68,1805
#define	DN_MAX_NBLKPTR	69,1843
#define	DN_MAX_BONUSLEN	70,1918
#define	DN_MAX_OBJECT	71,1998
#define	DN_ZERO_BONUSLEN	72,2050
#define	DNODES_PER_BLOCK_SHIFT	74,2098
#define	DNODES_PER_BLOCK	75,2163
#define	DNODES_PER_LEVEL_SHIFT	76,2221
#define	DN_MAX_LEVELS	79,2338
#define	DN_BONUS(82,2455
#define	DN_USED_BYTES(85,2556
#define	EPB(88,2686
enum dnode_dirtycontext 94,2804
	DN_UNDIRTIED,95,2830
	DN_DIRTY_OPEN,96,2845
	DN_DIRTY_SYNC97,2861
#define	DNODE_FLAG_USED_BYTES	101,2954
typedef struct dnode_phys 103,2992
} dnode_phys_t;124,3796
typedef struct dnode 126,3813
} dnode_t;195,5935
typedef struct free_range 197,5947
} free_range_t;201,6036
#define	dprintf_dnode(246,8011
#define	DNODE_VERIFY(260,8459
#define	FREE_VERIFY(261,8502
#define	dprintf_dnode(265,8582
#define	DNODE_VERIFY(266,8618
#define	FREE_VERIFY(267,8643

src/lib/libzfscommon/include/sys/bplist.h,228
#define	_SYS_BPLIST_H27,949
typedef struct bplist_phys 38,1105
} bplist_phys_t;48,1398
#define	BPLIST_SIZE_V0	50,1416
typedef struct bplist_q 52,1464
} bplist_q_t;55,1527
typedef struct bplist 57,1542
} bplist_t;68,1802

src/lib/libzfscommon/include/sys/spa.h,3026
#define	_SYS_SPA_H27,946
typedef struct spa spa_t;45,1212
typedef struct vdev vdev_t;46,1238
typedef struct metaslab metaslab_t;47,1266
typedef struct zilog zilog_t;48,1302
typedef struct traverse_handle traverse_handle_t;49,1332
typedef struct spa_aux_vdev spa_aux_vdev_t;50,1382
#define	BF32_DECODE(56,1508
#define	BF64_DECODE(57,1576
#define	BF32_ENCODE(58,1646
#define	BF64_ENCODE(59,1716
#define	BF32_GET(61,1789
#define	BF64_GET(62,1845
#define	BF32_SET(64,1902
#define	BF64_SET(66,1991
#define	BF32_GET_SB(69,2081
#define	BF64_GET_SB(71,2176
#define	BF32_SET_SB(74,2272
#define	BF64_SET_SB(76,2377
#define	SPA_MINBLOCKSHIFT	84,2693
#define	SPA_MAXBLOCKSHIFT	85,2721
#define	SPA_MINBLOCKSIZE	86,2750
#define	SPA_MAXBLOCKSIZE	87,2803
#define	SPA_BLOCKSIZES	89,2857
#define	SPA_LSIZEBITS	98,3254
#define	SPA_PSIZEBITS	99,3315
#define	SPA_ASIZEBITS	100,3376
typedef struct dva 106,3590
} dva_t;108,3634
typedef struct zio_cksum 113,3731
} zio_cksum_t;115,3780
typedef struct blkptr 174,6221
} blkptr_t;181,6551
#define	SPA_BLKPTRSHIFT	183,6564
#define	SPA_DVAS_PER_BP	184,6619
#define	DVA_GET_ASIZE(189,6731
#define	DVA_SET_ASIZE(191,6822
#define	DVA_GET_GRID(194,6920
#define	DVA_SET_GRID(195,6982
#define	DVA_GET_VDEV(197,7051
#define	DVA_SET_VDEV(198,7114
#define	DVA_GET_OFFSET(200,7184
#define	DVA_SET_OFFSET(202,7276
#define	DVA_GET_GANG(205,7375
#define	DVA_SET_GANG(206,7437
#define	BP_GET_LSIZE(208,7506
#define	BP_SET_LSIZE(211,7617
#define	BP_GET_PSIZE(214,7709
#define	BP_SET_PSIZE(216,7795
#define	BP_GET_COMPRESS(219,7888
#define	BP_SET_COMPRESS(220,7948
#define	BP_GET_CHECKSUM(222,8015
#define	BP_SET_CHECKSUM(223,8075
#define	BP_GET_TYPE(225,8142
#define	BP_SET_TYPE(226,8199
#define	BP_GET_LEVEL(228,8262
#define	BP_SET_LEVEL(229,8319
#define	BP_GET_BYTEORDER(231,8383
#define	BP_SET_BYTEORDER(232,8450
#define	BP_GET_ASIZE(234,8518
#define	BP_GET_UCSIZE(238,8656
#define	BP_GET_NDVAS(242,8792
#define	BP_COUNT_GANG(247,8938
#define	DVA_EQUAL(252,9076
#define	ZIO_CHECKSUM_EQUAL(256,9204
#define	DVA_IS_VALID(263,9422
#define	ZIO_SET_CHECKSUM(265,9475
#define	BP_IDENTITY(273,9651
#define	BP_IS_GANG(274,9696
#define	BP_IS_HOLE(275,9750
#define	BP_IS_OLDER(276,9797
#define	BP_ZERO_DVAS(278,9872
#define	BP_ZERO(289,10161
#define	ZFS_HOST_BYTEORDER	305,10551
#define	ZFS_HOST_BYTEORDER	307,10591
#define	BP_SHOULD_BYTESWAP(310,10634
#define	BP_SPRINTF_LEN	312,10711
#define	BP_GET_BUFC_TYPE(316,10761
#define	SPA_ASYNC_REMOVE	346,12098
#define	SPA_ASYNC_RESILVER_DONE	347,12128
#define	SPA_ASYNC_RESILVER	348,12165
#define	SPA_ASYNC_CONFIG_UPDATE	349,12197
#define	SPA_CONFIG_UPDATE_POOL	387,13593
#define	SPA_CONFIG_UPDATE_VDEVS	388,13626
typedef enum history_log_type 465,16680
	LOG_CMD_POOL_CREATE,466,16712
	LOG_CMD_NORMAL,467,16734
	LOG_INTERNAL468,16751
} history_log_type_t;469,16765
typedef struct history_arg 471,16788
} history_arg_t;476,16943
#define	dprintf_bp(521,18620
#define	dprintf_bp(530,18947

src/lib/libzfscommon/include/sys/vdev_file.h,89
#define	_SYS_VDEV_FILE_H28,974
typedef struct vdev_file 38,1065
} vdev_file_t;40,1113

src/lib/libzfscommon/include/sys/zio_compress.h,195
#define	_SYS_ZIO_COMPRESS_H28,956
typedef size_t zio_compress_func_t(41,1119
typedef int zio_decompress_func_t(43,1214
typedef struct zio_compress_info 49,1364
} zio_compress_info_t;54,1607

src/lib/libzfscommon/include/sys/dmu.h,3359
#define	_SYS_DMU_H27,946
typedef struct objset objset_t;66,1543
typedef struct dmu_tx dmu_tx_t;67,1575
typedef struct dsl_dir dsl_dir_t;68,1607
typedef enum dmu_object_type 70,1642
	DMU_OT_NONE,71,1673
	DMU_OT_OBJECT_DIRECTORY,73,1703
	DMU_OT_OBJECT_ARRAY,74,1739
	DMU_OT_PACKED_NVLIST,75,1775
	DMU_OT_PACKED_NVLIST_SIZE,76,1839
	DMU_OT_BPLIST,77,1880
	DMU_OT_BPLIST_HDR,78,1911
	DMU_OT_SPACE_MAP_HEADER,80,1957
	DMU_OT_SPACE_MAP,81,1996
	DMU_OT_INTENT_LOG,83,2041
	DMU_OT_DNODE,85,2087
	DMU_OT_OBJSET,86,2116
	DMU_OT_DSL_DIR,88,2159
	DMU_OT_DSL_DIR_CHILD_MAP,89,2191
	DMU_OT_DSL_DS_SNAP_MAP,90,2228
	DMU_OT_DSL_PROPS,91,2264
	DMU_OT_DSL_DATASET,92,2294
	DMU_OT_ZNODE,94,2341
	DMU_OT_OLDACL,95,2370
	DMU_OT_PLAIN_FILE_CONTENTS,96,2402
	DMU_OT_DIRECTORY_CONTENTS,97,2443
	DMU_OT_MASTER_NODE,98,2481
	DMU_OT_UNLINKED_SET,99,2513
	DMU_OT_ZVOL,101,2559
	DMU_OT_ZVOL_PROP,102,2587
	DMU_OT_PLAIN_OTHER,104,2649
	DMU_OT_UINT64_OTHER,105,2683
	DMU_OT_ZAP_OTHER,106,2719
	DMU_OT_ERROR_LOG,108,2774
	DMU_OT_SPA_HISTORY,109,2804
	DMU_OT_SPA_HISTORY_OFFSETS,110,2838
	DMU_OT_POOL_PROPS,111,2888
	DMU_OT_DSL_PERMS,112,2919
	DMU_OT_ACL,113,2949
	DMU_OT_SYSACL,114,2974
	DMU_OT_FUID,115,3005
	DMU_OT_FUID_SIZE,116,3060
	DMU_OT_NEXT_CLONES,117,3109
	DMU_OT_SCRUB_QUEUE,118,3141
	DMU_OT_NUMTYPES119,3173
} dmu_object_type_t;120,3190
typedef enum dmu_objset_type 122,3212
	DMU_OST_NONE,123,3243
	DMU_OST_META,124,3258
	DMU_OST_ZFS,125,3273
	DMU_OST_ZVOL,126,3287
	DMU_OST_OTHER,127,3302
	DMU_OST_ANY,128,3344
	DMU_OST_NUMTYPES129,3378
} dmu_objset_type_t;130,3396
#define	DS_MODE_NOHOLD	141,3815
#define	DS_MODE_USER	142,3865
#define	DS_MODE_OWNER	143,3927
#define	DS_MODE_TYPE_MASK	144,3990
#define	DS_MODE_TYPE(145,4020
#define	DS_MODE_READONLY	146,4071
#define	DS_MODE_IS_READONLY(147,4100
#define	DS_MODE_INCONSISTENT	148,4156
#define	DS_MODE_IS_INCONSISTENT(149,4190
#define	DS_FIND_SNAPSHOTS	151,4255
#define	DS_FIND_CHILDREN	152,4288
#define	DMU_MAX_ACCESS 158,4429
#define	DMU_MAX_DELETEBLKCNT 159,4472
typedef struct dmu_buf 183,5501
} dmu_buf_t;188,5733
typedef void dmu_buf_evict_func_t(190,5747
#define	DMU_POOL_DIRECTORY_OBJECT	195,5890
#define	DMU_POOL_CONFIG	196,5926
#define	DMU_POOL_ROOT_DATASET	197,5961
#define	DMU_POOL_SYNC_BPLIST	198,6007
#define	DMU_POOL_ERRLOG_SCRUB	199,6051
#define	DMU_POOL_ERRLOG_LAST	200,6097
#define	DMU_POOL_SPARES	201,6141
#define	DMU_POOL_DEFLATE	202,6176
#define	DMU_POOL_HISTORY	203,6212
#define	DMU_POOL_PROPS	204,6248
#define	DMU_POOL_L2CACHE	205,6286
#define	DMU_POOL_SCRUB_BOOKMARK	208,6345
#define	DMU_POOL_SCRUB_QUEUE	210,6432
#define	DMU_POOL_SCRUB_MIN_TXG	212,6490
#define	DMU_POOL_SCRUB_MAX_TXG	214,6552
#define	DMU_POOL_SCRUB_FUNC	216,6626
#define	DMU_POOL_SCRUB_ERRORS	218,6684
#define	DMU_NEW_OBJECT	420,14920
#define	DMU_OBJECT_END	421,14951
typedef struct dmu_object_info 468,16647
} dmu_object_info_t;482,17128
typedef void arc_byteswap_func_t(484,17150
typedef struct dmu_object_type_info 486,17209
} dmu_object_type_info_t;490,17325
typedef struct dmu_objset_stats 507,17897
} dmu_objset_stats_t;515,18148
typedef void dmu_sync_cb_t(583,20824
typedef void (*dmu_traverse_cb_t)dmu_traverse_cb_t600,21313
typedef struct dmu_recv_cookie 608,21655
} dmu_recv_cookie_t;622,22049
#define	ZFS_CRC64_POLY	631,22409

src/lib/libzfscommon/include/sys/vdev.h,304
#define	_SYS_VDEV_H27,947
#define	VDEV_FAULT_NONE	46,1194
#define	VDEV_FAULT_RANDOM	47,1221
#define	VDEV_FAULT_COUNT	48,1249
	VDEV_LABEL_CREATE,129,4384
	VDEV_LABEL_REPLACE,130,4434
	VDEV_LABEL_SPARE,131,4488
	VDEV_LABEL_REMOVE,132,4533
	VDEV_LABEL_L2CACHE	133,4585
} vdev_labeltype_t;134,4637

src/lib/libzfscommon/include/sys/list_impl.h,79
#define	_SYS_LIST_IMPL_H28,974
struct list_node 38,1066
struct list 43,1149

src/lib/libzfscommon/include/sys/dsl_pool.h,193
#define	_SYS_DSL_POOL_H27,951
enum scrub_func 45,1219
	SCRUB_FUNC_NONE,46,1237
	SCRUB_FUNC_CLEAN,47,1255
	SCRUB_FUNC_NUMFUNCS48,1274
typedef struct dsl_pool 52,1300
} dsl_pool_t;97,2549

src/lib/libzfscommon/include/sys/zil_impl.h,228
#define	_SYS_ZIL_IMPL_H27,951
typedef struct lwb 41,1096
} lwb_t;51,1570
typedef struct zil_vdev_node 57,1741
} zil_vdev_node_t;60,1860
struct zilog 65,1956
typedef struct zil_dva_node 100,3774
} zil_dva_node_t;103,3841

src/lib/libzfscommon/include/sys/dsl_synctask.h,253
#define	_SYS_DSL_SYNCTASK_H27,955
typedef int (dsl_checkfunc_t)40,1095
typedef void (dsl_syncfunc_t)41,1154
typedef struct dsl_sync_task 43,1224
} dsl_sync_task_t;50,1390
typedef struct dsl_sync_task_group 52,1410
} dsl_sync_task_group_t;61,1615

src/lib/libzfscommon/include/sys/spa_impl.h,564
#define	_SYS_SPA_IMPL_H27,951
typedef struct spa_error_entry 48,1288
} spa_error_entry_t;52,1384
typedef struct spa_history_phys 54,1406
} spa_history_phys_t;60,1686
struct spa_aux_vdev 62,1709
typedef struct spa_config_lock 72,2072
} spa_config_lock_t;78,2220
typedef struct spa_config_dirent 80,2242
} spa_config_dirent_t;83,2318
typedef enum spa_log_state 85,2342
	SPA_LOG_UNKNOWN 86,2371
	SPA_LOG_MISSING,87,2417
	SPA_LOG_CLEAR,88,2456
	SPA_LOG_GOOD,89,2496
} spa_log_state_t;90,2534
struct spa 92,2554
#define	BOOTFS_COMPRESS_VALID(185,7184

src/lib/libzfscommon/include/sys/dmu_traverse.h,697
#define	_SYS_DMU_TRAVERSE_H27,955
#define	ADVANCE_POST	42,1163
#define	ADVANCE_PRE	43,1214
#define	ADVANCE_PRUNE	44,1266
#define	ADVANCE_DATA	45,1334
#define	ADVANCE_HOLES	46,1389
#define	ADVANCE_ZIL	47,1435
#define	ADVANCE_NOLOCK	48,1491
#define	ZB_NO_LEVEL	50,1552
#define	ZB_MAXLEVEL	51,1575
#define	ZB_MAXBLKID	52,1638
#define	ZB_MAXOBJSET	53,1671
#define	ZB_MAXOBJECT	54,1705
#define	ZB_MOS_CACHE	56,1740
#define	ZB_MDN_CACHE	57,1763
#define	ZB_DN_CACHE	58,1786
#define	ZB_DEPTH	59,1808
typedef struct zseg 61,1828
} zseg_t;67,1963
typedef struct traverse_blk_cache 69,1974
} traverse_blk_cache_t;77,2149
typedef int (blkptr_cb_t)79,2174
struct traverse_handle 81,2251

src/lib/libzfscommon/include/sys/zvol.h,83
#define	_SYS_ZVOL_H28,948
#define	ZVOL_OBJ	38,1041
#define	ZVOL_ZAP_OBJ	39,1064

src/lib/libzfscommon/include/sys/compress.h,31
#define	_SYS_COMPRESS_H28,946

src/lib/libzfscommon/include/sys/zil.h,1771
#define	_SYS_ZIL_H27,946
typedef struct zil_header 56,1762
} zil_header_t;62,2038
typedef struct zil_trailer 72,2386
} zil_trailer_t;77,2581
#define	ZIL_MIN_BLKSZ	79,2599
#define	ZIL_MAX_BLKSZ	80,2629
#define	ZIL_BLK_DATA_SZ(81,2668
#define	ZIL_ZC_GUID_0	86,2784
#define	ZIL_ZC_GUID_1	87,2808
#define	ZIL_ZC_OBJSET	88,2832
#define	ZIL_ZC_SEQ	89,2856
typedef enum zil_create 91,2878
	Z_FILE,92,2904
	Z_DIR,93,2913
	Z_XATTRDIR,94,2921
} zil_create_t;95,2934
#define	ZIL_XVAT_SIZE(105,3189
#define	ZIL_ACE_LENGTH(114,3410
#define	TX_CREATE	119,3530
#define	TX_MKDIR	120,3569
#define	TX_MKXATTR	121,3610
#define	TX_SYMLINK	122,3659
#define	TX_REMOVE	123,3718
#define	TX_RMDIR	124,3757
#define	TX_LINK	125,3800
#define	TX_RENAME	126,3853
#define	TX_WRITE	127,3894
#define	TX_TRUNCATE	128,3931
#define	TX_SETATTR	129,3977
#define	TX_ACL_V0	130,4026
#define	TX_ACL	131,4076
#define	TX_CREATE_ACL	132,4110
#define	TX_CREATE_ATTR	133,4158
#define	TX_CREATE_ACL_ATTR 134,4206
#define	TX_MKDIR_ACL	135,4267
#define	TX_MKDIR_ATTR	136,4313
#define	TX_MKDIR_ACL_ATTR	137,4361
#define	TX_MAX_TYPE	138,4419
#define	TX_CI	145,4666
} lr_t;164,5568
} lr_attr_t;177,5944
} lr_create_t;196,6679
} lr_acl_create_t;229,8096
} lr_remove_t;235,8276
} lr_link_t;242,8494
} lr_rename_t;249,8746
} lr_write_t;259,9139
} lr_truncate_t;266,9376
} lr_setattr_t;279,9855
} lr_acl_v0_t;286,10084
} lr_acl_t;297,10512
	WR_INDIRECT,307,10667
	WR_COPIED,309,10786
	WR_NEED_COPY,310,10847
} itx_wr_state_t;311,10914
typedef struct itx 313,10933
} itx_t;321,11322
} zgd_t;332,11600
typedef void zil_parse_blk_func_t(335,11611
typedef void zil_parse_lr_func_t(337,11705
typedef int zil_replay_func_t(339,11794
typedef int zil_get_data_t(340,11827

src/lib/libzfscommon/include/sys/fm/fs/zfs.h,1920
#define	_SYS_FM_FS_ZFS_H27,952
#define	ZFS_ERROR_CLASS	35,1020
#define	FM_EREPORT_ZFS_CHECKSUM	37,1057
#define	FM_EREPORT_ZFS_IO	38,1102
#define	FM_EREPORT_ZFS_DATA	39,1135
#define	FM_EREPORT_ZFS_POOL	40,1172
#define	FM_EREPORT_ZFS_DEVICE_UNKNOWN	41,1210
#define	FM_EREPORT_ZFS_DEVICE_OPEN_FAILED	42,1264
#define	FM_EREPORT_ZFS_DEVICE_CORRUPT_DATA	43,1325
#define	FM_EREPORT_ZFS_DEVICE_NO_REPLICAS	44,1388
#define	FM_EREPORT_ZFS_DEVICE_BAD_GUID_SUM	45,1449
#define	FM_EREPORT_ZFS_DEVICE_TOO_SMALL	46,1512
#define	FM_EREPORT_ZFS_DEVICE_BAD_LABEL	47,1570
#define	FM_EREPORT_ZFS_IO_FAILURE	48,1628
#define	FM_EREPORT_ZFS_PROBE_FAILURE	49,1676
#define	FM_EREPORT_ZFS_LOG_REPLAY	50,1730
#define	FM_EREPORT_PAYLOAD_ZFS_POOL	52,1779
#define	FM_EREPORT_PAYLOAD_ZFS_POOL_FAILMODE	53,1823
#define	FM_EREPORT_PAYLOAD_ZFS_POOL_GUID	54,1884
#define	FM_EREPORT_PAYLOAD_ZFS_POOL_CONTEXT	55,1937
#define	FM_EREPORT_PAYLOAD_ZFS_VDEV_GUID	56,1996
#define	FM_EREPORT_PAYLOAD_ZFS_VDEV_TYPE	57,2049
#define	FM_EREPORT_PAYLOAD_ZFS_VDEV_PATH	58,2102
#define	FM_EREPORT_PAYLOAD_ZFS_VDEV_DEVID	59,2155
#define	FM_EREPORT_PAYLOAD_ZFS_PARENT_GUID	60,2210
#define	FM_EREPORT_PAYLOAD_ZFS_PARENT_TYPE	61,2267
#define	FM_EREPORT_PAYLOAD_ZFS_PARENT_PATH	62,2324
#define	FM_EREPORT_PAYLOAD_ZFS_PARENT_DEVID	63,2381
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_OBJSET	64,2440
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_OBJECT	65,2495
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_LEVEL	66,2550
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_BLKID	67,2603
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_ERR	68,2656
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_OFFSET	69,2706
#define	FM_EREPORT_PAYLOAD_ZFS_ZIO_SIZE	70,2761
#define	FM_EREPORT_PAYLOAD_ZFS_PREV_STATE	71,2813
#define	FM_EREPORT_FAILMODE_WAIT	73,2869
#define	FM_EREPORT_FAILMODE_CONTINUE	74,2910
#define	FM_EREPORT_FAILMODE_PANIC	75,2959
#define	FM_RESOURCE_REMOVED	77,3003
#define	FM_RESOURCE_AUTOREPLACE	78,3043

src/lib/libzfscommon/include/sys/zfs_dir.h,290
#define	_SYS_FS_ZFS_DIR_H27,953
#define	ZNEW	40,1127
#define	ZEXISTS	41,1178
#define	ZSHARED	42,1228
#define	ZXATTR	43,1289
#define	ZRENAMING	44,1341
#define	ZCILOOK	45,1396
#define	ZCIEXACT	46,1461
#define	IS_ROOT_NODE	49,1544
#define	IS_XATTR	50,1596
#define	IS_REPLAY	51,1659

src/lib/libzfscommon/include/sys/dsl_prop.h,151
#define	_SYS_DSL_PROP_H27,951
typedef void (dsl_prop_changed_cb_t)43,1190
typedef struct dsl_prop_cb_record 45,1257
} dsl_prop_cb_record_t;51,1448

src/lib/libzfscommon/include/sys/vdev_impl.h,1579
#define	_SYS_VDEV_IMPL_H27,952
typedef struct vdev_queue vdev_queue_t;54,1442
typedef struct vdev_cache vdev_cache_t;55,1482
typedef struct vdev_cache_entry vdev_cache_entry_t;56,1522
typedef int	vdev_open_func_t(61,1611
typedef void	vdev_close_func_t(62,1687
typedef int	vdev_probe_func_t(63,1731
typedef uint64_t vdev_asize_func_t(64,1774
typedef int	vdev_io_start_func_t(65,1838
typedef int	vdev_io_done_func_t(66,1884
typedef void	vdev_state_change_func_t(67,1929
typedef struct vdev_ops 69,1991
} vdev_ops_t;79,2344
struct vdev_cache_entry 84,2395
struct vdev_cache 95,2612
struct vdev_queue 101,2713
struct vdev 112,2904
#define	VDEV_SKIP_SIZE	194,6584
#define	VDEV_BOOT_HEADER_SIZE	195,6618
#define	VDEV_PHYS_SIZE	196,6658
#define	VDEV_UBERBLOCK_RING	197,6694
#define	VDEV_UBERBLOCK_SHIFT(199,6735
#define	VDEV_UBERBLOCK_COUNT(201,6821
#define	VDEV_UBERBLOCK_OFFSET(203,6907
#define	VDEV_UBERBLOCK_SIZE(205,7017
#define	VDEV_BOOT_MAGIC	208,7107
#define	VDEV_BOOT_VERSION	209,7149
typedef struct vdev_boot_header 211,7200
} vdev_boot_header_t;217,7475
typedef struct vdev_phys 219,7498
} vdev_phys_t;222,7613
typedef struct vdev_label 224,7629
} vdev_label_t;229,7844
#define	VDD_METASLAB	234,7913
#define	VDD_DTL	235,7939
#define	VDEV_BOOT_OFFSET	241,8103
#define	VDEV_BOOT_SIZE	242,8156
#define	VDEV_LABEL_START_SIZE	247,8281
#define	VDEV_LABEL_END_SIZE	248,8356
#define	VDEV_LABELS	249,8412
#define	VDEV_ALLOC_LOAD	251,8436
#define	VDEV_ALLOC_ADD	252,8463
#define	VDEV_ALLOC_SPARE	253,8489
#define	VDEV_ALLOC_L2CACHE	254,8516

src/lib/libzfscommon/include/sys/dmu_tx.h,357
#define	_SYS_DMU_TX_H27,949
struct dmu_tx 47,1217
enum dmu_tx_hold_type 74,1847
	THT_NEWOBJECT,75,1871
	THT_WRITE,76,1887
	THT_BONUS,77,1899
	THT_FREE,78,1911
	THT_ZAP,79,1922
	THT_SPACE,80,1932
	THT_NUMTYPES81,1944
typedef struct dmu_tx_hold 84,1962
} dmu_tx_hold_t;99,2325
#define	DMU_TX_DIRTY_BUF(130,3285
#define	DMU_TX_DIRTY_BUF(132,3349

src/lib/libzfscommon/include/sys/zap.h,394
#define	_SYS_ZAP_H27,946
#define	ZAP_MAXNAMELEN 90,3466
#define	ZAP_MAXVALUELEN 91,3493
typedef enum matchtype102,3942
	MT_EXACT,104,3967
	MT_BEST,105,3978
	MT_FIRST106,3988
} matchtype_t;107,3998
typedef struct zap_cursor 263,9662
} zap_cursor_t;271,9850
} zap_attribute_t;283,10204
#define	ZAP_HISTOGRAM_SIZE 330,11840
typedef struct zap_stats 332,11871
} zap_stats_t;411,14556

src/lib/libzfscommon/include/sys/zio_checksum.h,145
#define	_SYS_ZIO_CHECKSUM_H27,955
typedef void zio_checksum_t(40,1092
typedef struct zio_checksum_info 45,1225
} zio_checksum_info_t;50,1469

src/lib/libzfscommon/include/sys/refcount.h,590
#define	_SYS_REFCOUNT_H27,951
#define	FTAG 44,1298
typedef struct reference 47,1371
} reference_t;52,1491
typedef struct refcount 54,1507
} refcount_t;60,1634
typedef struct refcount 79,2309
} refcount_t;81,2355
#define	refcount_create(83,2370
#define	refcount_destroy(84,2419
#define	refcount_destroy_many(85,2469
#define	refcount_is_zero(86,2532
#define	refcount_count(87,2583
#define	refcount_add(88,2627
#define	refcount_remove(89,2697
#define	refcount_add_many(90,2771
#define	refcount_remove_many(92,2862
#define	refcount_init(95,2958
#define	refcount_fini(96,2982

src/lib/libzfscommon/include/sys/zfs_rlock.h,158
#define	_SYS_FS_ZFS_RLOCK_H27,955
	RL_READER,40,1085
	RL_WRITER,41,1097
	RL_APPEND42,1109
} rl_type_t;43,1120
typedef struct rl 45,1134
} rl_t;57,1691

src/lib/libzfscommon/include/sys/dbuf.h,1327
#define	_SYS_DBUF_H27,947
#define	DB_BONUS_BLKID 43,1171
#define	IN_DMU_SYNC 44,1202
#define	DB_RF_MUST_SUCCEED	50,1263
#define	DB_RF_CANFAIL	51,1299
#define	DB_RF_HAVESTRUCT	52,1331
#define	DB_RF_NOPREFETCH	53,1365
#define	DB_RF_NEVERWAIT	54,1399
#define	DB_RF_CACHED	55,1433
typedef enum dbuf_states 68,1664
	DB_UNCACHED,69,1691
	DB_FILL,70,1705
	DB_READ,71,1715
	DB_CACHED,72,1725
	DB_EVICTING73,1737
} dbuf_states_t;74,1750
#define	LIST_LINK_INACTIVE(86,1912
typedef enum override_states 91,2028
	DR_NOT_OVERRIDDEN,92,2059
	DR_IN_DMU_SYNC,93,2079
	DR_OVERRIDDEN94,2096
} override_states_t;95,2111
typedef struct dbuf_dirty_record 97,2133
	union dirty_types 116,2568
		struct dirty_indirect 117,2589
		struct dirty_leaf 125,2736
} dbuf_dirty_record_t;137,3029
typedef struct dmu_buf_impl 139,3053
} dmu_buf_impl_t;227,5023
#define	DBUF_MUTEXES 230,5109
#define	DBUF_HASH_MUTEX(231,5134
typedef struct dbuf_hash_table 232,5213
} dbuf_hash_table_t;236,5341
#define	DBUF_IS_METADATA(282,6939
#define	DBUF_GET_BUFC_TYPE(285,7040
#define	DBUF_IS_CACHEABLE(288,7134
#define	DBUF_IS_L2CACHEABLE(293,7324
#define	dprintf_dbuf(305,7718
#define	dprintf_dbuf_bp(321,8257
#define	DBUF_VERIFY(330,8599
#define	dprintf_dbuf(334,8647
#define	dprintf_dbuf_bp(335,8682
#define	DBUF_VERIFY(336,8724

src/lib/libzfscommon/include/sys/uberblock_impl.h,129
#define	_SYS_UBERBLOCK_IMPL_H27,957
#define	UBERBLOCK_MAGIC	47,1539
#define	UBERBLOCK_SHIFT	48,1594
struct uberblock 50,1640

src/lib/libzfscommon/include/sys/zio.h,3025
#define	_ZIO_H28,943
#define	ZBT_MAGIC	44,1166
typedef struct zio_block_tail 46,1231
} zio_block_tail_t;49,1365
#define	SPA_GANGBLOCKSIZE	55,1480
#define	SPA_GBH_NBLKPTRS	56,1523
#define	SPA_GBH_FILLER	58,1621
#define	ZIO_GET_IOSIZE(63,1765
typedef struct zio_gbh 67,1876
} zio_gbh_phys_t;71,2006
enum zio_checksum 73,2025
	ZIO_CHECKSUM_INHERIT 74,2045
	ZIO_CHECKSUM_ON,75,2072
	ZIO_CHECKSUM_OFF,76,2090
	ZIO_CHECKSUM_LABEL,77,2109
	ZIO_CHECKSUM_GANG_HEADER,78,2130
	ZIO_CHECKSUM_ZILOG,79,2157
	ZIO_CHECKSUM_FLETCHER_2,80,2178
	ZIO_CHECKSUM_FLETCHER_4,81,2204
	ZIO_CHECKSUM_SHA256,82,2230
	ZIO_CHECKSUM_FUNCTIONS83,2252
#define	ZIO_CHECKSUM_ON_VALUE	86,2280
#define	ZIO_CHECKSUM_DEFAULT	87,2334
enum zio_compress 89,2380
	ZIO_COMPRESS_INHERIT 90,2400
	ZIO_COMPRESS_ON,91,2427
	ZIO_COMPRESS_OFF,92,2445
	ZIO_COMPRESS_LZJB,93,2464
	ZIO_COMPRESS_EMPTY,94,2484
	ZIO_COMPRESS_GZIP_1,95,2505
	ZIO_COMPRESS_GZIP_2,96,2527
	ZIO_COMPRESS_GZIP_3,97,2549
	ZIO_COMPRESS_GZIP_4,98,2571
	ZIO_COMPRESS_GZIP_5,99,2593
	ZIO_COMPRESS_GZIP_6,100,2615
	ZIO_COMPRESS_GZIP_7,101,2637
	ZIO_COMPRESS_GZIP_8,102,2659
	ZIO_COMPRESS_GZIP_9,103,2681
	ZIO_COMPRESS_FUNCTIONS104,2703
#define	ZIO_COMPRESS_ON_VALUE	107,2731
#define	ZIO_COMPRESS_DEFAULT	108,2779
#define	ZIO_FAILURE_MODE_WAIT	110,2826
#define	ZIO_FAILURE_MODE_CONTINUE	111,2859
#define	ZIO_FAILURE_MODE_PANIC	112,2895
#define	ZIO_PRIORITY_NOW	114,2930
#define	ZIO_PRIORITY_SYNC_READ	115,2980
#define	ZIO_PRIORITY_SYNC_WRITE	116,3036
#define	ZIO_PRIORITY_ASYNC_READ	117,3093
#define	ZIO_PRIORITY_ASYNC_WRITE	118,3150
#define	ZIO_PRIORITY_FREE	119,3207
#define	ZIO_PRIORITY_CACHE_FILL	120,3258
#define	ZIO_PRIORITY_LOG_WRITE	121,3315
#define	ZIO_PRIORITY_RESILVER	122,3371
#define	ZIO_PRIORITY_SCRUB	123,3426
#define	ZIO_PRIORITY_TABLE_SIZE	124,3478
#define	ZIO_FLAG_MUSTSUCCEED	126,3515
#define	ZIO_FLAG_CANFAIL	127,3553
#define	ZIO_FLAG_FAILFAST	128,3587
#define	ZIO_FLAG_CONFIG_HELD	129,3622
#define	ZIO_FLAG_CONFIG_GRABBED	130,3660
#define	ZIO_FLAG_DONT_CACHE	132,3702
#define	ZIO_FLAG_DONT_QUEUE	133,3739
#define	ZIO_FLAG_DONT_PROPAGATE	134,3776
#define	ZIO_FLAG_DONT_RETRY	135,3817
#define	ZIO_FLAG_PHYSICAL	137,3855
#define	ZIO_FLAG_IO_BYPASS	138,3890
#define	ZIO_FLAG_IO_REPAIR	139,3926
#define	ZIO_FLAG_SPECULATIVE	140,3962
#define	ZIO_FLAG_RESILVER	142,4001
#define	ZIO_FLAG_SCRUB	143,4036
#define	ZIO_FLAG_SCRUB_THREAD	144,4069
#define	ZIO_FLAG_SUBBLOCK	145,4108
#define	ZIO_FLAG_NOBOOKMARK	147,4144
#define	ZIO_FLAG_USER	148,4181
#define	ZIO_FLAG_METADATA	149,4213
#define	ZIO_FLAG_WRITE_RETRY	150,4248
#define	ZIO_FLAG_GANG_INHERIT	152,4287
#define	ZIO_FLAG_VDEV_INHERIT	166,4614
#define	ZIO_FLAG_RETRY_INHERIT	170,4696
#define	ZIO_PIPELINE_CONTINUE	177,4840
#define	ZIO_PIPELINE_STOP	178,4877
#define	ECKSUM	184,5053
#define	EFRAGS	185,5074
typedef struct zio zio_t;187,5096
typedef void zio_done_func_t(188,5122
typedef struct zbookmark 213,6163
} zbookmark_t;218,6272
struct zio 220,6288

src/lib/libzfscommon/include/sys/metaslab_impl.h,123
#define	_SYS_METASLAB_IMPL_H27,956
struct metaslab_class 41,1146
struct metaslab_group 46,1228
struct metaslab 64,1818

src/lib/libzfscommon/include/sys/zfs_i18n.h,386
#define	_SYS_ZFS_I18N_H28,952
#define	ZFS_CI_ONLY	44,1210
#define	ZFS_CI_MIXD	45,1271
#define	ZFS_UTF8_ONLY	51,1429
enum zfs_case 53,1457
	ZFS_CASE_SENSITIVE,54,1473
	ZFS_CASE_INSENSITIVE,55,1494
	ZFS_CASE_MIXED56,1517
enum zfs_normal 59,1537
	ZFS_NORMALIZE_NONE,60,1555
	ZFS_NORMALIZE_D,61,1576
	ZFS_NORMALIZE_KC,62,1594
	ZFS_NORMALIZE_C,63,1613
	ZFS_NORMALIZE_KD64,1631

src/lib/libzfscommon/include/sys/space_map.h,964
#define	_SYS_SPACE_MAP_H27,952
typedef struct space_map_ops space_map_ops_t;38,1063
typedef struct space_map 40,1110
} space_map_t;53,1691
typedef struct space_seg 55,1707
} space_seg_t;59,1883
typedef struct space_map_obj 61,1899
} space_map_obj_t;65,2087
struct space_map_ops 67,2107
#define	SM_RUN_DECODE(96,3141
#define	SM_RUN_ENCODE(97,3194
#define	SM_TYPE_DECODE(98,3247
#define	SM_TYPE_ENCODE(99,3295
#define	SM_OFFSET_DECODE(100,3343
#define	SM_OFFSET_ENCODE(101,3394
#define	SM_DEBUG_DECODE(102,3445
#define	SM_DEBUG_ENCODE(103,3494
#define	SM_DEBUG_ACTION_DECODE(105,3544
#define	SM_DEBUG_ACTION_ENCODE(106,3600
#define	SM_DEBUG_SYNCPASS_DECODE(108,3657
#define	SM_DEBUG_SYNCPASS_ENCODE(109,3716
#define	SM_DEBUG_TXG_DECODE(111,3776
#define	SM_DEBUG_TXG_ENCODE(112,3830
#define	SM_RUN_MAX	114,3885
#define	SM_ALLOC	116,3928
#define	SM_FREE	117,3949
#define	SPACE_MAP_BLOCKSHIFT	127,4358
typedef void space_map_func_t(129,4391

src/lib/libzfscommon/include/sys/zfs_ioctl.h,1947
#define	_SYS_ZFS_IOCTL_H27,952
#define	ZFS_SNAPDIR_HIDDEN	47,1211
#define	ZFS_SNAPDIR_VISIBLE	48,1241
#define	DMU_BACKUP_STREAM_VERSION 50,1273
#define	DMU_BACKUP_HEADER_VERSION 51,1314
#define	DMU_BACKUP_MAGIC 52,1355
#define	DRR_FLAG_CLONE	54,1396
#define	DRR_FLAG_CI_DATA	55,1427
	IOCTL_REQ,62,1503
	IOCTL_REQ, IOCTL_ANS,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ, COPYINSTR_REQ,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ, COPYINSTR_REQ, COPYINSTR_ANS,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ, COPYINSTR_REQ, COPYINSTR_ANS, COPYOUT_REQ,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ, COPYINSTR_REQ, COPYINSTR_ANS, COPYOUT_REQ, MOUNT_REQ,62,1503
	IOCTL_REQ, IOCTL_ANS, COPYIN_REQ, COPYINSTR_REQ, COPYINSTR_ANS, COPYOUT_REQ, MOUNT_REQ, GETF_REQ62,1503
		struct ioctl_req 68,1650
		struct copy_req 75,1746
		struct copy_ans 80,1816
		struct mount_req 85,1890
} zfsfuse_cmd_t 94,2067
typedef struct dmu_replay_record 99,2152
		DRR_BEGIN,101,2195
		DRR_BEGIN, DRR_OBJECT,101,2195
		DRR_BEGIN, DRR_OBJECT, DRR_FREEOBJECTS,101,2195
		DRR_WRITE,102,2237
		DRR_WRITE, DRR_FREE,102,2237
		DRR_WRITE, DRR_FREE, DRR_END,102,2237
		struct drr_begin 106,2317
		struct drr_end 116,2568
		struct drr_object 119,2629
		struct drr_freeobjects 130,2911
		struct drr_write 134,3010
		struct drr_free 142,3195
} dmu_replay_record_t;148,3311
typedef struct zinject_record 150,3335
} zinject_record_t;161,3596
#define	ZINJECT_NULL	163,3617
#define	ZINJECT_FLUSH_ARC	164,3643
#define	ZINJECT_UNLOAD_SPA	165,3673
typedef struct zfs_share 167,3705
} zfs_share_t;172,3887
typedef enum zfs_case 180,4188
	ZFS_CASE_SENSITIVE,181,4212
	ZFS_CASE_INSENSITIVE,182,4233
	ZFS_CASE_MIXED183,4256
} zfs_case_t;184,4272
typedef struct zfs_cmd 186,4287
} zfs_cmd_t;208,4982
#define	ZVOL_MAX_MINOR	210,4996
#define	ZFS_MIN_MINOR	211,5029
typedef struct zfs_creat 215,5089
} zfs_creat_t;218,5163

src/lib/libzfscommon/include/sys/zfs_ctldir.h,261
#define	_ZFS_CTLDIR_H27,949
#define	ZFS_CTLDIR_NAME	40,1119
#define	zfs_has_ctldir(42,1152
#define	zfs_show_ctldir(45,1266
#define zfsctl_root(53,1493
#define zfsctl_root_lookup(65,1982
#define	ZFSCTL_INO_ROOT	71,2227
#define	ZFSCTL_INO_SNAPDIR	72,2256

src/lib/libzfscommon/include/sys/txg_impl.h,109
#define	_SYS_TXG_IMPL_H27,951
struct tx_cpu 38,1061
typedef struct tx_state 45,1178
} tx_state_t;70,2081

src/lib/libzfscommon/include/sys/rprwlock.h,151
#define	_SYS_RPRWLOCK_H27,951
typedef struct rprwlock 40,1122
} rprwlock_t;45,1231
#define	RPRW_READ_HELD(54,1563
#define	RPRW_WRITE_HELD(55,1613

src/lib/libzfscommon/include/sys/dmu_zfetch.h,239
#define	_DFETCH_H27,945
typedef enum zfetch_dirn 41,1123
	ZFETCH_FORWARD 42,1150
	ZFETCH_BACKWARD	43,1212
} zfetch_dirn_t;44,1275
typedef struct zstream 46,1293
} zstream_t;56,1800
typedef struct zfetch 58,1814
} zfetch_t;64,2118

src/lib/libzfscommon/include/sys/uberblock.h,78
#define	_SYS_UBERBLOCK_H28,974
typedef struct uberblock uberblock_t;41,1137

src/lib/libzfscommon/include/sys/rrwlock.h,149
#define	_SYS_RR_RW_LOCK_H27,953
typedef struct rrwlock 53,1678
} rrwlock_t;60,1851
#define	RRW_READ_HELD(73,2215
#define	RRW_WRITE_HELD(74,2263

src/lib/libzfscommon/include/sys/arc.h,647
#define	_SYS_ARC_H27,946
typedef struct arc_buf_hdr arc_buf_hdr_t;41,1102
typedef struct arc_buf arc_buf_t;42,1144
typedef void arc_done_func_t(43,1178
typedef int arc_evict_func_t(44,1251
arc_done_func_t arc_bcopy_func;47,1347
arc_done_func_t arc_getbuf_func;48,1379
struct arc_buf 50,1413
typedef enum arc_buf_contents 58,1544
	ARC_BUFC_DATA,59,1576
	ARC_BUFC_METADATA,60,1622
	ARC_BUFC_NUMTYPES61,1675
} arc_buf_contents_t;62,1694
#define	ARC_WAIT	66,1776
#define	ARC_NOWAIT	67,1834
#define	ARC_PREFETCH	68,1895
#define	ARC_CACHED	69,1949
#define	ARC_L2CACHE	70,2008
typedef struct writeprops 88,2679
} writeprops_t;94,2852

src/lib/libzfscommon/include/sys/zfs_fuid.h,456
#define	_SYS_FS_ZFS_FUID_H27,954
	ZFS_OWNER,44,1177
	ZFS_GROUP,45,1189
	ZFS_ACE_USER,46,1201
	ZFS_ACE_GROUP47,1216
} zfs_fuid_type_t;48,1231
#define	FUID_SIZE_ESTIMATE(54,1354
#define	FUID_INDEX(56,1428
#define	FUID_RID(57,1460
#define	FUID_ENCODE(58,1497
typedef struct zfs_fuid 74,2071
} zfs_fuid_t;79,2278
typedef struct zfs_fuid_domain 82,2322
} zfs_fuid_domain_t;86,2458
typedef struct zfs_fuid_info 91,2558
} zfs_fuid_info_t;100,2891

src/lib/libzfscommon/include/sys/zap_impl.h,951
#define	_SYS_ZAP_IMPL_H27,951
#define	ZAP_MAGIC 41,1128
#define	FZAP_BLOCK_SHIFT(43,1162
#define	ZAP_MAXCD	45,1224
#define	ZAP_HASHBITS	46,1258
#define	MZAP_ENT_LEN	47,1283
#define	MZAP_NAME_LEN	48,1308
#define	MZAP_MAX_BLKSHIFT	49,1358
#define	MZAP_MAX_BLKSZ	50,1402
typedef struct mzap_ent_phys 52,1452
} mzap_ent_phys_t;57,1616
typedef struct mzap_phys 59,1636
} mzap_phys_t;66,1852
typedef struct mzap_ent 68,1868
} mzap_ent_t;73,1981
#define	ZBT_LEAF	91,2360
#define	ZBT_HEADER	92,2397
#define	ZBT_MICRO	93,2436
#define	ZAP_EMBEDDED_PTRTBL_SHIFT(100,2613
#define	ZAP_EMBEDDED_PTRTBL_ENT(107,2885
typedef struct zap_phys 115,3100
	struct zap_table_phys 119,3208
} zap_phys_t;138,3998
typedef struct zap_table_phys zap_table_phys_t;140,4013
typedef struct zap 142,4062
} zap_t;169,4595
typedef struct zap_name 171,4605
} zap_name_t;178,4781
#define	zap_f	180,4796
#define	zap_m	181,4824
#define	ZAP_HASH_IDX(191,5229

src/lib/libzfscommon/include/zfs_namecheck.h,393
#define	_ZFS_NAMECHECK_H27,952
	NAME_ERR_LEADING_SLASH,36,1035
	NAME_ERR_EMPTY_COMPONENT,37,1098
	NAME_ERR_TRAILING_SLASH,38,1164
	NAME_ERR_INVALCHAR,39,1219
	NAME_ERR_MULTIPLE_AT,40,1271
	NAME_ERR_NOLETTER,41,1331
	NAME_ERR_RESERVED,42,1391
	NAME_ERR_DISKLIKE,43,1442
	NAME_ERR_TOOLONG,44,1499
	NAME_ERR_NO_AT,45,1542
} namecheck_err_t;46,1597
#define	ZFS_PERMSET_MAXLEN	48,1617

src/lib/libzfscommon/zfs_deleg.c,228
zfs_deleg_perm_tab_t zfs_deleg_perm_tab[zfs_deleg_perm_tab55,1439
zfs_valid_permission_name(73,2185
zfs_deleg_canonicalize_perm(82,2349
zfs_validate_who(100,2713
zfs_deleg_verify_nvlist(149,3630
zfs_deleg_whokey(202,5006

src/lib/libzfscommon/compress.c,206
#define	MATCH_BITS	122,5275
#define	MATCH_MIN	123,5296
#define	MATCH_MAX	124,5316
#define	OFFSET_MASK	125,5372
#define	LEMPEL_SIZE	126,5423
compress(129,5455
decompress(178,6758
checksum32(220,7767

src/lib/libzfscommon/zfs_comutil.c,30
zfs_allocatable_devs(46,1309

src/lib/libzfscommon/zpool_prop.c,477
static zprop_desc_t zpool_prop_table[zpool_prop_table44,1188
zpool_prop_get_table(47,1259
zpool_prop_init(53,1324
zpool_name_to_prop(114,3541
zpool_prop_to_name(124,3765
zpool_prop_get_type(130,3863
zpool_prop_readonly(136,3963
zpool_prop_default_string(142,4079
zpool_prop_default_numeric(148,4186
zpool_prop_string_to_index(154,4289
zpool_prop_index_to_string(161,4454
zpool_prop_values(170,4645
zpool_prop_column_name(176,4744
zpool_prop_align_right(182,4846

src/lib/libzfscommon/zprop_common.c,531
zprop_get_proptable(52,1354
zprop_get_numprops(61,1509
register_impl(70,1643
register_string(97,2403
register_number(107,2680
register_index(115,2951
register_hidden(124,3257
zprop_compare(136,3588
zprop_iter_common(158,4206
propname_match(202,5129
typedef struct name_to_prop_cb 231,5659
} name_to_prop_cb_t;234,5740
zprop_name_to_prop_cb(237,5773
zprop_name_to_prop(249,5995
zprop_string_to_index(264,6320
zprop_index_to_string(290,6862
zprop_values(316,7402
zprop_valid_for_type(332,7736
zprop_width(351,8173

src/lib/libzfscommon/zfs_namecheck.c,190
valid_char(52,1674
snapshot_namecheck(67,1979
permset_namecheck(102,2607
dataset_namecheck(135,3284
mountpoint_namecheck(253,5599
pool_namecheck(297,6693
dataset_name_hidden(357,7910

src/lib/libumem/vmem_base.c,54
uint_t vmem_backend 34,1097
vmem_heap_arena(37,1132

src/lib/libumem/umem.c,5385
#define	UMEM_VMFLAGS(403,15065
size_t pagesize;405,15108
static const int umem_alloc_sizes[umem_alloc_sizes417,15535
#define	NUM_ALLOC_SIZES 443,16030
#define	UMEM_MAXBUF	445,16112
static umem_magtype_t umem_magtype[umem_magtype447,16139
uint32_t umem_max_ncpus;462,16408
uint32_t umem_stack_depth 464,16457
uint32_t umem_reap_interval 465,16528
uint_t umem_depot_contention 466,16595
uint_t umem_abort 467,16673
uint_t umem_output 468,16729
uint_t umem_logging 469,16795
uint32_t umem_mtbf 470,16852
size_t umem_transaction_log_size;471,16925
size_t umem_content_log_size;472,16989
size_t umem_failure_log_size;473,17045
size_t umem_slab_log_size;474,17111
size_t umem_content_maxsave 475,17178
size_t umem_lite_minsize 476,17249
size_t umem_lite_maxalign 477,17318
size_t umem_maxverify;478,17396
size_t umem_minfirewall;479,17469
uint_t umem_flags 481,17537
mutex_t			umem_init_lock 483,17561
cond_t			umem_init_cv 484,17630
thread_t		umem_init_thr;485,17690
int			umem_init_env_ready;486,17742
int			umem_ready 487,17795
static umem_nofail_callback_t *nofail_callback;nofail_callback489,17835
static mutex_t		umem_nofail_exit_lock 490,17883
static thread_t		umem_nofail_exit_thr;491,17937
static umem_cache_t	*umem_slab_cache;umem_slab_cache493,17977
static umem_cache_t	*umem_bufctl_cache;umem_bufctl_cache494,18015
static umem_cache_t	*umem_bufctl_audit_cache;umem_bufctl_audit_cache495,18055
mutex_t			umem_flags_lock 497,18102
static vmem_t		*heap_arena;heap_arena499,18145
static vmem_alloc_t	*heap_alloc;heap_alloc500,18173
static vmem_free_t	*heap_free;heap_free501,18206
static vmem_t		*umem_internal_arena;umem_internal_arena503,18238
static vmem_t		*umem_cache_arena;umem_cache_arena504,18275
static vmem_t		*umem_hash_arena;umem_hash_arena505,18309
static vmem_t		*umem_log_arena;umem_log_arena506,18342
static vmem_t		*umem_oversize_arena;umem_oversize_arena507,18374
static vmem_t		*umem_va_arena;umem_va_arena508,18411
static vmem_t		*umem_default_arena;umem_default_arena509,18442
static vmem_t		*umem_firewall_va_arena;umem_firewall_va_arena510,18478
static vmem_t		*umem_firewall_arena;umem_firewall_arena511,18518
vmem_t			*umem_memalign_arena;umem_memalign_arena513,18556
umem_log_header_t *umem_transaction_log;umem_transaction_log515,18588
umem_log_header_t *umem_content_log;umem_content_log516,18629
umem_log_header_t *umem_failure_log;umem_failure_log517,18666
umem_log_header_t *umem_slab_log;umem_slab_log518,18703
# define CPUHINT(522,18817
#define	CPUHINT(526,18881
#define	CPUHINT_MAX(529,18922
#define	CPU(531,18954
static umem_cpu_t umem_startup_cpu 532,19008
static uint32_t umem_cpu_mask 537,19102
static umem_cpu_t *umem_cpus umem_cpus538,19161
volatile uint32_t umem_reaping;540,19227
thread_t		umem_update_thr;542,19260
struct timeval		umem_update_next;543,19287
volatile thread_t	umem_st_update_thr;544,19352
#define	IN_UPDATE(546,19423
#define	IN_REAP(548,19520
mutex_t			umem_update_lock 550,19551
cond_t			umem_update_cv 551,19625
volatile hrtime_t umem_reap_next;553,19663
mutex_t			umem_cache_lock 555,19728
umem_cache_t		umem_null_cache;558,19825
static const umem_cache_t umem_null_cache_template 559,19856
#define	ALLOC_TABLE_4 602,20585
#define	ALLOC_TABLE_64 605,20682
#define	ALLOC_TABLE_1024 611,20957
static umem_cache_t *umem_alloc_table[umem_alloc_table617,21250
caddr_t			umem_min_stack;624,21414
caddr_t			umem_max_stack;625,21440
#define	UMERR_MODIFIED	634,21663
#define	UMERR_REDZONE	635,21728
#define	UMERR_DUPFREE	636,21800
#define	UMERR_BADADDR	637,21851
#define	UMERR_BADBUFTAG	638,21915
#define	UMERR_BADBUFCTL	639,21964
#define	UMERR_BADCACHE	640,22013
#define	UMERR_BADSIZE	641,22078
#define	UMERR_BADBASE	642,22132
} umem_abort_info;653,22647
copy_pattern(656,22679
verify_pattern(666,22884
verify_and_copy_pattern(678,23137
umem_cache_applyall(696,23491
umem_add_update_unlocked(708,23757
umem_add_update(735,24323
umem_remove_updates(752,24669
umem_updateall(790,25596
umem_findslab(817,26246
umem_error(835,26612
umem_nofail_callback(984,30639
umem_alloc_retry(990,30727
umem_log_init(1030,31632
umem_log_enter(1096,33181
#define	UMEM_AUDIT(1129,34151
umem_log_event(1141,34568
umem_slab_create(1158,34908
umem_slab_destroy(1260,37359
umem_slab_alloc(1280,37881
umem_slab_free(1349,39581
umem_cache_alloc_debug(1430,41650
umem_cache_free_debug(1489,43224
umem_magazine_destroy(1540,44545
umem_depot_alloc(1570,45266
umem_depot_free(1602,46012
umem_depot_ws_update(1616,46359
umem_depot_ws_reap(1630,46793
umem_cpu_reload(1647,47307
_umem_cache_alloc(1666,47806
_umem_cache_free(1786,50472
_umem_zalloc(1893,53286
_umem_alloc(1923,54021
_umem_alloc_align(1961,55048
_umem_free(1993,55742
_umem_free_align(2033,56756
umem_firewall_va_alloc(2041,56902
umem_firewall_va_free(2061,57569
umem_cache_reap(2070,57743
umem_cache_magazine_purge(2091,58392
umem_cache_magazine_enable(2135,59393
umem_cache_magazine_resize(2164,60259
umem_hash_rescale(2186,60850
umem_cache_update(2237,62092
umem_process_updates(2287,63341
umem_st_update(2337,64458
umem_reap(2369,65186
umem_cache_create(2417,66276
umem_cache_destroy(2727,74728
umem_cache_init(2774,76218
umem_startup(2907,79756
umem_startup(2910,79807
umem_init(2979,81289
umem_cache_get_bufsize(3204,87538

src/lib/libumem/umem_impl.h,3188
#define	_UMEM_IMPL_H31,1017
#define	UMC_QCACHE	63,1490
#define	UMC_INTERNAL	64,1520
#define	UMF_AUDIT	69,1575
#define	UMF_DEADBEEF	70,1631
#define	UMF_REDZONE	71,1687
#define	UMF_CONTENTS	72,1741
#define	UMF_CHECKSIGNAL	73,1808
#define	UMF_NOMAGAZINE	74,1878
#define	UMF_FIREWALL	75,1944
#define	UMF_LITE	76,2017
#define	UMF_HASH	78,2074
#define	UMF_RANDOMIZE	79,2129
#define	UMF_BUFTAG	81,2196
#define	UMF_TOUCH	82,2244
#define	UMF_RANDOM	83,2301
#define	UMF_DEBUG	84,2361
#define	UMEM_STACK_DEPTH	86,2408
#define	UMEM_FREE_PATTERN	88,2451
#define	UMEM_UNINITIALIZED_PATTERN	89,2500
#define	UMEM_REDZONE_PATTERN	90,2557
#define	UMEM_REDZONE_BYTE	91,2609
#define	UMEM_FATAL_FLAGS	93,2642
#define	UMEM_SLEEP_FLAGS	94,2681
#define	UMEM_SIZE_ENCODE(101,2932
#define	UMEM_SIZE_DECODE(102,2976
#define	UMEM_SIZE_VALID(103,3016
typedef struct umem_bufctl 116,3646
} umem_bufctl_t;120,3823
#define	UMEM_BUFCTL_AUDIT_SIZE_DEPTH(128,4025
#define	UMEM_BUFCTL_AUDIT_ALIGN	140,4386
#define	UMEM_BUFCTL_AUDIT_MAX_SIZE	142,4422
#define	UMEM_MAX_STACK_DEPTH	146,4571
typedef struct umem_bufctl_audit 150,4706
} umem_bufctl_audit_t;161,5219
#define	UMEM_LOCAL_BUFCTL_AUDIT(163,5243
#define	UMEM_BUFCTL_AUDIT_SIZE	167,5365
typedef struct umem_buftag 174,5602
} umem_buftag_t;178,5774
#define	UMEM_BUFTAG(180,5792
#define	UMEM_BUFCTL(183,5882
#define	UMEM_BUF(186,5972
#define	UMEM_SLAB(189,6050
#define	UMEM_CPU_CACHE(192,6149
#define	UMEM_MAGAZINE_VALID(195,6243
#define	UMEM_SLAB_MEMBER(199,6391
#define	UMEM_BUFTAG_ALLOC	203,6513
#define	UMEM_BUFTAG_FREE	204,6552
typedef struct umem_slab 206,6591
} umem_slab_t;214,7002
#define	UMEM_HASH_INITIAL	216,7018
#define	UMEM_HASH(218,7048
typedef struct umem_magazine 222,7180
} umem_magazine_t;225,7275
typedef struct umem_magtype 230,7352
} umem_magtype_t;236,7632
#define	UMEM_CPU_CACHE_SIZE	239,7760
#define	UMEM_CPU_CACHE_SIZE	241,7823
#define	UMEM_CPU_PAD	243,7886
#define	UMEM_CACHE_SIZE(245,8015
typedef struct umem_cpu_cache 248,8101
} umem_cpu_cache_t;264,8959
typedef struct umem_maglist 269,9028
} umem_maglist_t;275,9295
#define	UMEM_CACHE_NAMELEN	277,9314
struct umem_cache 279,9345
typedef struct umem_cpu_log_header 349,12025
} umem_cpu_log_header_t;358,12275
typedef struct umem_log_header 360,12301
} umem_log_header_t;370,12536
typedef struct umem_cpu 372,12558
} umem_cpu_t;375,12634
#define	UMEM_MAXBUF	377,12649
#define	UMEM_ALIGN	379,12676
#define	UMEM_ALIGN_SHIFT	380,12729
#define	UMEM_VOID_FRACTION	381,12779
#define	UMEM_SECOND_ALIGN 387,12929
#define	UMEM_SECOND_ALIGN 389,12964
#define	MALLOC_MAGIC	392,13009
#define	MEMALIGN_MAGIC	393,13060
#define	MALLOC_SECOND_MAGIC	396,13110
#define	MALLOC_OVERSIZE_MAGIC	397,13179
#define	UMEM_MALLOC_ENCODE(400,13254
#define	UMEM_MALLOC_DECODE(401,13317
#define	UMEM_FREE_PATTERN_32	402,13380
#define	UMU_MAGAZINE_RESIZE	404,13441
#define	UMU_HASH_RESCALE	405,13480
#define	UMU_REAP	406,13516
#define	UMU_NOTIFY	407,13545
#define	UMU_ACTIVE	408,13576
#define	UMEM_READY_INIT_FAILED	410,13608
#define	UMEM_READY_STARTUP	411,13643
#define	UMEM_READY_INITING	412,13673
#define	UMEM_READY	413,13703

src/lib/libumem/vmem_sbrk.c,527
size_t vmem_sbrk_pagesize 71,2027
#define	MIN_ALLOC	73,2101
static size_t real_pagesize;75,2130
static vmem_t *sbrk_heap;sbrk_heap76,2159
typedef struct sbrk_fail 78,2186
} sbrk_fail_t;83,2369
static sbrk_fail_t sbrk_fails 85,2385
static mutex_t sbrk_faillock 92,2461
_sbrk_grow_aligned(104,2909
#define ALIGNSZ 113,3113
#define BRKALIGN(114,3134
vmem_sbrk_extend_alloc(153,4049
vmem_sbrk_tryfail(184,4698
vmem_sbrk_alloc(211,5314
vmem_sbrk_lockup(266,6453
vmem_sbrk_release(272,6522
vmem_sbrk_arena(278,6598

src/lib/libumem/getpcstack.c,116
#define UMEM_FRAMESIZE 52,1364
#define	UMEM_FRAMESIZE	56,1490
#define	UMEM_FRAMESIZE	63,1685
getpcstack(75,1975

src/lib/libumem/include/umem.h,510
#define	_UMEM_H28,965
#define	UMEM_DEFAULT	40,1139
#define	UMEM_NOFAIL	41,1192
#define	UMEM_FLAGS	43,1258
#define	UMC_NOTOUCH	55,1577
#define	UMC_NODEBUG	56,1608
#define	UMC_NOMAGAZINE	57,1639
#define	UMC_NOHASH	58,1673
typedef struct umem_cache umem_cache_t;63,1780
typedef int umem_constructor_t(64,1820
typedef void umem_destructor_t(65,1873
typedef void umem_reclaim_t(66,1921
typedef int umem_nofail_callback_t(68,1959
#define	UMEM_CALLBACK_RETRY	69,2001
#define	UMEM_CALLBACK_EXIT(70,2032

src/lib/libumem/misc.h,202
#define	_MISC_H31,1012
#define	offsetof(62,1660
int highbit(77,1973
int lowbit(78,2018
void umem_panic(105,2750
#define	ASSERT(118,3111
#define	ASSERT(120,3151
int __umem_assert_failed(124,3267

src/lib/libumem/umem_fail.c,331
static volatile int umem_exiting 45,1251
#define	UMEM_EXIT_ABORT	46,1289
static mutex_t umem_exit_lock 48,1316
firstexit(51,1402
umem_do_abort(75,1919
#define	SKIP_FRAMES	104,2432
#define	ERR_STACK_FRAMES	105,2482
print_stacktrace(108,2524
umem_panic(129,2935
umem_err_recoverable(152,3275
__umem_assert_failed(170,3536

src/lib/libumem/umem_base.h,154
#define	_UMEM_BASE_H28,970
#define	PAGESIZE	42,1171
#define	UMEM_REAP_DONE	75,2030
#define	UMEM_REAP_ADDING	76,2080
#define	UMEM_REAP_ACTIVE	77,2144

src/lib/libumem/config.h,249
#define CONFIG_H2,17
#define UMEM_PTHREAD_MUTEX_TOO_BIG 4,35
#define HAVE_SYS_TIME_H 6,73
#define HAVE_DLFCN_H 7,104
#define HAVE_UNISTD_H 8,135
#define HAVE_SYS_MMAN_H 9,166
#define HAVE_SYS_SYSMACROS_H 10,197
#define HAVE_STRINGS_H 11,228

src/lib/libumem/vmem_mmap.c,321
#define	ALLOC_PROT	47,1250
#define	FREE_PROT	48,1304
#define	ALLOC_FLAGS	50,1333
#define	FREE_FLAGS	51,1376
#define	CHUNKSIZE	54,1452
static size_t CHUNKSIZE;56,1505
static vmem_t *mmap_heap;mmap_heap59,1538
vmem_mmap_alloc(62,1579
vmem_mmap_free(88,2031
vmem_mmap_top_alloc(101,2310
vmem_mmap_arena(155,3262

src/lib/libumem/vmem.c,2398
#define	VMEM_INITIAL	131,3722
#define	VMEM_SEG_INITIAL	132,3770
#define	VMEM_SEGS_PER_SPAN_CREATE	138,3975
#define	VMEM_SEGS_PER_EXACT_ALLOC	155,4695
#define	VMEM_SEGS_PER_LEFT_ALLOC	156,4731
#define	VMEM_SEGS_PER_RIGHT_ALLOC	157,4766
#define	VMEM_SEGS_PER_MIDDLE_ALLOC	158,4802
#define	VMEM_SEGS_PER_ALLOC_MAX	165,5057
#define	VMEM_POPULATE_SEGS_PER_ARENA	193,6381
#define	VMEM_POPULATE_LOCKS	194,6420
#define	VMEM_POPULATE_RESERVE	196,6452
#define	VMEM_MINFREE	204,6741
static vmem_t vmem0[vmem0207,6876
static vmem_t *vmem_populator[vmem_populator208,6911
static uint32_t vmem_id;209,6956
static uint32_t vmem_populators;210,6981
static vmem_seg_t vmem_seg0[vmem_seg0211,7014
static vmem_seg_t *vmem_segfree;vmem_segfree212,7061
static mutex_t vmem_list_lock 213,7094
static mutex_t vmem_segfree_lock 214,7140
static vmem_populate_lock_t vmem_nosleep_lock 215,7189
#define	IN_POPULATE(219,7262
static vmem_t *vmem_list;vmem_list220,7327
static vmem_t *vmem_internal_arena;vmem_internal_arena221,7353
static vmem_t *vmem_seg_arena;vmem_seg_arena222,7389
static vmem_t *vmem_hash_arena;vmem_hash_arena223,7420
static vmem_t *vmem_vmem_arena;vmem_vmem_arena224,7452
vmem_t *vmem_heap;vmem_heap226,7485
vmem_alloc_t *vmem_heap_alloc;vmem_heap_alloc227,7504
vmem_free_t *vmem_heap_free;vmem_heap_free228,7535
uint32_t vmem_mtbf;230,7565
size_t vmem_seg_size 231,7634
#define	VMEM_INSERT(242,7956
#define	VMEM_DELETE(251,8226
vmem_getseg_global(263,8538
vmem_putseg_global(279,8819
vmem_getseg(291,9066
vmem_putseg(308,9304
vmem_freelist_insert(319,9489
vmem_freelist_delete(337,9864
vmem_hash_insert(357,10416
vmem_hash_delete(383,11000
vmem_seg_create(416,11741
vmem_seg_destroy(434,12072
vmem_span_create(446,12299
vmem_span_destroy(498,13606
vmem_seg_alloc(522,14209
vmem_reap(570,15562
vmem_populate(580,15709
vmem_advance(676,18240
vmem_nextfit_alloc(731,19919
vmem_xalloc(830,23211
vmem_xfree(1018,29206
vmem_alloc(1076,30825
vmem_free(1131,32255
vmem_contains(1144,32548
vmem_add(1167,33131
vmem_extend_unlocked(1202,34262
_vmem_extend_alloc(1328,37366
vmem_walk(1375,38692
vmem_size(1417,39796
vmem_create(1439,40522
vmem_destroy(1548,43371
vmem_hash_rescale(1596,44610
vmem_update(1648,45884
vmem_startup(1674,46534
vmem_init(1699,46997
vmem_no_debug(1763,48724
vmem_lockup(1777,49019
vmem_release(1796,49374

src/lib/libumem/misc.c,575
#define _BUILDING_UMEM_MISC_C32,1047
#define	UMEM_ERRFD	57,1431
#define	UMEM_MAX_ERROR_SIZE 58,1481
#define	ERR_SIZE 66,1722
static mutex_t umem_error_lock 68,1773
static char umem_error_buffer[umem_error_buffer70,1821
static uint_t umem_error_begin 71,1867
static uint_t umem_error_end 72,1903
#define	WRITE_AND_INC(74,1938
umem_log_enter(80,2067
umem_error_enter(114,2710
highbit(127,2997
lowbit(158,3365
hrt2ts(188,3727
log_message(195,3837
debug_printf(215,4181
umem_vprintf(230,4429
umem_printf(240,4606
umem_printf_warn(251,4743
print_sym(264,4960

src/lib/libumem/sol_compat.h,2517
#define _EC_UMEM_SOL_COMPAT_H_7,225
# define THR_RETURN 19,387
# define THR_API 20,413
# define INLINE 21,437
# define THR_RETURN 23,468
# define THR_API24,495
# define INLINE 25,512
#define NO_WEAK_SYMBOLS29,584
#define _umem_cache_alloc(30,608
#define _umem_cache_free(31,661
#define _umem_zalloc(32,712
#define _umem_alloc(33,755
#define _umem_alloc_align(34,796
#define _umem_free(35,853
#define _umem_free_align(36,892
#define bcopy(40,965
#define bzero(41,1006
typedef pthread_t thread_t;44,1052
typedef pthread_mutex_t mutex_t;45,1080
typedef pthread_cond_t cond_t;46,1113
typedef u_int64_t hrtime_t;47,1144
typedef uint32_t uint_t;48,1172
typedef unsigned long ulong_t;49,1197
typedef struct timespec timestruc_t;50,1228
typedef long long longlong_t;51,1265
typedef struct timespec timespec_t;52,1295
static INLINE hrtime_t gethrtime(53,1331
# define thr_self(58,1476
static INLINE thread_t _thr_self(59,1526
#define CPUHINT(63,1616
# define thr_sigsetmask 65,1682
#define THR_BOUND 67,1734
#define THR_DETACHED 68,1758
#define THR_DAEMON 69,1782
static INLINE int thr_create(71,1807
# define mutex_init(89,2243
# define mutex_lock(90,2307
# define mutex_unlock(91,2365
# define mutex_destroy(92,2425
# define mutex_trylock(93,2486
# define DEFAULTMUTEX 94,2547
# define DEFAULTCV 95,2608
# define MUTEX_HELD(96,2659
# define cond_init(98,2742
# define cond_wait(99,2804
# define _cond_wait(100,2863
# define cond_signal(101,2922
# define cond_broadcast(102,2980
# define cond_destroy(103,3041
# define cond_timedwait 104,3100
# define _cond_timedwait 105,3158
# define RTLD_FIRST 108,3236
#  define ec_atomic_inc(115,3328
#  define ec_atomic_inc64(116,3380
static INLINE uint_t ec_atomic_cas(118,3509
static INLINE uint_t ec_atomic_cas(128,3797
static INLINE uint_t ec_atomic_inc(138,4036
#  define ec_atomic_inc64(150,4360
#define P2PHASE(155,4414
#define P2ALIGN(156,4465
#define P2NPHASE(157,4511
#define P2ROUNDUP(158,4564
#define P2END(159,4615
#define P2PHASEUP(160,4664
#define P2CROSS(161,4741
#define P2SAMEHIGHBIT(162,4801
#define IS_P2ALIGNED(163,4860
#define ISP2(164,4936
#define atomic_add_64(167,5050
#define atomic_add_32_nv(168,5113
#define NANOSEC 171,5183
#define issetugid(175,5232
#define issetugid(177,5285
#define _sysconf(180,5336
#define __NORETURN 181,5367
#define EC_UMEM_DUMMY_PCSTACK 183,5415
static INLINE int __nthreads(184,5447
# define _LP64 191,5575
# define MIN(195,5612
# define MAX(198,5673

src/lib/libumem/vmem_base.h,134
#define	_VMEM_BASE_H28,970
#define	VMEM_BACKEND_SBRK	65,2023
#define	VMEM_BACKEND_MMAP	66,2059
#define	VMEM_BACKEND_STAND	67,2095

src/lib/libumem/vmem_stand.h,29
#define	_VMEM_STAND_H28,971

src/lib/libumem/init_lib.c,76
vmem_heap_init(55,1377
umem_type_init(85,1904
umem_get_max_ncpus(99,2155

src/lib/libumem/envvar.c,1657
#define	UMEM_ENV_ITEM_MAX	63,1927
typedef int arg_process_t(67,1981
#define	ARG_SUCCESS	68,2061
#define	ARG_BAD	69,2111
typedef struct umem_env_item 71,2162
	    ITEM_INVALID,75,2298
	    ITEM_FLAG,76,2317
	    ITEM_CLEARFLAG,77,2374
	    ITEM_OPTUINT,78,2439
	    ITEM_UINT,79,2490
	    ITEM_OPTSIZE,80,2539
	    ITEM_SIZE,81,2589
	    ITEM_SPECIAL	82,2637
} umem_env_item_t;90,3009
static arg_process_t umem_backend_process;93,3053
static arg_process_t umem_log_process;96,3104
const char *____umem_environ_msg_options ____umem_environ_msg_options98,3144
static umem_env_item_t umem_options_items[umem_options_items100,3210
const char *____umem_environ_msg_debug ____umem_environ_msg_debug139,4197
static umem_env_item_t umem_debug_items[umem_debug_items141,4259
const char *____umem_environ_msg_logging ____umem_environ_msg_logging208,6354
static umem_env_item_t umem_logging_items[umem_logging_items210,6420
typedef struct umem_envvar 241,7465
} umem_envvar_t;247,7635
static umem_envvar_t umem_envvars[umem_envvars249,7653
static umem_envvar_t *env_current;env_current256,7903
#define	CURRENT	257,7938
empty(260,7991
item_uint_process(271,8116
item_size_process(310,8830
umem_log_process(379,10042
umem_backend_process(398,10422
process_item(422,10898
#define	ENV_SHORT_BYTES	501,12422
umem_process_value(503,12484
umem_setup_envvars(555,13499
		STATE_START,559,13582
		STATE_GETENV,560,13597
		STATE_DLSYM,561,13613
		STATE_FUNC,562,13628
		STATE_DONE563,13642
# define dlopen(626,15051
# define dlsym(627,15095
# define dlclose(628,15145
# define dlerror(629,15168
umem_process_envvars(666,15926

src/lib/libumem/umem_agent_support.c,185
#define	AGENT_STACK_SIZE	35,1105
char __umem_agent_stack_beg[__umem_agent_stack_beg38,1142
char *__umem_agent_stack_end __umem_agent_stack_end39,1189
__umem_agent_free_bp(42,1269

src/lib/libumem/umem_update_thread.c,72
THR_API umem_update_thread(45,1331
umem_create_update_thread(125,3234

src/lib/libumem/umem_fork.c,225
umem_lockup_cache(45,1268
umem_release_cache(58,1535
umem_lockup_log_header(71,1809
umem_release_log_header(83,2040
umem_lockup(96,2277
umem_release(132,3235
umem_release_child(156,3824
umem_forkhandler_init(204,4891

src/lib/libumem/sys/vmem_impl_user.h,615
#define	_SYS_VMEM_IMPL_USER_H31,1031
typedef struct vmem_seg vmem_seg_t;55,1397
#define	VMEM_STACK_DEPTH	57,1434
struct vmem_seg 59,1463
typedef struct vmem_freelist 81,2173
} vmem_freelist_t;86,2364
#define	VS_SIZE(88,2384
#define	VMEM_HASH_INDEX(93,2466
#define	VMEM_HASH(96,2570
#define	VMEM_NAMELEN	100,2721
#define	VMEM_HASH_INITIAL	101,2746
#define	VMEM_NQCACHE_MAX	102,2775
#define	VMEM_FREELISTS	103,2803
typedef struct vmem_kstat 105,2850
} vmem_kstat_t;120,3602
struct vmem 122,3619
typedef struct vmem_populate_lock 154,4981
} vmem_populate_lock_t;157,5059
#define	VM_UMFLAGS	159,5084

src/lib/libumem/sys/vmem.h,829
#define	_SYS_VMEM_H28,969
#define	VM_SLEEP	42,1138
#define	VM_NOSLEEP	43,1189
#define	VM_PANIC	44,1244
#define	VM_PUSHPAGE	45,1295
#define	VM_KMFLAGS	46,1352
#define	VM_BESTFIT	48,1422
#define	VM_FIRSTFIT	49,1452
#define	VM_NEXTFIT	50,1483
#define	VM_MEMLOAD	57,1734
#define	VM_NORELOC	58,1764
#define	VM_ABORT	64,2027
#define	VM_FLAGS	66,2056
#define	VMC_POPULATOR	71,2116
#define	VMC_NO_QCACHE	72,2149
#define	VMC_IDENTIFIER	73,2214
#define	VMC_XALLOC	78,2414
#define	VMC_FLAGS	79,2444
#define	VMEM_ALLOC	84,2505
#define	VMEM_FREE	85,2529
#define	VMEM_SPAN	90,2600
#define	VMEM_ROTOR	91,2623
#define	VMEM_WALKER	92,2647
#define	VMEM_REENTRANT	103,3161
typedef struct vmem vmem_t;105,3196
typedef void *(vmem_alloc_t)106,3224
typedef void (vmem_free_t)107,3277
typedef void *(vmem_ximport_t)113,3470

src/zfs-fuse/zfs_operations.c,1834
#define ZFS_MAGIC 47,1336
static void zfsfuse_getcred(49,1364
static void zfsfuse_destroy(57,1529
static void zfsfuse_statfs(80,2079
static int zfsfuse_stat(112,2930
static int zfsfuse_getattr(143,3817
static void zfsfuse_getattr_helper(179,4565
static int zfsfuse_lookup(188,4798
static void zfsfuse_lookup_helper(249,5954
static int zfsfuse_opendir(258,6193
static void zfsfuse_opendir_helper(324,7404
static int zfsfuse_release(333,7637
static void zfsfuse_release_helper(360,8230
static int zfsfuse_readdir(369,8490
static void zfsfuse_readdir_helper(454,10143
static int zfsfuse_opencreate(463,10411
static void zfsfuse_open_helper(640,13839
static void zfsfuse_create_helper(649,14092
static int zfsfuse_readlink(658,14406
static void zfsfuse_readlink_helper(710,15501
static int zfsfuse_read(719,15705
static void zfsfuse_read_helper(765,16669
static int zfsfuse_mkdir(774,16931
static void zfsfuse_mkdir_helper(839,18200
static int zfsfuse_rmdir(848,18456
static void zfsfuse_rmdir_helper(889,19459
static int zfsfuse_setattr(898,19721
static void zfsfuse_setattr_helper(1018,22409
static int zfsfuse_unlink(1027,22687
static void zfsfuse_unlink_helper(1062,23436
static int zfsfuse_write(1071,23701
static void zfsfuse_write_helper(1114,24675
static int zfsfuse_mknod(1123,24961
static void zfsfuse_mknod_helper(1196,26386
static int zfsfuse_symlink(1205,26660
static void zfsfuse_symlink_helper(1276,28035
static int zfsfuse_rename(1285,28300
static void zfsfuse_rename_helper(1338,29588
static int zfsfuse_fsync(1349,29983
static void zfsfuse_fsync_helper(1373,30521
static int zfsfuse_link(1383,30800
static void zfsfuse_link_helper(1462,32441
static int zfsfuse_access(1472,32766
static void zfsfuse_access_helper(1513,33551
struct fuse_lowlevel_ops zfs_operations 1523,33794

src/zfs-fuse/zfs_vfsops.c,1647
int zfsfstype;68,1853
vfsops_t *zfs_vfsops zfs_vfsops69,1868
static kmutex_t	zfs_dev_mtx;73,1979
static const fs_operation_def_t zfs_vfsops_template[zfs_vfsops_template83,2419
static const fs_operation_def_t zfs_vfsops_eio_template[zfs_vfsops_eio_template96,2877
static uint32_t	zfs_active_fs_count 107,3149
static char *noatime_cancel[noatime_cancel110,3197
static char *atime_cancel[atime_cancel111,3253
static char *noxattr_cancel[noxattr_cancel112,3309
static char *xattr_cancel[xattr_cancel113,3365
static mntopt_t mntopts[mntopts119,3524
static mntopts_t zfs_mntopts 126,3757
zfs_sync(134,3866
zfs_create_unique_device(180,4989
atime_changed_cb(237,6264
xattr_changed_cb(253,6651
blksz_changed_cb(271,7132
readonly_changed_cb(284,7400
devices_changed_cb(302,7862
setuid_changed_cb(318,8296
exec_changed_cb(334,8723
nbmand_changed_cb(358,9445
snapdir_changed_cb(371,9784
vscan_changed_cb(379,9907
acl_mode_changed_cb(387,10022
acl_inherit_changed_cb(395,10143
zfs_register_callbacks(403,10269
zfsvfs_setup(574,15419
zfs_freezfsvfs(644,17597
zfs_domount(656,17931
zfs_unregister_callbacks(780,21126
str_to_uint64(829,22342
zfs_parse_bootfs(850,22754
zfs_mountroot(878,23236
zfs_mount(987,25833
zfs_statvfs(1089,28124
zfs_root(1155,30141
zfsvfs_teardown(1178,30572
zfs_umount(1269,32988
zfs_vget(1359,34992
zfs_suspend_fs(1453,37211
zfs_resume_fs(1471,37529
zfs_freevfs(1517,38678
zfs_vfsinit(1539,39199
zfs_init(1575,39946
zfs_fini(1590,40139
zfs_busy(1598,40225
zfs_set_version(1604,40285
zfs_get_zplprop(1658,41444
static vfsdef_t vfw 1697,42230
struct modlfs zfs_modlfs 1706,42399

src/zfs-fuse/main.c,281
static const char *cf_pidfile cf_pidfile34,1025
static int cf_daemonize 35,1063
static void exit_handler(37,1093
static int set_signal_handler(42,1162
static struct option longopts[longopts63,1516
void print_usage(82,1733
static void parse_args(89,1949
int main(118,2613

src/zfs-fuse/zfs_vnops.c,1949
zfs_open(169,6359
zfs_close(197,7026
zfs_holey(231,7883
zfs_ioctl(272,8577
zfs_map_page(326,9701
zfs_unmap_page(336,9931
mappedwrite(357,10430
mappedread(419,11987
offset_t zfs_read_chunk_size 455,12715
zfs_read(477,13278
zfs_prefault_write(580,15470
zfs_write(657,16861
zfs_get_done(899,23099
zfs_get_data(916,23435
zfs_access(1015,26177
zfs_lookup(1058,27193
zfs_create(1182,29824
zfs_remove(1431,35315
zfs_mkdir(1632,40027
zfs_rmdir(1795,43812
zfs_readdir(1926,46721
ulong_t zfs_fsync_sync_cnt 2167,52309
zfs_fsync(2170,52353
zfs_getattr(2212,53565
zfs_setattr(2406,58807
typedef struct zfs_zlock 2837,69605
} zfs_zlock_t;2841,69766
zfs_rename_unlock(2847,69871
zfs_rename_lock(2867,70391
zfs_rename(2953,72394
zfs_symlink(3251,79737
zfs_readlink(3402,83362
zfs_link(3451,84485
zfs_null_putapage(3577,87140
zfs_putapage(3607,87814
zfs_putpage(3726,90675
zfs_inactive(3793,92057
zfs_seek(3860,93601
zfs_frlock(3873,93918
zfs_fillpage(3910,94891
zfs_getpage(4034,98263
zfs_map(4172,101267
zfs_addmap(4252,102851
zfs_delmap(4289,103977
zfs_space(4331,105105
zfs_fid(4368,105764
zfs_pathconf(4420,106978
zfs_getsecattr(4485,108228
zfs_setsecattr(4503,108618
zfs_inval(4528,109267
zfs_isdir(4534,109313
vnodeops_t *zfs_dvnodeops;zfs_dvnodeops4541,109393
const fs_operation_def_t zfs_dvnodeops_template[zfs_dvnodeops_template4542,109420
vnodeops_t *zfs_fvnodeops;zfs_fvnodeops4574,110734
const fs_operation_def_t zfs_fvnodeops_template[zfs_fvnodeops_template4575,110761
vnodeops_t *zfs_symvnodeops;zfs_symvnodeops4607,112081
const fs_operation_def_t zfs_symvnodeops_template[zfs_symvnodeops_template4608,112110
vnodeops_t *zfs_xdvnodeops;zfs_xdvnodeops4632,113047
const fs_operation_def_t zfs_xdvnodeops_template[zfs_xdvnodeops_template4633,113075
vnodeops_t *zfs_evnodeops;zfs_evnodeops4663,114289
const fs_operation_def_t zfs_evnodeops_template[zfs_evnodeops_template4664,114316

src/zfs-fuse/zfs_ioctl.c,3838
ldi_ident_t zfs_li 78,2054
dev_info_t *zfs_dip;zfs_dip79,2081
typedef int zfs_ioc_func_t(81,2103
typedef int zfs_secpolicy_func_t(82,2144
typedef struct zfs_ioc_vec 84,2202
		NO_NAME,88,2307
		POOL_NAME,89,2318
		DATASET_NAME90,2331
} zfs_ioc_vec_t;93,2391
__dprintf(102,2682
history_str_free(139,3517
history_str_get(145,3601
zfs_is_bootfs(168,4029
zfs_earlier_version(194,4525
zpl_earlier_version(214,4871
zfs_log_history(231,5228
zfs_secpolicy_none(253,5732
zfs_secpolicy_read(264,5967
zfs_dozonecheck(274,6138
zfs_secpolicy_write_perms(312,6934
zfs_secpolicy_setprop(326,7199
zfs_secpolicy_fsacl(362,7990
zfs_secpolicy_rollback(378,8242
zfs_secpolicy_send(390,8512
zfs_secpolicy_share(397,8647
zfs_get_parent(432,9329
zfs_secpolicy_destroy_perms(454,9724
zfs_secpolicy_destroy(466,9985
zfs_secpolicy_iscsi(476,10192
zfs_secpolicy_rename_perms(482,10277
zfs_secpolicy_rename(511,10950
zfs_secpolicy_promote(517,11083
zfs_secpolicy_receive(559,12099
zfs_secpolicy_snapshot_perms(576,12474
zfs_secpolicy_snapshot(591,12759
zfs_secpolicy_create(598,12883
zfs_secpolicy_umount(624,13454
zfs_secpolicy_config(641,13840
zfs_secpolicy_minor(655,14140
zfs_secpolicy_inject(670,14420
zfs_secpolicy_inherit(676,14517
get_nvlist(696,15001
put_nvlist(727,15540
zfs_ioc_pool_create(751,16050
zfs_ioc_pool_destroy(820,17651
zfs_ioc_pool_import(829,17789
zfs_ioc_pool_export(863,18512
zfs_ioc_pool_configs(874,18707
zfs_ioc_pool_stats(890,18946
zfs_ioc_pool_tryimport(921,19592
zfs_ioc_pool_scrub(944,19980
zfs_ioc_pool_freeze(960,20212
zfs_ioc_pool_upgrade(974,20415
zfs_ioc_pool_get_history(994,20761
zfs_ioc_dsobj_to_dsname(1026,21423
zfs_ioc_obj_to_path(1037,21596
zfs_ioc_vdev_add(1053,21928
zfs_ioc_vdev_remove(1096,23011
zfs_ioc_vdev_set_state(1110,23260
zfs_ioc_vdev_attach(1144,23926
zfs_ioc_vdev_detach(1165,24352
zfs_ioc_vdev_setpath(1180,24597
zfs_ioc_objset_stats(1207,25122
nvl_add_zplprop(1241,25947
zfs_ioc_objset_zplprops(1266,26534
zfs_ioc_dataset_list_next(1314,27796
zfs_ioc_snapshot_list_next(1365,29046
zfs_set_prop_nvlist(1400,29916
zfs_ioc_set_prop(1587,34532
zfs_ioc_inherit_prop(1625,35234
zfs_ioc_pool_set_props(1632,35420
zfs_ioc_pool_get_props(1656,35819
zfs_ioc_iscsi_perm_check(1680,36201
zfs_ioc_set_fsacl(1739,37439
zfs_ioc_get_fsacl(1788,38416
zfs_ioc_create_minor(1808,38688
zfs_ioc_remove_minor(1821,38858
zfs_get_vfs(1834,39180
zfs_create_cb(1856,39563
#define	ZFS_PROP_UNDEFINED	1863,39706
zfs_fill_zplprops_impl(1886,40643
zfs_fill_zplprops(1963,43030
zfs_fill_zplprops_root(1997,43854
zfs_ioc_create(2024,44494
struct snap_prop_arg 2158,47634
set_snap_props(2164,47715
zfs_ioc_snapshot(2188,48228
zfs_unmount_snap(2227,49094
zfs_ioc_destroy_snaps(2274,49940
zfs_ioc_destroy(2295,50368
zfs_ioc_rollback(2313,50712
zfs_ioc_rename(2369,51976
clear_props(2393,52616
zfs_ioc_recv(2425,53489
zfs_ioc_send(2572,56916
zfs_ioc_inject_fault(2623,58000
zfs_ioc_clear_fault(2637,58226
zfs_ioc_inject_list_next(2643,58322
zfs_ioc_error_log(2657,58556
zfs_ioc_clear(2679,58986
zfs_ioc_promote(2745,60245
int zfs_nfsshare_inited;2773,60964
int zfs_smbshare_inited;2774,60989
ddi_modhandle_t nfs_mod;2776,61015
ddi_modhandle_t sharefs_mod;2777,61040
ddi_modhandle_t smbsrv_mod;2778,61069
kmutex_t zfs_share_lock;2781,61105
zfs_init_sharefs(2784,61142
zfs_ioc_share(2808,61673
static zfs_ioc_vec_t zfs_ioc_vec[zfs_ioc_vec2910,64145
zfsdev_ioctl(2964,67409
zfs_attach(3027,68756
zfs_detach(3044,69046
zfs_info(3062,69349
static struct cb_ops zfs_cb_ops 3086,69908
static struct dev_ops zfs_dev_ops 3107,70419
static struct modldrv zfs_modldrv 3120,70715
static struct modlinkage modlinkage 3125,70840
uint_t zfs_fsyncer_key;3133,70953
zfs_ioctl_init(3137,71009
zfs_ioctl_fini(3169,71487
_info(3208,72148

src/zfs-fuse/ptrace.c,926
#define PTRACE_FLAG_FILENAME 60,1988
#define PTRACE_OUTPUT 61,2025
#define START_TRACE 63,2077
#define FUNCTION_ENTRY_STR 64,2112
#define FUNCTION_EXIT_STR 65,2147
#define END_TRACE 66,2181
#define __NON_INSTRUMENT_FUNCTION__ 67,2215
typedef enum { FUNCTION_ENTRY,69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT 69,2296
typedef enum { FUNCTION_ENTRY, FUNCTION_EXIT } entry_t;69,2296
typedef enum { A_UNINITIALIZED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE,70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE 70,2352
typedef enum { A_UNINITIALIZED, A_DISABLED, A_ACTIVE, A_INACTIVE } active_t;70,2352
gnu_ptrace_close(75,2494
static pthread_key_t key;83,2600
gnu_ptrace_process_init(87,2667
gnu_ptrace_thread_init(96,2839
gnu_ptrace(133,3617
__cyg_profile_func_enter(179,4405
__cyg_profile_func_exit(188,4621

src/zfs-fuse/zfsfuse_socket.h,31
#define ZFSFUSE_IOCTL_H28,967

src/zfs-fuse/util.c,302
int ioctl_fd 47,1297
boolean_t listener_thread_started 49,1317
pthread_t listener_thread;50,1362
int num_filesystems;52,1390
void do_daemon(58,1491
int do_init(88,1985
void do_exit(110,2392
#define FUSE_OPTIONS 130,2781
uint32_t mounted 133,2849
int do_mount(136,2879
int do_umount(217,4530

src/zfs-fuse/zfs_acl.c,2704
#define	ALLOW	56,1614
#define	DENY	57,1656
#define	MAX_ACE_TYPE	58,1696
#define	OWNING_GROUP	60,1760
#define	EVERYONE_ALLOW_MASK 61,1815
#define	EVERYONE_DENY_MASK 63,1923
#define	OWNER_ALLOW_MASK 65,2033
#define	WRITE_MASK_DATA 67,2143
#define	ZFS_CHECKED_MASKS 69,2223
#define	WRITE_MASK 74,2501
#define	OGE_CLEAR	77,2624
#define	OKAY_MASK_BITS 80,2762
#define	ALL_INHERIT	83,2905
#define	RESTRICTED_CLEAR	86,3051
#define	V4_ACL_WIDE_FLAGS 88,3109
#define	ZFS_ACL_WIDE_FLAGS 91,3201
zfs_ace_v0_get_type(95,3319
zfs_ace_v0_get_flags(101,3414
zfs_ace_v0_get_mask(107,3511
zfs_ace_v0_get_who(113,3613
zfs_ace_v0_set_type(119,3703
zfs_ace_v0_set_flags(125,3807
zfs_ace_v0_set_mask(131,3915
zfs_ace_v0_set_who(137,4026
zfs_ace_v0_size(144,4142
zfs_ace_v0_abstract_size(150,4222
zfs_ace_v0_mask_off(156,4302
zfs_ace_v0_data(163,4406
static acl_ops_t zfs_acl_v0_ops 169,4482
zfs_ace_fuid_get_type(185,4798
zfs_ace_fuid_get_flags(191,4896
zfs_ace_fuid_get_mask(197,4996
zfs_ace_fuid_get_who(203,5101
zfs_ace_fuid_set_type(217,5401
zfs_ace_fuid_set_flags(223,5508
zfs_ace_fuid_set_mask(229,5619
zfs_ace_fuid_set_who(235,5733
zfs_ace_fuid_size(248,6011
zfs_ace_fuid_abstract_size(274,6640
zfs_ace_fuid_mask_off(280,6723
zfs_ace_fuid_data(286,6817
static acl_ops_t zfs_acl_fuid_ops 305,7281
zfs_acl_version(321,7618
zfs_acl_version_zp(330,7771
zfs_acl_alloc(336,7879
zfs_acl_node_alloc(352,8242
zfs_acl_node_free(368,8571
zfs_acl_release_nodes(376,8761
zfs_acl_free(389,9001
zfs_ace_valid(397,9150
zfs_acl_next_ace(448,10211
zfs_ace_walk(495,11335
zfs_acl_curr_node(508,11678
zfs_copy_ace_2_fuid(520,11930
zfs_copy_fuid_2_ace(581,13613
zfs_copy_ace_2_oldace(638,15112
zfs_acl_xform(664,15725
zfs_unix_to_v4(720,17144
zfs_set_ace(734,17413
zfs_mode_fuid_compute(752,17955
zfs_acl_node_read_internal(898,21129
zfs_acl_node_read(936,22165
zfs_aclset_common(993,23708
zfs_acl_prepend_fixup(1114,27038
zfs_acl_fixup_canonical_six(1179,28313
zfs_acl_ace_match(1210,29084
zfs_reuse_deny(1225,29489
zfs_acl_ace_insert(1270,30629
zfs_acl_prepend_deny(1315,31781
zfs_acl_split_ace(1338,32383
zfs_have_canonical_six(1372,33305
zfs_fixup_group_entries(1415,34587
zfs_acl_chmod(1452,35499
zfs_acl_chmod_setattr(1594,39076
zfs_restricted_update(1613,39463
zfs_ace_can_use(1628,39809
zfs_acl_inherit(1645,40206
zfs_perm_init(1768,43532
zfs_getacl(1885,46584
zfs_vsec_2_aclp(1978,48717
zfs_setacl(2036,50208
zfs_zaccess_common(2144,52850
zfs_zaccess_append(2301,56118
zfs_zaccess(2316,56497
zfs_zaccess_rwx(2438,59343
zfs_zaccess_unix(2447,59545
zfs_delete_final_check(2455,59711
zfs_zaccess_delete(2508,61800
zfs_zaccess_rename(2595,64114

src/zfs-fuse/cmd_listener.h,30
#define CMD_LISTENER_H28,966

src/zfs-fuse/zfs_replay.c,628
zfs_init_vattr(59,1661
zfs_replay_error(74,2102
zfs_replay_xvattr(80,2203
zfs_replay_domain_cnt(135,4122
zfs_replay_fuid_domain_common(152,4400
zfs_replay_fuid_ugid(169,4709
zfs_replay_fuid_domain(186,5096
zfs_replay_fuids(213,5685
zfs_replay_swap_attrs(244,6425
zfs_replay_create_acl(261,6987
zfs_replay_create(401,11312
zfs_replay_remove(527,14802
zfs_replay_link(560,15490
zfs_replay_rename(590,16131
zfs_replay_write(622,16857
zfs_replay_truncate(652,17557
zfs_replay_setattr(687,18296
zfs_replay_acl_v0(747,19760
zfs_replay_acl(799,21188
zil_replay_func_t *zfs_replay_vector[zfs_replay_vector857,22571

src/zfs-fuse/zfs_rlock.c,326
zfs_range_lock_writer(103,4180
zfs_range_proxify(190,6471
zfs_range_split(222,7155
zfs_range_new_proxy(253,7934
zfs_range_add_reader(270,8267
zfs_range_lock_reader(355,10777
zfs_range_lock(425,12578
zfs_range_unlock_reader(460,13406
zfs_range_unlock(527,15162
zfs_range_reduce(565,16107
zfs_range_compare(592,16757

src/zfs-fuse/zvol.c,1724
static void *zvol_state;zvol_state82,2338
#define	ZVOL_DUMPSIZE	84,2364
static kmutex_t zvol_state_lock;92,2660
static uint32_t zvol_minors;93,2693
#define	NUM_EXTENTS	95,2723
typedef struct zvol_extent 97,2790
} zvol_extent_t;101,2967
typedef struct zvol_ext_list 106,3047
} zvol_ext_list_t;109,3151
typedef struct zvol_state 114,3215
} zvol_state_t;129,3942
#define	ZVOL_RDONLY	134,3989
#define	ZVOL_DUMPIFIED	135,4013
#define	ZVOL_EXCL	136,4040
int zvol_maxphys 141,4110
zvol_size_changed(150,4446
zvol_check_volsize(165,4860
zvol_check_volblocksize(181,5109
zvol_readonly_changed_cb(192,5310
zvol_get_stats(204,5487
zvol_minor_alloc(232,5967
zvol_minor_lookup(246,6211
zvol_init_extent(265,6529
struct maparg 273,6704
zvol_map_block(281,6817
zvol_create_cb(391,9568
zvol_replay_write(430,10720
zvol_replay_err(457,11314
zil_replay_func_t *zvol_replay_vector[zvol_replay_vector466,11489
zvol_get_dva(487,12095
zvol_free_extents(522,12865
zvol_get_lbas(539,13135
zvol_create_minor(586,14135
zvol_remove_minor(737,17705
zvol_prealloc(780,18608
zvol_update_volsize(825,19691
zvol_set_volsize(860,20452
zvol_set_volblocksize(918,21792
zvol_open(955,22538
zvol_close(1002,23458
zvol_get_done(1042,24254
zvol_get_data(1057,24553
ssize_t zvol_immediate_write_sz 1120,26513
zvol_log_write(1123,26567
zvol_dumpio(1149,27250
zvol_physio(1190,28137
zvol_strategy(1219,28847
zvol_minphys(1327,31451
zvol_dump(1334,31554
zvol_read(1374,32378
zvol_write(1417,33372
zvol_getefi(1472,34671
zvol_ioctl(1533,36513
zvol_busy(1626,38580
zvol_init(1632,38634
zvol_fini(1639,38792
zvol_is_swap(1646,38899
zvol_dump_init(1669,39409
zvol_dumpify(1752,41809
zvol_dump_fini(1811,43016

src/zfs-fuse/util.h,30
#define ZFSFUSE_UTIL_H27,922

src/zfs-fuse/zfs_operations.h,32
#define ZFS_OPERATIONS_H27,924

src/zfs-fuse/zfsfuse_socket.c,473
#define LOCKDIR 46,1268
#define LOCKFILE 47,1300
int cur_fd 49,1338
avl_tree_t fd_avl;51,1356
pthread_mutex_t fd_avl_mtx 52,1375
static int zfsfuse_do_locking(54,1432
zfsfuse_fd_compare(70,1739
int zfsfuse_socket_create(88,2047
void zfsfuse_socket_close(138,3248
int zfsfuse_socket_read_loop(151,3450
int zfsfuse_socket_ioctl_write(172,3826
int xcopyin(190,4162
int copyinstr(215,4719
int xcopyout(258,5641
file_t *getf(getf289,6375
void releasef(370,8044

src/zfs-fuse/fuse_listener.h,91
#define ZFSFUSE_LISTENER_H27,926
typedef struct file_info 35,1042
} file_info_t;38,1095

src/zfs-fuse/fuse_listener.c,772
#define NUM_THREADS 40,1157
#define MAX_FILESYSTEMS 42,1181
typedef struct fuse_fs_info 44,1211
} fuse_fs_info_t;50,1329
boolean_t exit_fuse_listener 52,1348
int newfs_fd[newfs_fd54,1389
#define MAX_FDS 56,1407
int nfds;58,1446
struct pollfd fds[fds59,1456
fuse_fs_info_t fsinfo[fsinfo60,1484
char *mountpoints[mountpoints61,1516
pthread_t fuse_threads[fuse_threads63,1545
pthread_mutex_t mtx 64,1582
kmem_cache_t *file_info_cache file_info_cache66,1632
int zfsfuse_listener_init(68,1671
void zfsfuse_listener_exit(85,1986
int zfsfuse_newfs(94,2131
static int fd_read_loop(120,2762
static void new_fs(146,3230
static void destroy_fs(190,4181
static void *zfsfuse_listener_loop(zfsfuse_listener_loop202,4447
int zfsfuse_listener_start(300,6482

src/zfs-fuse/cmd_listener.c,163
#define MAX_CONNECTIONS 40,1144
boolean_t exit_listener 42,1173
int cmd_ioctl_req(44,1209
int cmd_mount_req(55,1480
void *listener_loop(listener_loop91,2578

src/zfs-fuse/zfs_ioctl.h,27
#define ZFS_IOCTL_H27,947

src/zfs-fuse/zfs_dir.c,399
zfs_match_find(65,1823
zfs_dirent_lock(135,4220
zfs_dirent_unlock(324,9622
zfs_dirlook(358,10440
zfs_unlinked_add(425,12591
zfs_unlinked_drain(441,12944
zfs_purgedir(500,14552
zfs_rmnode(554,15732
zfs_dirent(652,17992
zfs_link_create(664,18233
zfs_link_destroy(714,19664
zfs_dirempty(798,21975
zfs_make_xattrdir(804,22072
zfs_get_xattrdir(870,23836
zfs_sticky_remove_access(941,25563

src/zfs-fuse/zfs_log.c,420
zfs_log_create_txtype(58,1808
zfs_log_xvattr(98,2872
zfs_log_fuid_ids(161,4788
zfs_log_fuid_domains(176,5100
zfs_log_create(214,6307
zfs_log_remove(326,9171
zfs_log_link(350,9663
zfs_log_symlink(376,10220
zfs_log_rename(410,11124
ssize_t zfs_immediate_write_sz 438,11849
#define	ZIL_MAX_LOG_DATA 440,11890
zfs_log_write(444,11993
zfs_log_truncate(542,14872
zfs_log_setattr(567,15396
zfs_log_acl(632,17069

src/zfs-fuse/fuse.h,63
#define ZFSFUSE_FUSE_H27,922
#define FUSE_USE_VERSION 29,946

../fuse-2.5.2/kernel/dev.c,2389
static kmem_cache_t *fuse_req_cachep;fuse_req_cachep24,486
static inline struct fuse_conn *fuse_get_conn(fuse_get_conn26,525
static inline void fuse_request_init(37,744
struct fuse_req *fuse_request_alloc(fuse_request_alloc45,932
void fuse_request_free(53,1100
static inline void block_sigs(59,1208
static inline void restore_sigs(67,1359
static inline void block_sigs(73,1494
static inline void restore_sigs(82,1759
static inline void block_sigs(90,1960
static inline void restore_sigs(99,2224
void fuse_reset_request(109,2433
static void __fuse_get_request(117,2623
static void __fuse_put_request(123,2746
static struct fuse_req *do_get_request(do_get_request129,2869
struct fuse_req *fuse_get_request(fuse_get_request147,3374
static void fuse_putback_request(158,3603
void fuse_put_request(172,3916
static void fuse_put_request_locked(181,4116
void fuse_release_background(187,4273
static void process_init_reply(198,4480
static void request_end(229,5577
static void background_request(285,7711
static void request_wait_answer(298,8070
static unsigned len_args(329,8919
static void queue_request(340,9100
void request_send(366,9933
static void request_send_nowait(385,10369
void request_send_noreply(397,10618
void request_send_background(403,10743
void fuse_send_init(412,10951
static inline int lock_request(439,11926
static inline void unlock_request(458,12303
struct fuse_copy_state 469,12499
static void fuse_copy_init(482,12718
static inline void fuse_copy_finish(494,13030
static int fuse_copy_fill(511,13397
static inline int fuse_copy_do(543,14209
static inline int fuse_copy_page(564,14629
static int fuse_copy_pages(590,15372
static int fuse_copy_one(612,15964
static int fuse_copy_args(624,16237
static void request_wait(642,16704
static inline size_t iov_length(661,17133
static ssize_t fuse_dev_readv(680,17780
static ssize_t fuse_dev_read(749,19387
static struct fuse_req *request_find(request_find759,19655
static int copy_out_args(772,19939
static ssize_t fuse_dev_writev(802,20924
static ssize_t fuse_dev_write(866,22284
static unsigned fuse_dev_poll(875,22523
static void end_requests(894,22955
static int fuse_dev_release(906,23256
struct file_operations fuse_dev_operations 922,23571
static struct miscdevice fuse_miscdevice 933,23832
int __init fuse_dev_init(939,23952
void fuse_dev_cleanup(960,24321

../fuse-2.5.2/kernel/dir.c,2493
static inline unsigned long time_to_jiffies(32,692
static void fuse_change_timeout(43,952
void fuse_invalidate_attr(55,1346
static void fuse_invalidate_entry_cache(68,1715
static void fuse_invalidate_entry(77,1912
static void fuse_lookup_init(83,2032
static int fuse_dentry_revalidate(107,2877
static int dir_alias(154,4048
static inline int invalid_nodeid(174,4404
static int fuse_dentry_revalidate_2_4(179,4515
static struct dentry_operations fuse_dentry_operations 185,4643
static inline int valid_mode(193,4823
static struct dentry *fuse_lookup(fuse_lookup199,4972
static int fuse_create_open(265,6591
static int create_new_entry(357,8860
static int fuse_mknod(406,9891
static int fuse_create(427,10499
static int fuse_mkdir(441,10854
static int fuse_symlink(460,11409
static int fuse_unlink(478,11917
static int fuse_rmdir(510,12820
static int fuse_rename(536,13480
static int fuse_link(584,14938
int fuse_do_getattr(616,15945
static int fuse_allow_task(666,17488
static int fuse_revalidate(691,18137
static int fuse_access(707,18527
static int fuse_permission(753,19710
static int parse_dirfile(803,21067
static inline size_t fuse_send_readdir(828,21652
static int fuse_readdir(835,21870
static char *read_link(read_link870,22656
static void free_link(904,23470
static void *fuse_follow_link(fuse_follow_link911,23590
static void fuse_put_link(917,23721
static int fuse_follow_link(922,23867
static void fuse_put_link(928,23993
static int fuse_readlink(933,24103
static int fuse_follow_link(945,24326
static int fuse_dir_open(957,24527
static int fuse_dir_release(962,24639
static int fuse_dir_fsync(967,24757
static void iattr_to_fattr(973,24940
static int fuse_setattr(1014,26260
static int fuse_getattr(1090,28177
static struct dentry *fuse_lookup_2_4(fuse_lookup_2_41101,28427
static int fuse_mknod_2_4(1106,28550
static int fuse_create_2_4(1112,28691
static int fuse_permission_2_4(1117,28819
static int fuse_setxattr(1125,28997
static ssize_t fuse_getxattr(1168,30049
static ssize_t fuse_listxattr(1219,31284
static int fuse_removexattr(1267,32422
static struct inode_operations fuse_dir_inode_operations 1298,33084
static struct file_operations fuse_dir_operations 1330,33816
static struct inode_operations fuse_common_inode_operations 1339,34043
static struct inode_operations fuse_symlink_inode_operations 1356,34446
void fuse_init_common(1378,34941
void fuse_init_dir(1383,35035
void fuse_init_symlink(1389,35161

../fuse-2.5.2/kernel/file.c,1783
#define PageUptodate(16,310
#define clear_page_dirty(17,357
static inline loff_t page_offset(20,443
static struct file_operations fuse_direct_io_file_operations;25,557
static int fuse_send_open(27,620
struct fuse_file *fuse_file_alloc(fuse_file_alloc57,1413
void fuse_file_free(71,1660
void fuse_finish_open(77,1756
int fuse_open_common(92,2177
void fuse_send_release(130,2961
int fuse_release_common(148,3506
static int fuse_open(161,3842
static int fuse_release(166,3950
static int fuse_flush(171,4064
int fuse_fsync_common(209,4851
static int fuse_fsync(252,5828
size_t fuse_send_read_common(257,5957
static inline size_t fuse_send_read(284,6734
static int fuse_readpage(291,6943
static int fuse_send_readpages(322,7594
struct fuse_readpages_data 339,8062
static int fuse_readpages_fill(345,8160
static int fuse_readpages(368,8800
#define FUSE_BLOCK_SHIFT 393,9482
#define FUSE_BLOCK_SIZE 394,9510
#define FUSE_BLOCK_MASK 395,9560
static int fuse_is_block_uptodate(400,9725
static int fuse_file_read_block(418,10084
static int fuse_file_bigread(456,10933
static size_t fuse_send_write(492,11843
static int fuse_prepare_write(520,12672
static int fuse_commit_write(527,12808
static void fuse_release_user_pages(567,13691
static int fuse_get_user_pages(579,13920
static ssize_t fuse_direct_io(606,14690
static ssize_t fuse_direct_read(666,16012
static ssize_t fuse_direct_write(672,16174
static ssize_t fuse_file_read(691,16677
static int fuse_file_mmap(711,17154
static int fuse_set_page_dirty(723,17421
static struct file_operations fuse_file_operations 731,17562
static struct file_operations fuse_direct_io_file_operations 754,18110
static struct address_space_operations fuse_file_aops 765,18391
void fuse_init_file_inode(775,18651

../fuse-2.5.2/kernel/inode.c,2052
spinlock_t fuse_lock;31,655
static kmem_cache_t *fuse_inode_cachep;fuse_inode_cachep32,677
#define FUSE_SUPER_MAGIC 34,718
#define kstatfs 37,774
#define MAX_LFS_FILESIZE 40,829
struct fuse_mount_data 42,909
static struct inode *fuse_alloc_inode(fuse_alloc_inode55,1164
static void fuse_destroy_inode(80,1655
static void fuse_read_inode(88,1862
void fuse_send_forget(93,1929
static void fuse_clear_inode(106,2326
void fuse_change_attributes(116,2611
static void fuse_init_inode(147,3545
static int fuse_inode_eq(168,4166
static int fuse_inode_set(177,4351
struct inode *fuse_iget(fuse_iget184,4524
static int fuse_inode_eq(222,5464
struct inode *fuse_iget(fuse_iget230,5690
static void fuse_put_super(264,6477
static void convert_fuse_statfs(285,6981
static int fuse_statfs(301,7425
	OPT_FD,328,8061
	OPT_ROOTMODE,329,8070
	OPT_USER_ID,330,8085
	OPT_GROUP_ID,331,8099
	OPT_DEFAULT_PERMISSIONS,332,8114
	OPT_ALLOW_OTHER,333,8140
	OPT_LARGE_READ,335,8177
	OPT_MAX_READ,337,8201
	OPT_ERR338,8216
static match_table_t tokens 341,8229
static int parse_fuse_opt(355,8587
static int fuse_show_options(429,9939
static void free_conn(448,10485
void fuse_release_conn(460,10774
static struct fuse_conn *new_conn(new_conn467,10872
static struct fuse_conn *get_conn(get_conn499,11656
static struct inode *get_root_inode(get_root_inode523,12155
static struct dentry *fuse_get_dentry(fuse_get_dentry534,12413
static int fuse_encode_fh(562,12958
static struct export_operations fuse_export_operations 590,13576
static struct super_operations fuse_super_operations 597,13720
static int fuse_fill_super(607,14014
static struct super_block *fuse_get_sb(fuse_get_sb668,15222
static struct file_system_type fuse_fs_type 675,15436
static struct super_block *fuse_read_super_compat(fuse_read_super_compat682,15589
static void fuse_inode_init_once(695,15870
static int __init fuse_fs_init(705,16110
static void fuse_fs_cleanup(726,16552
static int __init fuse_init(732,16670
static void __exit fuse_exit(759,17109

../fuse-2.5.2/kernel/fuse_i.h,1415
#  define KERNEL_2_621,515
#    define KERNEL_2_6_6_PLUS23,586
#    define KERNEL_2_6_8_PLUS26,675
#    define KERNEL_2_6_9_PLUS29,764
#    define KERNEL_2_6_10_PLUS32,854
#    define KERNEL_2_6_11_PLUS35,945
#    define KERNEL_2_6_12_PLUS38,1036
#    define KERNEL_2_6_13_PLUS41,1127
#    define KERNEL_2_6_16_PLUS44,1218
#     define MODVERSIONS52,1361
#     define i_size_read(56,1458
#     define i_size_write(57,1508
#  define new_decode_dev(59,1596
#  define new_encode_dev(60,1628
#define BUG_ON(74,1930
#define container_of(77,1976
#define __user82,2170
static inline void set_page_dirty_lock(86,2238
#define FUSE_MAX_PAGES_PER_REQ 94,2437
#define FUSE_MAX_OUTSTANDING 97,2544
#define FUSE_NAME_MAX 100,2648
#define FUSE_DEFAULT_PERMISSIONS 105,2863
#define FUSE_ALLOW_OTHER 109,3036
#define FUSE_LARGE_READ 114,3223
struct fuse_inode 118,3292
struct fuse_file 137,3706
struct fuse_in_arg 146,3894
struct fuse_in 152,3980
struct fuse_arg 167,4286
struct fuse_out 173,4364
struct fuse_req 197,4838
struct fuse_conn 272,6461
static inline struct fuse_conn **get_fuse_conn_super_p(get_fuse_conn_super_p365,8481
static inline struct fuse_conn *get_fuse_conn_super(get_fuse_conn_super374,8692
static inline struct fuse_conn *get_fuse_conn(get_fuse_conn379,8809
static inline struct fuse_inode *get_fuse_inode(get_fuse_inode384,8923
static inline u64 get_node_id(389,9052

../fuse-2.5.2/kernel/fuse_kernel.h,2296
#define __u64 41,1779
#define __u32 42,1802
#define __s32 43,1825
#define FUSE_KERNEL_VERSION 49,1924
#define FUSE_KERNEL_MINOR_VERSION 52,2001
#define FUSE_ROOT_ID 55,2075
#define FUSE_MAJOR 58,2152
#define FUSE_MINOR 61,2228
struct fuse_attr 66,2362
struct fuse_kstatfs 83,2585
#define FATTR_MODE	96,2761
#define FATTR_UID	97,2789
#define FATTR_GID	98,2816
#define FATTR_SIZE	99,2843
#define FATTR_ATIME	100,2871
#define FATTR_MTIME	101,2900
#define FATTR_FH	102,2929
#define FOPEN_DIRECT_IO	110,3123
#define FOPEN_KEEP_CACHE	111,3157
enum fuse_opcode 113,3192
	FUSE_LOOKUP	114,3211
	FUSE_FORGET	115,3232
	FUSE_GETATTR	116,3269
	FUSE_SETATTR	117,3291
	FUSE_READLINK	118,3313
	FUSE_SYMLINK	119,3336
	FUSE_MKNOD	120,3358
	FUSE_MKDIR	121,3378
	FUSE_UNLINK	122,3398
	FUSE_RMDIR	123,3420
	FUSE_RENAME	124,3441
	FUSE_LINK	125,3463
	FUSE_OPEN	126,3483
	FUSE_READ	127,3503
	FUSE_WRITE	128,3523
	FUSE_STATFS	129,3544
	FUSE_RELEASE 130,3566
	FUSE_FSYNC 131,3592
	FUSE_SETXATTR 132,3618
	FUSE_GETXATTR 133,3644
	FUSE_LISTXATTR 134,3670
	FUSE_REMOVEXATTR 135,3696
	FUSE_FLUSH 136,3722
	FUSE_INIT 137,3748
	FUSE_OPENDIR 138,3774
	FUSE_READDIR 139,3800
	FUSE_RELEASEDIR 140,3826
	FUSE_FSYNCDIR 141,3852
	FUSE_ACCESS 142,3878
	FUSE_CREATE 143,3904
#define FUSE_MIN_READ_BUFFER 147,4009
struct fuse_entry_out 149,4044
struct fuse_forget_in 160,4385
struct fuse_attr_out 164,4429
struct fuse_mknod_in 171,4576
struct fuse_mkdir_in 176,4629
struct fuse_rename_in 181,4685
struct fuse_link_in 185,4728
struct fuse_setattr_in 189,4772
struct fuse_open_in 208,5036
struct fuse_open_out 213,5089
struct fuse_release_in 219,5162
struct fuse_flush_in 225,5232
struct fuse_read_in 231,5306
struct fuse_write_in 238,5387
struct fuse_write_out 245,5473
#define FUSE_COMPAT_STATFS_SIZE 250,5530
struct fuse_statfs_out 252,5566
struct fuse_fsync_in 256,5620
struct fuse_setxattr_in 262,5694
struct fuse_getxattr_in 267,5751
struct fuse_getxattr_out 272,5810
struct fuse_access_in 277,5870
struct fuse_init_in 282,5927
struct fuse_init_out 287,5981
struct fuse_in_header 294,6072
struct fuse_out_header 305,6209
struct fuse_dirent 311,6279
#define FUSE_NAME_OFFSET 319,6372
#define FUSE_DIRENT_ALIGN(320,6443
#define FUSE_DIRENT_SIZE(321,6523

../fuse-2.5.2/kernel/compat/parser.c,260
#define MODVERSIONS10,244
static int match_one(32,919
int match_token(109,2685
static int match_number(129,3296
int match_int(157,4036
int match_octal(171,4493
int match_hex(185,4952
void match_strcpy(199,5378
char *match_strdup(match_strdup213,5784

../fuse-2.5.2/kernel/compat/parser.h,152
struct match_token 12,300
typedef struct match_token match_table_t[match_table_t17,353
enum {MAX_OPT_ARGS MAX_OPT_ARGS20,472
} substring_t;26,598

../fuse-2.5.2/kernel/config.h,236
#define HAVE_KERNEL_XATTR 8,229
#define HAVE_LOOKUP_INSTANTIATE_FILP 11,301
#define PACKAGE_BUGREPORT 17,511
#define PACKAGE_NAME 20,588
#define PACKAGE_STRING 23,683
#define PACKAGE_TARNAME 26,786
#define PACKAGE_VERSION 29,870

../fuse-2.5.2/include/old/fuse.h,0

../fuse-2.5.2/include/fuse.h,1454
#define _FUSE_H_10,222
#define FUSE_USE_VERSION 20,589
typedef int (*fuse_fill_dir_t)fuse_fill_dir_t52,1398
typedef struct fuse_dirhandle *fuse_dirh_t;fuse_dirh_t56,1571
typedef int (*fuse_dirfil_t)fuse_dirfil_t57,1615
struct fuse_operations 74,2331
struct fuse_context 370,12218
#define fuse_main(412,13433
typedef void (*fuse_processor_t)fuse_processor_t507,15882
#    define FUSE_MINOR_VERSION 545,17358
#    define fuse_main(546,17391
#    define fuse_new 548,17498
#    define fuse_setup 549,17537
#    define fuse_operations 550,17580
#    define fuse_file_info 551,17633
#    define fuse_mount 552,17684
#    define fuse_dirfil_t 554,17735
#    define __fuse_read_cmd 555,17782
#    define __fuse_process_cmd 556,17824
#    define __fuse_loop_mt 557,17872
#      define FUSE_MINOR_VERSION 559,17948
#      define fuse_operations 560,17983
#      define fuse_main 561,18037
#      define fuse_new 562,18079
#      define __fuse_setup 563,18119
#      define __fuse_teardown 564,18165
#      define __fuse_exited 565,18209
#      define __fuse_set_getcontext_func 566,18249
#      define fuse_mount 567,18315
#      define FUSE_MAJOR_VERSION 571,18465
#      define FUSE_MINOR_VERSION 572,18500
#      define fuse_statfs 573,18535
#      define fuse_operations 574,18581
#      define fuse_main 575,18635
#      define fuse_new 576,18677
#      define fuse_mount 577,18717
#      define FUSE_DEBUG 578,18761

../fuse-2.5.2/include/fuse_compat.h,299
struct fuse_file_info_compat22 14,341
struct fuse_operations_compat22 22,499
typedef int (*fuse_dirfil_t_compat)fuse_dirfil_t_compat74,3051
struct fuse_operations_compat2 75,3132
struct fuse_statfs_compat1 109,4845
struct fuse_operations_compat1 118,4993
#define FUSE_DEBUG_COMPAT1 141,6011

../fuse-2.5.2/include/fuse_common.h,194
#define _FUSE_COMMON_H_14,382
#define FUSE_MAJOR_VERSION 20,497
#define FUSE_MINOR_VERSION 23,574
#define FUSE_MAKE_VERSION(25,604
#define FUSE_VERSION 26,662
struct fuse_file_info 42,990

../fuse-2.5.2/include/fuse_lowlevel.h,733
#define _FUSE_LOWLEVEL_H_10,231
#define FUSE_USE_VERSION 21,692
#define FUSE_ROOT_ID 41,1139
typedef unsigned long fuse_ino_t;44,1188
typedef struct fuse_req *fuse_req_t;fuse_req_t47,1251
struct fuse_entry_param 65,1581
struct fuse_ctx 90,2281
#define FUSE_SET_ATTR_MODE	102,2511
#define FUSE_SET_ATTR_UID	103,2547
#define FUSE_SET_ATTR_GID	104,2582
#define FUSE_SET_ATTR_SIZE	105,2617
#define FUSE_SET_ATTR_ATIME	106,2653
#define FUSE_SET_ATTR_MTIME	107,2690
struct fuse_lowlevel_ops 134,3802
struct fuse_session_ops 964,28756
struct fuse_chan_ops 1101,32245
#  define FUSE_MINOR_VERSION 1243,36127
#  define fuse_file_info 1244,36158
#  define fuse_reply_statfs 1245,36205
#  define fuse_reply_open 1246,36258

../fuse-2.5.2/include/fuse_lowlevel_compat.h,37
struct fuse_file_info_compat 14,341

../fuse-2.5.2/include/fuse_opt.h,303
#define _FUSE_OPT_H_10,221
struct fuse_opt 73,2100
#define FUSE_OPT_KEY(94,2607
#define FUSE_OPT_END 100,2755
struct fuse_args 105,2820
#define FUSE_ARGS_INIT(119,3044
#define FUSE_OPT_KEY_OPT 125,3196
#define FUSE_OPT_KEY_NONOPT 133,3431
typedef int (*fuse_opt_proc_t)fuse_opt_proc_t160,4457

../fuse-2.5.2/include/fuse_kernel.h,2296
#define __u64 41,1779
#define __u32 42,1802
#define __s32 43,1825
#define FUSE_KERNEL_VERSION 49,1924
#define FUSE_KERNEL_MINOR_VERSION 52,2001
#define FUSE_ROOT_ID 55,2075
#define FUSE_MAJOR 58,2152
#define FUSE_MINOR 61,2228
struct fuse_attr 66,2362
struct fuse_kstatfs 83,2585
#define FATTR_MODE	96,2761
#define FATTR_UID	97,2789
#define FATTR_GID	98,2816
#define FATTR_SIZE	99,2843
#define FATTR_ATIME	100,2871
#define FATTR_MTIME	101,2900
#define FATTR_FH	102,2929
#define FOPEN_DIRECT_IO	110,3123
#define FOPEN_KEEP_CACHE	111,3157
enum fuse_opcode 113,3192
	FUSE_LOOKUP	114,3211
	FUSE_FORGET	115,3232
	FUSE_GETATTR	116,3269
	FUSE_SETATTR	117,3291
	FUSE_READLINK	118,3313
	FUSE_SYMLINK	119,3336
	FUSE_MKNOD	120,3358
	FUSE_MKDIR	121,3378
	FUSE_UNLINK	122,3398
	FUSE_RMDIR	123,3420
	FUSE_RENAME	124,3441
	FUSE_LINK	125,3463
	FUSE_OPEN	126,3483
	FUSE_READ	127,3503
	FUSE_WRITE	128,3523
	FUSE_STATFS	129,3544
	FUSE_RELEASE 130,3566
	FUSE_FSYNC 131,3592
	FUSE_SETXATTR 132,3618
	FUSE_GETXATTR 133,3644
	FUSE_LISTXATTR 134,3670
	FUSE_REMOVEXATTR 135,3696
	FUSE_FLUSH 136,3722
	FUSE_INIT 137,3748
	FUSE_OPENDIR 138,3774
	FUSE_READDIR 139,3800
	FUSE_RELEASEDIR 140,3826
	FUSE_FSYNCDIR 141,3852
	FUSE_ACCESS 142,3878
	FUSE_CREATE 143,3904
#define FUSE_MIN_READ_BUFFER 147,4009
struct fuse_entry_out 149,4044
struct fuse_forget_in 160,4385
struct fuse_attr_out 164,4429
struct fuse_mknod_in 171,4576
struct fuse_mkdir_in 176,4629
struct fuse_rename_in 181,4685
struct fuse_link_in 185,4728
struct fuse_setattr_in 189,4772
struct fuse_open_in 208,5036
struct fuse_open_out 213,5089
struct fuse_release_in 219,5162
struct fuse_flush_in 225,5232
struct fuse_read_in 231,5306
struct fuse_write_in 238,5387
struct fuse_write_out 245,5473
#define FUSE_COMPAT_STATFS_SIZE 250,5530
struct fuse_statfs_out 252,5566
struct fuse_fsync_in 256,5620
struct fuse_setxattr_in 262,5694
struct fuse_getxattr_in 267,5751
struct fuse_getxattr_out 272,5810
struct fuse_access_in 277,5870
struct fuse_init_in 282,5927
struct fuse_init_out 287,5981
struct fuse_in_header 294,6072
struct fuse_out_header 305,6209
struct fuse_dirent 311,6279
#define FUSE_NAME_OFFSET 319,6372
#define FUSE_DIRENT_ALIGN(320,6443
#define FUSE_DIRENT_SIZE(321,6523

../fuse-2.5.2/include/config.h,680
#define HAVE_DLFCN_H 5,180
#define HAVE_FDATASYNC 8,260
#define HAVE_FORK 11,337
#define HAVE_INTTYPES_H 14,418
#define HAVE_MEMORY_H 17,503
#define HAVE_SETXATTR 20,583
#define HAVE_STDINT_H 23,666
#define HAVE_STDLIB_H 26,749
#define HAVE_STRINGS_H 29,833
#define HAVE_STRING_H 32,917
#define HAVE_STRUCT_STAT_ST_ATIM 35,1001
#define HAVE_SYS_STAT_H 38,1097
#define HAVE_SYS_TYPES_H 41,1185
#define HAVE_UNISTD_H 44,1271
#define PACKAGE 50,1373
#define PACKAGE_BUGREPORT 53,1476
#define PACKAGE_NAME 56,1553
#define PACKAGE_STRING 59,1641
#define PACKAGE_TARNAME 62,1737
#define PACKAGE_VERSION 65,1814
#define STDC_HEADERS 68,1902
#define VERSION 71,1958

../fuse-2.5.2/lib/fuse.c,4532
#define _GNU_SOURCE11,232
#define FUSE_MAX_PATH 30,566
#define FUSE_UNKNOWN_INO 32,594
struct fuse_config 34,631
struct fuse 52,972
struct node 69,1361
struct fuse_dirhandle 82,1601
#define mutex_init(104,2223
static void mutex_init(106,2283
static struct node *get_node_nocheck(get_node_nocheck116,2544
static struct node *get_node(get_node128,2840
static void free_node(139,3135
static void unhash_id(145,3219
static void hash_id(157,3530
static unsigned int name_hash(164,3710
static void unhash_name(177,4048
static int hash_name(199,4778
static void delete_node(214,5174
static void unref_node(225,5432
static fuse_ino_t next_id(233,5599
static struct node *lookup_node(lookup_node243,5809
static struct node *find_node(find_node256,6188
static char *add_name(add_name286,6963
static char *get_path_name(get_path_name301,7251
static char *get_path(get_path337,8070
static void forget_node(342,8175
static void remove_node(358,8589
static int rename_node(369,8852
static void set_stat(405,9697
static int is_open(417,10064
static char *hidden_name(hidden_name429,10366
static int hide_node(471,11428
static int lookup_path(490,11958
static struct fuse *req_fuse(req_fuse522,12925
static struct fuse *req_fuse_prepare(req_fuse_prepare527,13026
static inline void reply_err(540,13346
static void reply_entry(546,13493
static void fuse_data_init(556,13761
static void fuse_data_destroy(568,14003
static void fuse_lookup(581,14287
static void fuse_forget(611,15130
static void fuse_getattr(622,15437
static int do_chmod(649,16085
static int do_chown(660,16282
static int do_truncate(674,16651
static int do_utime(688,16999
static void fuse_setattr(701,17277
static void fuse_access(737,18509
static void fuse_readlink(760,19072
static void fuse_mknod(784,19678
static void fuse_mkdir(823,20897
static void fuse_unlink(851,21663
static void fuse_rmdir(881,22482
static void fuse_symlink(907,23130
static void fuse_rename(935,23919
static void fuse_link(973,25134
static void fuse_create(1006,26104
static void fuse_open(1066,27993
static void fuse_read(1110,29227
static void fuse_write(1156,30402
static void fuse_flush(1195,31553
static void fuse_release(1219,32166
static void fuse_fsync(1254,33054
static struct fuse_dirhandle *get_dirhandle(get_dirhandle1278,33691
static void fuse_opendir(1288,34037
static int fill_dir_common(1345,35609
static int fill_dir(1401,37037
static int fill_dir_old(1407,37225
static int readdir_fill(1420,37527
static void fuse_readdir(1448,38319
static void fuse_releasedir(1483,39247
static void fuse_fsyncdir(1506,39922
static int default_statfs(1529,40502
static void fuse_statfs(1536,40618
static void fuse_setxattr(1554,40985
static int common_getxattr(1574,41533
static void fuse_getxattr(1593,42006
static int common_listxattr(1620,42711
static void fuse_listxattr(1639,43162
static void fuse_removexattr(1665,43811
static struct fuse_lowlevel_ops fuse_path_ops 1684,44279
static void free_cmd(1718,45206
void fuse_process_cmd(1724,45289
int fuse_exited(1730,45438
struct fuse_session *fuse_get_session(fuse_get_session1735,45514
static struct fuse_cmd *fuse_alloc_cmd(fuse_alloc_cmd1740,45591
struct fuse_cmd *fuse_read_cmd(fuse_read_cmd1756,46027
int fuse_loop(1775,46536
int fuse_invalidate(1783,46651
void fuse_exit(1790,46761
struct fuse_context *fuse_get_context(fuse_get_context1795,46827
void fuse_set_getcontext_func(1804,47005
    KEY_HELP,1810,47111
    KEY_KEEP1811,47125
#define FUSE_LIB_OPT(1814,47142
static const struct fuse_opt fuse_lib_opts[fuse_lib_opts1816,47215
static void fuse_lib_help(1840,48399
static int fuse_lib_opt_proc(1857,49252
int fuse_is_lib_option(1869,49492
struct fuse *fuse_new_common(fuse_new_common1875,49628
struct fuse *fuse_new(fuse_new1977,52301
void fuse_destroy(1983,52486
static int fuse_do_open(2019,53347
static void fuse_do_release(2036,53888
static int fuse_do_opendir(2045,54186
static void convert_statfs_compat(2061,54646
static void convert_statfs_old(2073,55093
static int fuse_do_statfs(2084,55459
static struct fuse *fuse_new_common_compat(fuse_new_common_compat2105,56120
struct fuse *fuse_new_compat22(fuse_new_compat222125,56740
struct fuse *fuse_new_compat2(fuse_new_compat22133,57046
struct fuse *fuse_new_compat1(fuse_new_compat12140,57333
static int fuse_do_open(2159,58059
static void fuse_do_release(2164,58176
static int fuse_do_opendir(2170,58333
static int fuse_do_statfs(2176,58483

../fuse-2.5.2/lib/fuse_i.h,24
struct fuse_cmd 14,263

../fuse-2.5.2/lib/fuse_kern_chan.c,220
static int fuse_kern_chan_receive(17,336
static int fuse_kern_chan_send(43,1143
static void fuse_kern_chan_destroy(62,1655
#define MIN_BUFSIZE 67,1746
struct fuse_chan *fuse_kern_chan_new(fuse_kern_chan_new69,1775

../fuse-2.5.2/lib/fuse_loop.c,30
int fuse_session_loop(14,272

../fuse-2.5.2/lib/fuse_loop_mt.c,263
#define FUSE_MAX_WORKERS 20,395
struct fuse_worker 22,424
#define mutex_init(36,713
static void mutex_init(38,773
static int fuse_loop_mt_send(48,1034
static void *do_work(do_work60,1441
static int start_thread(118,3168
int fuse_session_loop_mt(141,3799

../fuse-2.5.2/lib/fuse_lowlevel.c,2670
#define PARAM(22,438
struct fuse_ll 24,499
struct fuse_req 35,673
static const char *opname(opname42,790
static void convert_stat(79,2125
static void convert_attr(99,2803
static  size_t iov_length(113,3266
static void free_req(123,3460
static int send_reply(128,3517
size_t fuse_dirent_size(164,4437
char *fuse_add_dirent(fuse_add_dirent169,4540
static void convert_statfs(189,5160
static int send_reply_ok(202,5584
int fuse_reply_err(207,5708
void fuse_reply_none(212,5800
static unsigned long calc_timeout_sec(217,5861
static unsigned int calc_timeout_nsec(227,6055
static void fill_entry(238,6301
static void fill_open(250,6761
int fuse_reply_entry(260,7024
int fuse_reply_create(274,7414
int fuse_reply_attr(288,7772
int fuse_reply_readlink(301,8142
int fuse_reply_open(306,8268
int fuse_reply_write(315,8480
int fuse_reply_buf(325,8675
int fuse_reply_statfs(330,8787
int fuse_reply_xattr(341,9083
static void do_lookup(351,9281
static void do_forget(359,9474
static void do_getattr(366,9667
static void do_setattr(374,9851
static void do_access(395,10522
static void do_readlink(404,10758
static void do_mknod(412,10939
static void do_mkdir(421,11193
static void do_unlink(430,11436
static void do_rmdir(438,11629
static void do_symlink(446,11819
static void do_rename(455,12064
static void do_link(467,12404
static void do_create(476,12647
static void do_open(490,13005
static void do_read(504,13314
static void do_write(518,13685
static void do_flush(535,14127
static void do_release(550,14460
static void do_fsync(566,14825
static void do_opendir(581,15186
static void do_readdir(595,15507
static void do_releasedir(610,15871
static void do_fsyncdir(626,16248
static void do_statfs(641,16621
static void do_setxattr(649,16769
static void do_getxattr(662,17156
static void do_listxattr(671,17414
static void do_removexattr(680,17664
static void do_init(688,17872
void *fuse_req_userdata(fuse_req_userdata723,18809
const struct fuse_ctx *fuse_req_ctx(fuse_req_ctx728,18883
static void fuse_ll_process(733,18962
    KEY_HELP,897,23505
    KEY_VERSION,898,23519
static struct fuse_opt fuse_ll_opts[fuse_ll_opts901,23540
static void fuse_ll_version(912,23922
static int fuse_ll_opt_proc(918,24089
int fuse_lowlevel_is_lib_option(938,24464
static void fuse_ll_destroy(943,24564
struct fuse_session *fuse_lowlevel_new(fuse_lowlevel_new953,24732
static void fill_open_compat(998,25867
static void convert_statfs_compat(1008,26144
int fuse_reply_open_compat(1020,26551
int fuse_reply_statfs_compat(1030,26811
struct fuse_session *fuse_lowlevel_new_compat(fuse_lowlevel_new_compat1040,27045

../fuse-2.5.2/lib/fuse_mt.c,567
static pthread_key_t context_key;18,354
static pthread_mutex_t context_lock 19,388
static int context_ref;20,453
static struct fuse_context *mt_getcontext(mt_getcontext22,478
static void mt_freecontext(38,939
static int mt_create_context_key(43,999
static void mt_delete_context_key(61,1487
struct procdata 73,1790
static void mt_session_proc(81,1938
static void mt_session_exit(92,2239
static int mt_session_exited(101,2446
static int mt_chan_receive(107,2588
static int mt_chan_send(123,2927
int fuse_loop_mt_proc(130,3159
int fuse_loop_mt(178,4326

../fuse-2.5.2/lib/fuse_opt.c,756
struct fuse_opt_context 16,307
void fuse_opt_free_args(28,520
static int alloc_failed(40,799
int fuse_opt_add_arg(46,906
static int next_arg(65,1370
static int add_arg(75,1609
int fuse_opt_add_opt(80,1729
static int add_opt(100,2173
static int insert_arg(105,2290
static int call_proc(120,2765
static int match_template(134,3114
static const struct fuse_opt *find_opt(find_opt155,3635
int fuse_opt_match(164,3908
static int process_opt_param(170,4046
static int process_opt(189,4547
static int process_opt_sep_arg(211,5251
static int process_gopt(235,5830
static int process_real_option_group(254,6448
static int process_option_group(272,6795
static int process_one(290,7216
static int opt_parse(312,7874
int fuse_opt_parse(336,8513

../fuse-2.5.2/lib/fuse_session.c,718
struct fuse_session 16,312
struct fuse_chan 26,440
struct fuse_session *fuse_session_new(fuse_session_new38,573
void fuse_session_add_chan(53,932
struct fuse_chan *fuse_session_next_chan(fuse_session_next_chan61,1101
void fuse_session_process(71,1348
void fuse_session_destroy(77,1525
void fuse_session_exit(86,1712
void fuse_session_reset(93,1840
int fuse_session_exited(100,1969
struct fuse_chan *fuse_chan_new(fuse_chan_new108,2122
int fuse_chan_fd(126,2566
size_t fuse_chan_bufsize(131,2629
void *fuse_chan_data(fuse_chan_data136,2705
struct fuse_session *fuse_chan_session(fuse_chan_session141,2774
int fuse_chan_receive(146,2859
int fuse_chan_send(151,2974
void fuse_chan_destroy(156,3100

../fuse-2.5.2/lib/fuse_signals.c,219
static struct fuse_session *fuse_instance;fuse_instance15,292
static void exit_handler(17,336
static int set_one_signal_handler(24,456
int fuse_set_signal_handlers(47,1005
void fuse_remove_signal_handlers(59,1365

../fuse-2.5.2/lib/helper.c,930
    KEY_HELP,22,423
    KEY_HELP_NOHEADER,23,437
    KEY_VERSION,24,460
    KEY_KEEP,25,477
struct helper_opts 28,495
#define FUSE_HELPER_OPT(35,600
static const struct fuse_opt fuse_helper_opts[fuse_helper_opts37,673
static void usage(55,1344
static void helper_help(67,1710
static void helper_version(78,2043
static int fuse_helper_opt_proc(83,2149
static int add_default_fsname(115,2884
int fuse_parse_cmdline(136,3468
static int fuse_daemonize(168,4226
static struct fuse *fuse_setup_common(fuse_setup_common189,4714
struct fuse *fuse_setup(fuse_setup236,5961
void fuse_teardown(245,6302
static int fuse_main_common(255,6520
int fuse_main_real(282,7147
int fuse_main(289,7338
struct fuse *fuse_setup_compat22(fuse_setup_compat22299,7493
struct fuse *fuse_setup_compat2(fuse_setup_compat2308,7907
int fuse_main_real_compat22(318,8363
void fuse_main_compat1(326,8648
int fuse_main_compat2(333,8894

../fuse-2.5.2/lib/mount.c,530
#define FUSERMOUNT_PROG 23,455
#define FUSE_COMMFD_ENV 24,500
    KEY_KERN,27,555
    KEY_ALLOW_ROOT,28,569
    KEY_RO,29,589
    KEY_HELP,30,601
    KEY_VERSION,31,615
struct mount_opts 34,636
static const struct fuse_opt fuse_mount_opts[fuse_mount_opts41,740
static void mount_help(72,2231
static void mount_version(86,2832
static int fuse_mount_opt_proc(91,2911
static int receive_fd(127,3678
void fuse_unmount(168,4640
int fuse_mount_compat22(202,5242
int fuse_mount(263,6542
int fuse_mount_compat1(287,7113

../fuse-2.5.2/lib/mount_bsd.c,469
#define FUSERMOUNT_PROG 21,402
#define FUSE_DEV_TRUNK 22,449
    KEY_ALLOW_ROOT,25,501
    KEY_RO,26,521
    KEY_HELP,27,533
    KEY_VERSION,28,547
    KEY_KERN29,564
struct mount_opts 32,581
static const struct fuse_opt fuse_mount_opts[fuse_mount_opts39,685
static void mount_help(111,4304
static void mount_version(120,4501
static int fuse_mount_opt_proc(125,4580
void fuse_unmount(157,5293
static int fuse_mount_core(190,6132
int fuse_mount(275,7768

../fuse-2.5.2/util/fusermount.c,1731
#define FUSE_COMMFD_ENV 42,1031
#define FUSE_DEV_OLD 44,1079
#define FUSE_DEV_NEW 45,1120
#define FUSE_VERSION_FILE_OLD 46,1153
#define FUSE_CONF 47,1207
#define MS_DIRSYNC 50,1262
static const char *progname;progname53,1293
static int user_allow_other 55,1323
static int mount_max 56,1356
static const char *get_user_name(get_user_name58,1386
static uid_t oldfsuid;69,1656
static gid_t oldfsgid;70,1679
static void drop_privs(72,1703
static void restore_privs(80,1846
static int do_unmount(88,1970
static int lock_mtab(102,2382
static void unlock_mtab(119,2817
static int check_name(131,3156
static int add_mount(144,3445
static int unmount_rename(180,4356
static int unmount_fuse(197,4764
static int count_fuse_fs(305,7643
static int lock_mtab(326,8134
static void unlock_mtab(331,8176
static int count_fuse_fs(336,8240
static int add_mount(341,8286
static int unmount_fuse(351,8489
static void strip_line(357,8622
static void parse_line(369,8950
static void read_conf(381,9322
static int begins_with(410,10242
struct mount_flags 418,10390
static struct mount_flags mount_flags[mount_flags425,10486
static int find_mount_flag(442,11079
static int add_option(462,11666
static int get_mnt_opts(482,12226
static int opt_eq(514,13080
static int check_mountpoint_empty(522,13250
static int do_mount(554,14188
static int check_version(673,18139
static int check_perm(703,18854
static int try_open(787,21474
static int try_open_fuse_device(806,21979
static int open_fuse_device(825,22282
static int mount_fuse(839,22565
static char *resolve_path(resolve_path918,24403
static int send_fd(984,26161
static void usage(1020,27179
static void show_version(1035,27607
int main(1041,27713

../fuse-2.5.2/example/fusexmp.c,896
#define _XOPEN_SOURCE 13,261
static int xmp_getattr(27,482
static int xmp_access(38,649
static int xmp_readlink(49,805
static int xmp_readdir(62,1010
static int xmp_mknod(88,1569
static int xmp_mkdir(108,2057
static int xmp_unlink(119,2214
static int xmp_rmdir(130,2354
static int xmp_symlink(141,2492
static int xmp_rename(152,2654
static int xmp_link(163,2814
static int xmp_chmod(174,2970
static int xmp_chown(185,3127
static int xmp_truncate(196,3298
static int xmp_utime(207,3460
static int xmp_open(219,3625
static int xmp_read(231,3815
static int xmp_write(250,4170
static int xmp_statfs(269,4534
static int xmp_release(280,4705
static int xmp_fsync(290,4917
static int xmp_setxattr(304,5281
static int xmp_getxattr(313,5526
static int xmp_listxattr(322,5745
static int xmp_removexattr(330,5920
static struct fuse_operations xmp_oper 339,6111
int main(369,6847

../fuse-2.5.2/example/fusexmp_fh.c,1107
#define _GNU_SOURCE11,221
static int xmp_getattr(24,429
static int xmp_fgetattr(35,596
static int xmp_access(49,835
static int xmp_readlink(60,991
static int xmp_opendir(72,1195
static inline DIR *get_dirp(get_dirp82,1388
static int xmp_readdir(87,1487
static int xmp_releasedir(107,1992
static int xmp_mknod(115,2145
static int xmp_mkdir(129,2391
static int xmp_unlink(140,2548
static int xmp_rmdir(151,2688
static int xmp_symlink(162,2826
static int xmp_rename(173,2988
static int xmp_link(184,3148
static int xmp_chmod(195,3304
static int xmp_chown(206,3461
static int xmp_truncate(217,3632
static int xmp_ftruncate(228,3794
static int xmp_utime(242,4030
static int xmp_create(253,4194
static int xmp_open(265,4403
static int xmp_read(277,4591
static int xmp_write(290,4852
static int xmp_statfs(303,5122
static int xmp_release(314,5293
static int xmp_fsync(322,5417
static int xmp_setxattr(344,5857
static int xmp_getxattr(353,6102
static int xmp_listxattr(362,6321
static int xmp_removexattr(370,6496
static struct fuse_operations xmp_oper 379,6687
int main(414,7573

../fuse-2.5.2/example/hello.c,292
static const char *hello_str hello_str15,296
static const char *hello_path hello_path16,345
static int hello_getattr(18,388
static int hello_readdir(38,840
static int hello_open(54,1200
static int hello_read(65,1410
static struct fuse_operations hello_oper 84,1849
int main(91,2006

../fuse-2.5.2/example/hello_ll.c,500
static const char *hello_str hello_str18,365
static const char *hello_name hello_name19,414
static int hello_stat(21,456
static void hello_ll_getattr(42,855
static void hello_ll_lookup(56,1183
struct dirbuf 73,1595
static void dirbuf_add(78,1645
#define min(89,1991
static int reply_buf_limited(91,2034
static void hello_ll_readdir(100,2326
static void hello_ll_open(119,2800
static void hello_ll_read(130,3092
static struct fuse_lowlevel_ops hello_ll_oper 139,3338
int main(147,3556

../fuse-2.5.2/example/null.c,222
static int null_getattr(15,296
static int null_truncate(31,696
static int null_open(41,844
static int null_read(51,1001
static int null_write(64,1255
static struct fuse_operations null_oper 77,1516
int main(85,1695
